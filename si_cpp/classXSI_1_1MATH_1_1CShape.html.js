var topic = "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n\
<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/lib/jquery-1.9.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><script type=\"text/javascript\" src=\"../scripts/utils/adsk.redirect.js\"></script>\n\
      <title>CShape Class Reference</title>\n\
   \n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"si_cpp/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"si_cpp/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"si_cpp/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/yepnope.1.5.4-min.js\"); });</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var weAreIn21 = $(\"div#main.view-active\").length;\n\
var prefix = \"\";\n\
if (weAreIn21)\n\
{ prefix = \"si_cpp/\"; }\n\
yepnope([{\n\
load:[prefix + \"jquery.js\", prefix + \"navtree.js\", prefix + \"resize.js\", prefix + \"dynsections.js\"],\n\
complete: function() {\n\
  dQuery = jQuery.noConflict(\'true\');\n\
  dQuery(window).load(resizeHeight);\n\
  dQuery(document).ready( function () {\n\
    setTimeout( function () {\n\
      initResizable();\n\
      initNavTree(\'classXSI_1_1MATH_1_1CShape.html\', prefix);\n\
      dQuery(window).trigger(\"load\");\n\
      }, 100);\n\
    }\n\
  );\n\
}\n\
}]\n\
)\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>CShape Class Reference</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.6 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./si_cpp/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./si_cpp/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/files.html\"><span>Files</span></a></li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./si_cpp/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"summary\">\n\
<a href=\"#nested-classes\">Classes</a> &#124;\n\
<a href=\"#pub-methods\">Public Member Functions</a>  </div>\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">CShape Class Reference</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\"><div class=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"closed.png\" alt=\"+\"> This reference page is linked to from the following overview topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><a href=\"#!/url=./files/GUID-8C3CA328-5C39-44FC-A630-7D020541DB61.htm\">Softimage 2014</a>.</div></div><hr>\n\
\n\
<p><code>#include &lt;<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/xsi__shape_8h_source.html\">xsi_shape.h</a>&gt;</code></p>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Class Description</h2>\n\
<div class=\"textblock\"><p>A class representing primitive types for particles rendering. Shape objects are read-only and can be accessed with <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\" title=\"The ICEAttribute object represents an attribute data set (a collection of information used in the ICE...\">ICEAttribute</a> properties such as <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#ad3dbef6ba77d93eb5f0711806de62736\">ICEAttribute::GetDataArray</a> and <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#ac6e52dd6db12632e390ee738cca58187\">ICEAttribute::GetDataArray2D</a>. </p>\n\
<dl class=\"section see\"><dt>See Also</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/CDataArrayTypedefs.html#CDataArrayShape\">CDataArrayShape</a> </dd></dl>\n\
<dl class=\"section since\"><dt>Since</dt><dd>7.0</dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>This example shows how to access the shape attributes data from a cloud primitive. <div class=\"fragment\"><div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent )</div>\n\
<div class=\"line\">CRefArray ApplyOp( <span class=\"keyword\">const</span> CString&amp; in_presetobj, CString &amp; io_connectionset, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2c\">siConstructionMode</a>&amp; in_constructionmode );</div>\n\
<div class=\"line\">CValue AddICENode( <span class=\"keyword\">const</span> CValue&amp;  in_presetobj, <span class=\"keyword\">const</span> CValue&amp;  in_container );</div>\n\
<div class=\"line\">CValue SetValue( <span class=\"keyword\">const</span> CString&amp; in_target, <span class=\"keyword\">const</span> CValue&amp;  in_value, <span class=\"keyword\">const</span> CValue&amp;  in_time = CValue() );</div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> AddAttributeToSetDataICENode( <span class=\"keyword\">const</span> CValue&amp;  in_setdatanode, <span class=\"keyword\">const</span> CString&amp; in_attributename, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a2da2bd136387a53c1842cb895ad50461\">siComponentDataType</a> in_attributetype, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#af03a677dd9104f2cfe9268e6a7ec0ecf\">siComponentDataContext</a> in_attributecontext, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a80f7d32b5521d6ff84022a99ef572d3d\">siComponentDataStructure</a> in_attributestructure );</div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ConnectICENodes( <span class=\"keyword\">const</span> CValue&amp;  in_inputport, <span class=\"keyword\">const</span> CValue&amp;  in_outputport );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">Application xsi;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CreatePrim( L<span class=\"stringliteral\">&quot;Grid&quot;</span>, L<span class=\"stringliteral\">&quot;PointCloud&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">Selection selection = xsi.GetSelection();</div>\n\
<div class=\"line\">X3DObject grid = selection[0];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Create shape reference types</span></div>\n\
<div class=\"line\">CString strGrid(L<span class=\"stringliteral\">&quot;grid&quot;</span>);</div>\n\
<div class=\"line\">ApplyOp( L<span class=\"stringliteral\">&quot;ICETree&quot;</span>, strGrid, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2ca2598cf5c4d689ff7cc059ce14a7a0818\">siConstructionModeModeling</a> );</div>\n\
<div class=\"line\">AddICENode( L<span class=\"stringliteral\">&quot;SetData&quot;</span>, L<span class=\"stringliteral\">&quot;grid.pointcloud.ICETree&quot;</span>);</div>\n\
<div class=\"line\">SetValue( L<span class=\"stringliteral\">&quot;grid.pointcloud.ICETree.SetData.PredefinedAttributeName&quot;</span>, L<span class=\"stringliteral\">&quot;Shape&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\">AddAttributeToSetDataICENode(L<span class=\"stringliteral\">&quot;grid.pointcloud.ICETree.SetData&quot;</span>, L<span class=\"stringliteral\">&quot;Shape&quot;</span>, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a2da2bd136387a53c1842cb895ad50461af5a3fc78eb83e120b40bcaed3ad0205e\">siComponentDataTypeShape</a>, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#af03a677dd9104f2cfe9268e6a7ec0ecface3f48552caadac08ce4fab8743eb514\">siComponentDataContextComponent0D</a>, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a80f7d32b5521d6ff84022a99ef572d3da17acb01c619d049dac4490c582c5d5c7\">siComponentDataStructureSingle</a>);</div>\n\
<div class=\"line\">SetValue(L<span class=\"stringliteral\">&quot;grid.pointcloud.ICETree.SetData.shape&quot;</span>, 5, L<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\">ConnectICENodes(L<span class=\"stringliteral\">&quot;grid.pointcloud.ICETree.port1&quot;</span>, L<span class=\"stringliteral\">&quot;grid.pointcloud.ICETree.SetData.set&quot;</span>);</div>\n\
<div class=\"line\">AddICENode( L<span class=\"stringliteral\">&quot;InstanceShapeNode&quot;</span>, L<span class=\"stringliteral\">&quot;grid.pointcloud.ICETree&quot;</span> );</div>\n\
<div class=\"line\">CreatePrim( L<span class=\"stringliteral\">&quot;Cylinder&quot;</span>, L<span class=\"stringliteral\">&quot;MeshSurface&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span> );</div>\n\
<div class=\"line\">SetValue( L<span class=\"stringliteral\">&quot;grid.pointcloud.ICETree.ShapeInstancingNode.Reference&quot;</span>, L<span class=\"stringliteral\">&quot;cylinder&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span> );</div>\n\
<div class=\"line\">ConnectICENodes( L<span class=\"stringliteral\">&quot;grid.pointcloud.ICETree.SetData.shape&quot;</span>, L<span class=\"stringliteral\">&quot;grid.pointcloud.ICETree.ShapeInstancingNode.shape&quot;</span> );</div>\n\
<div class=\"line\">ConnectICENodes( L<span class=\"stringliteral\">&quot;grid.pointcloud.ICETree.port2&quot;</span>, L<span class=\"stringliteral\">&quot;grid.pointcloud.ICETree.SetData.set&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CRefArray attrs = grid.GetActivePrimitive().GetGeometry().GetICEAttributes();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordflow\">for</span>( ULONG i = 0; i&lt;attrs.GetCount(); i++ )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    ICEAttribute attr = attrs[i];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( attr.GetDataType() == XSI::siICENodeDataShape )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;*******************************************************************&quot;</span> );</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;Name: &quot;</span> + attr.GetName() );</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;DataType: &quot;</span> + CString(attr.GetDataType()) );</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;StructType: &quot;</span> + CString(attr.GetStructureType()) );</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;ContextType: &quot;</span> + CString(attr.GetContextType()) );</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;IsConstant: &quot;</span> + CString(attr.IsConstant()) );</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;Readonly: &quot;</span> + CString(attr.IsReadonly()) );</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;Category: &quot;</span> + CString(attr.GetAttributeCategory()) );</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;Element count: &quot;</span> + CString(attr.GetElementCount()) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        CICEAttributeDataArray&lt; XSI::MATH::CShape &gt; data;</div>\n\
<div class=\"line\">        attr.GetDataArray( data );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( ULONG i=0; i&lt;data.GetCount( ); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            xsi.LogMessage( CString( data[ i ] ) );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// %This example shows how to access the shape attributes data from a cloud primitive by using GetDataArrayChunk.</span></div>\n\
<div class=\"line\">ULONG nChunkCount = 4;</div>\n\
<div class=\"line\"><span class=\"keywordflow\">for</span>( ULONG i = 0; i&lt;attrs.GetCount(); i++ )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    ICEAttribute attr = attrs[i];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( attr.GetDataType() != XSI::siICENodeDataShape )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;*******************************************************************&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Compute the chunk vector to access the data</span></div>\n\
<div class=\"line\">    ULONG nChunkSize = attr.GetElementCount() / nChunkCount;</div>\n\
<div class=\"line\">    ULONG nLastChunk = attr.GetElementCount()  % nChunkCount;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    CLongArray nChunks;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>( ULONG iChunk = 0; iChunk &lt; nChunkCount; iChunk++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        nChunks.Add( nChunkSize );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    nChunks.Add( nLastChunk );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ULONG nOffset = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( ULONG j=0; j&lt;nChunks.GetCount(); j++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        ULONG nChunkSize = nChunks[j];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( nChunkSize == 0 )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        CICEAttributeDataArray&lt; XSI::MATH::CShape &gt; data;</div>\n\
<div class=\"line\">        attr.GetDataArrayChunk( nOffset, nChunkSize, data );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;Chunk size: &quot;</span> + CString(data.GetCount( )) );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( ULONG i=0; i&lt;data.GetCount( ); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            xsi.LogMessage( CString( data[ i ] ) );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        nOffset += nChunkSize;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Helpers</span></div>\n\
<div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(4);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\">    args[0]= in_presetobj;</div>\n\
<div class=\"line\">    args[1]= in_geometrytype;</div>\n\
<div class=\"line\">    args[2]= in_name;</div>\n\
<div class=\"line\">    args[3]= in_parent;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;CreatePrim&quot;</span>, args, retval );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CRefArray ApplyOp( <span class=\"keyword\">const</span> CString&amp; in_presetobj, CString &amp; io_connectionset, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2c\">siConstructionMode</a>&amp; in_constructionmode )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(6);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    args[0]=in_presetobj;</div>\n\
<div class=\"line\">    args[1]=io_connectionset;</div>\n\
<div class=\"line\">    args[2]=(LONG)<a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac71d0c79b8986d196b97839a34b1010ea019d2286fd0c3cd91e1c6dd51fbf4ac5\">siUnspecified</a>;</div>\n\
<div class=\"line\">    args[3]=(LONG)<a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a93787e01a103a28d4c3524023ebc4afba8f09d5dbe645a70040ece876859bfd92\">siPersistentOperation</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( in_constructionmode != <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2ca10d11119bd74bc28dcce22d5e1423c34\">siConstructionModeDefault</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        args[5]=(LONG)in_constructionmode;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    CStatus st = app.ExecuteCommand( L<span class=\"stringliteral\">&quot;ApplyOp&quot;</span>, args, retval );</div>\n\
<div class=\"line\">    io_connectionset=args[1];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CValue AddICENode( <span class=\"keyword\">const</span> CValue&amp;  in_presetobj, <span class=\"keyword\">const</span> CValue&amp;  in_container )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(2);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    args[0]= in_presetobj;</div>\n\
<div class=\"line\">    args[1]= in_container;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    CStatus st = app.ExecuteCommand( L<span class=\"stringliteral\">&quot;AddICENode&quot;</span>, args, retval );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> AddAttributeToSetDataICENode( <span class=\"keyword\">const</span> CValue&amp;  in_setdatanode, <span class=\"keyword\">const</span> CString&amp; in_attributename, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a2da2bd136387a53c1842cb895ad50461\">siComponentDataType</a> in_attributetype, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#af03a677dd9104f2cfe9268e6a7ec0ecf\">siComponentDataContext</a> in_attributecontext, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a80f7d32b5521d6ff84022a99ef572d3d\">siComponentDataStructure</a> in_attributestructure )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(5);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    args[0]= in_setdatanode;</div>\n\
<div class=\"line\">    args[1]= in_attributename;</div>\n\
<div class=\"line\">    args[2]= (LONG)in_attributetype;</div>\n\
<div class=\"line\">    args[3]= (LONG)in_attributecontext;</div>\n\
<div class=\"line\">    args[4]= (LONG)in_attributestructure;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    CStatus st = app.ExecuteCommand( L<span class=\"stringliteral\">&quot;AddAttributeToSetDataICENode&quot;</span>, args, retval );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> ConnectICENodes( <span class=\"keyword\">const</span> CValue&amp;  in_inputport, <span class=\"keyword\">const</span> CValue&amp;  in_outputport )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(2);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    args[0]= in_inputport;</div>\n\
<div class=\"line\">    args[1]= in_outputport;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    CStatus st = app.ExecuteCommand( L<span class=\"stringliteral\">&quot;ConnectICENodes&quot;</span>, args, retval );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CValue SetValue( <span class=\"keyword\">const</span> CString&amp; in_target, <span class=\"keyword\">const</span> CValue&amp; in_value, <span class=\"keyword\">const</span> CValue&amp;  in_time )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(3);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    args[0]= in_target;</div>\n\
<div class=\"line\">    args[1]= in_value;</div>\n\
<div class=\"line\">    args[2]= in_time;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    CStatus st = app.ExecuteCommand( L<span class=\"stringliteral\">&quot;SetValue&quot;</span>, args, retval );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </dd></dl>\n\
</div><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"nested-classes\"></a>\n\
Classes</h2></td></tr>\n\
<tr class=\"memitem:\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">struct &#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/structXSI_1_1MATH_1_1CShape_1_1ParameterInstance.html\">ParameterInstance</a></td></tr>\n\
<tr class=\"memdesc:\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">A struct to hold the parameters for a shape instance.  <a href=\"#!/url=./si_cpp/structXSI_1_1MATH_1_1CShape_1_1ParameterInstance.html#details\">More...</a><br></td></tr>\n\
<tr class=\"separator:\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">struct &#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/structXSI_1_1MATH_1_1CShape_1_1ParameterReference.html\">ParameterReference</a></td></tr>\n\
<tr class=\"memdesc:\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">A struct to hold the parameters for a shape reference.  <a href=\"#!/url=./si_cpp/structXSI_1_1MATH_1_1CShape_1_1ParameterReference.html#details\">More...</a><br></td></tr>\n\
<tr class=\"separator:\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:ab7596c2acb090e76d7fe6107fcb09957\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#ab7596c2acb090e76d7fe6107fcb09957\">CShape</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411\">XSI::siICEShapeType</a> in_type=<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411a51eed43dbfcaec5070fbb0b81b0f1cc4\">XSI::siICEShapePoint</a>)</td></tr>\n\
<tr class=\"separator:ab7596c2acb090e76d7fe6107fcb09957\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aef7b1b3b99403f1f410a6777386bad50\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#aef7b1b3b99403f1f410a6777386bad50\">CShape</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\">CShape</a> &amp;in_shape)</td></tr>\n\
<tr class=\"separator:aef7b1b3b99403f1f410a6777386bad50\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa928db047712a583365bdcb68ff21e4b\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#aa928db047712a583365bdcb68ff21e4b\">~CShape</a> ()</td></tr>\n\
<tr class=\"separator:aa928db047712a583365bdcb68ff21e4b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3f583f01eeaaacaab0b1f7db7ddf11cb\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\">CShape</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#a3f583f01eeaaacaab0b1f7db7ddf11cb\">operator=</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\">CShape</a> &amp;in_shape)</td></tr>\n\
<tr class=\"separator:a3f583f01eeaaacaab0b1f7db7ddf11cb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a72ca8cfea928b30d5063368d4577e324\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411\">XSI::siICEShapeType</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#a72ca8cfea928b30d5063368d4577e324\">GetType</a> ()</td></tr>\n\
<tr class=\"separator:a72ca8cfea928b30d5063368d4577e324\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5574027a538feb19ef78049d8cc7421f\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">ULONG&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#a5574027a538feb19ef78049d8cc7421f\">GetReferenceID</a> ()</td></tr>\n\
<tr class=\"separator:a5574027a538feb19ef78049d8cc7421f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1d50e0f1e53359855505e5719f20197d\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#a1d50e0f1e53359855505e5719f20197d\">IsBranchSelected</a> ()</td></tr>\n\
<tr class=\"separator:a1d50e0f1e53359855505e5719f20197d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7f19fd18b23225cee90917f3a5e339f6\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#a7f19fd18b23225cee90917f3a5e339f6\">operator==</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\">CShape</a> &amp;in_shape) const </td></tr>\n\
<tr class=\"separator:a7f19fd18b23225cee90917f3a5e339f6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a20c8f9f6c83747866d93adb88c659f15\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#a20c8f9f6c83747866d93adb88c659f15\">SetAsInstance</a> (ULONG in_instanceIndex)</td></tr>\n\
<tr class=\"separator:a20c8f9f6c83747866d93adb88c659f15\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8ffd0d35f3e0ad3809698e8814ac6fc9\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#a8ffd0d35f3e0ad3809698e8814ac6fc9\">SetAsReference</a> (ULONG in_objectId, bool in_branch)</td></tr>\n\
<tr class=\"separator:a8ffd0d35f3e0ad3809698e8814ac6fc9\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:adad5282d3cd7a5fcba9e86b372cc1624\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#adad5282d3cd7a5fcba9e86b372cc1624\">SetAsTrivial</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411\">XSI::siICEShapeType</a> in_trivialType)</td></tr>\n\
<tr class=\"separator:adad5282d3cd7a5fcba9e86b372cc1624\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a75748a0690e8c11247910fc47cb08885\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411\">XSI::siICEShapeType</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#a75748a0690e8c11247910fc47cb08885\">GetType</a> () const </td></tr>\n\
<tr class=\"separator:a75748a0690e8c11247910fc47cb08885\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a44a60600dd6198cd85f240d97193cb88\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a44a60600dd6198cd85f240d97193cb88\"></a>\n\
const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/structXSI_1_1MATH_1_1CShape_1_1ParameterReference.html\">ParameterReference</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#a44a60600dd6198cd85f240d97193cb88\">GetReferenceDescription</a> () const </td></tr>\n\
<tr class=\"memdesc:a44a60600dd6198cd85f240d97193cb88\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the reference shape description. <br></td></tr>\n\
<tr class=\"separator:a44a60600dd6198cd85f240d97193cb88\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9487660bd07a43bd7494efbce1329874\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a9487660bd07a43bd7494efbce1329874\"></a>\n\
const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/structXSI_1_1MATH_1_1CShape_1_1ParameterInstance.html\">ParameterInstance</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html#a9487660bd07a43bd7494efbce1329874\">GetInstanceDescription</a> () const </td></tr>\n\
<tr class=\"memdesc:a9487660bd07a43bd7494efbce1329874\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the instance shape description. <br></td></tr>\n\
<tr class=\"separator:a9487660bd07a43bd7494efbce1329874\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"ab7596c2acb090e76d7fe6107fcb09957\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\">CShape</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411\">XSI::siICEShapeType</a>&#160;</td>\n\
          <td class=\"paramname\"><em>in_type</em> = <code><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411a51eed43dbfcaec5070fbb0b81b0f1cc4\">XSI::siICEShapePoint</a></code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Constructor. Creates a new object based on the specified shape type. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_type</td><td>Type of particle shape to create </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aef7b1b3b99403f1f410a6777386bad50\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\">CShape</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\">CShape</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_shape</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Copy constructor. Creates a new object as a <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\" title=\"A class representing primitive types for particles rendering. Shape objects are read-only and can be ...\">CShape</a> type. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_shape</td><td><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\" title=\"A class representing primitive types for particles rendering. Shape objects are read-only and can be ...\">CShape</a> object. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa928db047712a583365bdcb68ff21e4b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">~<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\">CShape</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Destructor. </p>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a3f583f01eeaaacaab0b1f7db7ddf11cb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\">CShape</a>&amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\">CShape</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_shape</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Assignment operator. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_shape</td><td>Shape to copy </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A reference to this shape. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a72ca8cfea928b30d5063368d4577e324\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411\">XSI::siICEShapeType</a> GetType </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the shape type. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>One of the <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411\">siICEShapeType</a> enum values representing the shape type. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5574027a538feb19ef78049d8cc7421f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">ULONG GetReferenceID </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the object ID the shape is referring to. Applies only to the <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411a6c34888413f6dd074fdd4d92691bc2ad\">siICEShapeReference</a> shape type. The returned ID can be used to access the object with <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1Application.html#a10580bf2ec10bd54df3485440681e2b0\">Application::GetObjectFromID</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Object ID. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1d50e0f1e53359855505e5719f20197d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool IsBranchSelected </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns true if the referenced object is set as branch-selected. Applies to <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411a6c34888413f6dd074fdd4d92691bc2ad\">siICEShapeReference</a> shape types only. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if branch selected, false otherwise. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7f19fd18b23225cee90917f3a5e339f6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool operator== </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\">CShape</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_shape</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Equality operator tests the strict equality of this shape with the specified shape. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_shape</td><td>Operand <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CShape.html\">CShape</a>. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if equal else false. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a20c8f9f6c83747866d93adb88c659f15\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">void SetAsInstance </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">ULONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_instanceIndex</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Set as shape instance </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_instanceIndex</td><td>Instance index </td></tr>\n\
    <tr><td class=\"paramname\">in_rbdType</td><td>Type for Rigid Body Dynamics </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section since\"><dt>Since</dt><dd>12.0 (2014) </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8ffd0d35f3e0ad3809698e8814ac6fc9\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">void SetAsReference </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">ULONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_objectId</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>in_branch</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Set as shape reference </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_objectId</td><td>Object Id </td></tr>\n\
    <tr><td class=\"paramname\">in_branch</td><td>Branch </td></tr>\n\
    <tr><td class=\"paramname\">in_rbdType</td><td>Type for Rigid Body Dynamics </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section since\"><dt>Since</dt><dd>12.0 (2014) </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"adad5282d3cd7a5fcba9e86b372cc1624\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">void SetAsTrivial </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411\">XSI::siICEShapeType</a>&#160;</td>\n\
          <td class=\"paramname\"><em>in_trivialType</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Set as trivial shape type </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_trivialType</td><td>Trivial type </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section since\"><dt>Since</dt><dd>12.0 (2014) </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a75748a0690e8c11247910fc47cb08885\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411\">XSI::siICEShapeType</a> GetType </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">inline</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the shape type. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>One of the <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ae9fd3bce96e75393fe1595437a370411\">siICEShapeType</a> enum values representing the shape type. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following file:<ul>\n\
<li><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/xsi__shape_8h_source.html\">xsi_shape.h</a></li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";