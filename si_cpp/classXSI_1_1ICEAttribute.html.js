var topic = "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n\
<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/lib/jquery-1.9.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><script type=\"text/javascript\" src=\"../scripts/utils/adsk.redirect.js\"></script>\n\
      <title>ICEAttribute Class Reference</title>\n\
   \n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"si_cpp/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"si_cpp/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"si_cpp/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/yepnope.1.5.4-min.js\"); });</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var weAreIn21 = $(\"div#main.view-active\").length;\n\
var prefix = \"\";\n\
if (weAreIn21)\n\
{ prefix = \"si_cpp/\"; }\n\
yepnope([{\n\
load:[prefix + \"jquery.js\", prefix + \"navtree.js\", prefix + \"resize.js\", prefix + \"dynsections.js\"],\n\
complete: function() {\n\
  dQuery = jQuery.noConflict(\'true\');\n\
  dQuery(window).load(resizeHeight);\n\
  dQuery(document).ready( function () {\n\
    setTimeout( function () {\n\
      initResizable();\n\
      initNavTree(\'classXSI_1_1ICEAttribute.html\', prefix);\n\
      dQuery(window).trigger(\"load\");\n\
      }, 100);\n\
    }\n\
  );\n\
}\n\
}]\n\
)\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>ICEAttribute Class Reference</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.6 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./si_cpp/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./si_cpp/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/files.html\"><span>Files</span></a></li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./si_cpp/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"summary\">\n\
<a href=\"#pub-methods\">Public Member Functions</a>  </div>\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">ICEAttribute Class Reference</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\"><div class=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"closed.png\" alt=\"+\"> This reference page is linked to from the following overview topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><a href=\"#!/url=./files/GUID-81AED350-3B3C-4209-919D-09F568BF663A.htm\">Softimage 2015</a>.</div></div><hr>\n\
\n\
<p><code>#include &lt;<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/xsi__iceattribute_8h_source.html\">xsi_iceattribute.h</a>&gt;</code></p>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Class Description</h2>\n\
<div class=\"textblock\"><p>The <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\" title=\"The ICEAttribute object represents an attribute data set (a collection of information used in the ICE...\">ICEAttribute</a> object represents an attribute data set (a collection of information used in the ICE system, such as Age, PointPosition, NbrPolygons, etc.). </p>\n\
<p>Attribute data sets belong to scene objects such as geometries and properties. Some attributes are built-in, others may be user-defined. <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\" title=\"The ICEAttribute object represents an attribute data set (a collection of information used in the ICE...\">ICEAttribute</a> objects can be accessed through <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1Geometry.html#a4136c638af0c727f539086b4beb1b638\">Geometry::GetICEAttributes</a> and <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ProjectItem.html#a4136c638af0c727f539086b4beb1b638\">ProjectItem::GetICEAttributes</a>.</p>\n\
<dl class=\"section user\"><dt>Note:</dt><dd>ICE is pretty strict about optimization so if an attribute is not being used to drive something visible in the scene, it will not get pulled. You must force ICE to require the underlying attribute in order to access the ICEAttribute object.</dd></dl>\n\
<dl class=\"section see\"><dt>See Also</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1Geometry.html#a4136c638af0c727f539086b4beb1b638\">Geometry::GetICEAttributes</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ProjectItem.html#a4136c638af0c727f539086b4beb1b638\">ProjectItem::GetICEAttributes</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICENode.html\" title=\"The ICENode object represents an effect node in the ICE graph. \">ICENode</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICETree.html\" title=\"The ICETree object represents a node graph and holds all the effect nodes together. \">ICETree</a> </dd></dl>\n\
<dl class=\"section since\"><dt>Since</dt><dd>7.0</dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>This example demonstrates how to log all the ICEAttributes of a geometry. <div class=\"fragment\"><div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">Application xsi;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CreatePrim( L<span class=\"stringliteral\">&quot;Cone&quot;</span>, L<span class=\"stringliteral\">&quot;MeshSurface&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\">Selection selection = xsi.GetSelection();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">X3DObject cone = selection[0];</div>\n\
<div class=\"line\">CRefArray attrs = cone.GetActivePrimitive().GetGeometry().GetICEAttributes();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordflow\">for</span>( ULONG i = 0; i&lt;attrs.GetCount(); i++ )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a> attr = attrs[i];</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;*******************************************************************&quot;</span> );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Name: &quot;</span> + attr.GetName() );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;DataType: &quot;</span> + CString(attr.GetDataType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;StructType: &quot;</span> + CString(attr.GetStructureType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;ContextType: &quot;</span> + CString(attr.GetContextType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;IsConstant: &quot;</span> + CString(attr.IsConstant()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Readonly: &quot;</span> + CString(attr.IsReadonly()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;AttributeCategory: &quot;</span> + CString(attr.GetAttributeCategory()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Element count: &quot;</span> + CString(attr.GetElementCount()) );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Helper</span></div>\n\
<div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(4);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\">    args[0]= in_presetobj;</div>\n\
<div class=\"line\">    args[1]= in_geometrytype;</div>\n\
<div class=\"line\">    args[2]= in_name;</div>\n\
<div class=\"line\">    args[3]= in_parent;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;CreatePrim&quot;</span>, args, retval );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </dd></dl>\n\
</div><div id=\"dynsection-0\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\">\n\
  <img id=\"dynsection-0-trigger\" src=\"closed.png\" alt=\"+\"> Inheritance diagram for ICEAttribute:</div>\n\
<div id=\"dynsection-0-summary\" class=\"dynsummary\" style=\"display:block;\">\n\
</div>\n\
<div id=\"dynsection-0-content\" class=\"dyncontent\" style=\"display:none;\">\n\
 <div class=\"center\">\n\
  <img src=\"classXSI_1_1ICEAttribute.png\" usemap=\"#ICEAttribute_map\" alt=\"\">\n\
  <map id=\"ICEAttribute_map\" name=\"ICEAttribute_map\">\n\
<area href=\"classXSI_1_1SIObject.html\" title=\"SIObject derives from CBase and acts as the base class for the Softimage Object Model library...\" alt=\"SIObject\" shape=\"rect\" coords=\"0,56,79,80\">\n\
<area href=\"classXSI_1_1CBase.html\" title=\"CBase is the base class of all API classes and provides access to Softimage objects through generic C...\" alt=\"CBase\" shape=\"rect\" coords=\"0,0,79,24\">\n\
</map>\n\
 </div></div>\n\
<table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a0f27c868340a39cbd84623e33e8e9335\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a> ()</td></tr>\n\
<tr class=\"separator:a0f27c868340a39cbd84623e33e8e9335\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a62a62b2c26650e468a41340342e0d3f7\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a62a62b2c26650e468a41340342e0d3f7\">~ICEAttribute</a> ()</td></tr>\n\
<tr class=\"separator:a62a62b2c26650e468a41340342e0d3f7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2107537f8d5c6c5ee97cbbed6f10d7f3\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a2107537f8d5c6c5ee97cbbed6f10d7f3\">ICEAttribute</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CRef.html\">CRef</a> &amp;in_ref)</td></tr>\n\
<tr class=\"separator:a2107537f8d5c6c5ee97cbbed6f10d7f3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab380b2015f05b6dbfdbdefbaa5ed02fb\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#ab380b2015f05b6dbfdbdefbaa5ed02fb\">ICEAttribute</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\">ICEAttribute</a> &amp;in_obj)</td></tr>\n\
<tr class=\"separator:ab380b2015f05b6dbfdbdefbaa5ed02fb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6dd5a8a11eee55f434f151d1cd5d29d8\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a6dd5a8a11eee55f434f151d1cd5d29d8\">IsA</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ad483c77b3d997caca1f369db99c1e68b\">siClassID</a> in_ClassID) const </td></tr>\n\
<tr class=\"separator:a6dd5a8a11eee55f434f151d1cd5d29d8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acc34f4a01f2089e40f7abc7e9d98bf15\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ad483c77b3d997caca1f369db99c1e68b\">siClassID</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#acc34f4a01f2089e40f7abc7e9d98bf15\">GetClassID</a> () const </td></tr>\n\
<tr class=\"separator:acc34f4a01f2089e40f7abc7e9d98bf15\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab45a2e55dc4aee1dfe1785927e444540\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\">ICEAttribute</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#ab45a2e55dc4aee1dfe1785927e444540\">operator=</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\">ICEAttribute</a> &amp;in_obj)</td></tr>\n\
<tr class=\"separator:ab45a2e55dc4aee1dfe1785927e444540\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aaa1b8c32f17b7f95fdaf13e35fd6a5bd\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\">ICEAttribute</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#aaa1b8c32f17b7f95fdaf13e35fd6a5bd\">operator=</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CRef.html\">CRef</a> &amp;in_ref)</td></tr>\n\
<tr class=\"separator:aaa1b8c32f17b7f95fdaf13e35fd6a5bd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a17e6346b989f16baf7e52451f2512fe7\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a17e6346b989f16baf7e52451f2512fe7\">IsDefined</a> () const </td></tr>\n\
<tr class=\"separator:a17e6346b989f16baf7e52451f2512fe7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a03aafe48c441185a645a7b1055481a93\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a03aafe48c441185a645a7b1055481a93\">IsConstant</a> () const </td></tr>\n\
<tr class=\"separator:a03aafe48c441185a645a7b1055481a93\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4793a0e43d4e306adedf7dc31caf7d08\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a4793a0e43d4e306adedf7dc31caf7d08\">IsReadonly</a> () const </td></tr>\n\
<tr class=\"separator:a4793a0e43d4e306adedf7dc31caf7d08\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa45d9784f08ca0d0b525db6bd863d6a1\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1a\">XSI::siICENodeDataType</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#aa45d9784f08ca0d0b525db6bd863d6a1\">GetDataType</a> () const </td></tr>\n\
<tr class=\"separator:aa45d9784f08ca0d0b525db6bd863d6a1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a925874a7a044415741ff83bd06e95821\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#a25edb7cb80d670db4441230cee17938d\">XSI::siICENodeStructureType</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a925874a7a044415741ff83bd06e95821\">GetStructureType</a> () const </td></tr>\n\
<tr class=\"separator:a925874a7a044415741ff83bd06e95821\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae8f153f760467b2132cf7cea3918ab7b\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#a3868a5b6193c034d90a55089dc65c605\">XSI::siICENodeContextType</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#ae8f153f760467b2132cf7cea3918ab7b\">GetContextType</a> () const </td></tr>\n\
<tr class=\"separator:ae8f153f760467b2132cf7cea3918ab7b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5beccda6f99192db9267dfec000c9bf5\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#aab6d41b366132d6823d546eba0ebf8b3\">XSI::siICEAttributeCategory</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a5beccda6f99192db9267dfec000c9bf5\">GetAttributeCategory</a> () const </td></tr>\n\
<tr class=\"separator:a5beccda6f99192db9267dfec000c9bf5\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af893b0fefd5dfe555e3b013860f5f5ef\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">ULONG&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#af893b0fefd5dfe555e3b013860f5f5ef\">GetElementCount</a> () const </td></tr>\n\
<tr class=\"separator:af893b0fefd5dfe555e3b013860f5f5ef\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad3dbef6ba77d93eb5f0711806de62736\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#ad3dbef6ba77d93eb5f0711806de62736\">GetDataArray</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBaseICEAttributeDataArray.html\">CBaseICEAttributeDataArray</a> &amp;io_dataArray) const </td></tr>\n\
<tr class=\"separator:ad3dbef6ba77d93eb5f0711806de62736\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae67e0903cb5adcf96b72466bd1168a3e\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#ae67e0903cb5adcf96b72466bd1168a3e\">GetDataArrayChunk</a> (ULONG in_nOffset, ULONG in_nSize, <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBaseICEAttributeDataArray.html\">CBaseICEAttributeDataArray</a> &amp;io_dataArray) const </td></tr>\n\
<tr class=\"separator:ae67e0903cb5adcf96b72466bd1168a3e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac6e52dd6db12632e390ee738cca58187\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#ac6e52dd6db12632e390ee738cca58187\">GetDataArray2D</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBaseICEAttributeDataArray.html\">CBaseICEAttributeDataArray</a> &amp;io_dataArray) const </td></tr>\n\
<tr class=\"separator:ac6e52dd6db12632e390ee738cca58187\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abd8b88c0aded6796c3aedca14b546f82\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#abd8b88c0aded6796c3aedca14b546f82\">GetDataArray2DChunk</a> (ULONG in_nOffset, ULONG in_nSize, <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBaseICEAttributeDataArray.html\">CBaseICEAttributeDataArray</a> &amp;io_dataArray) const </td></tr>\n\
<tr class=\"separator:abd8b88c0aded6796c3aedca14b546f82\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a87e7a9cfd06727061a56bc35008afb56\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStringArray.html\">CStringArray</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a87e7a9cfd06727061a56bc35008afb56\">GetCustomDataTypes</a> () const </td></tr>\n\
<tr class=\"separator:a87e7a9cfd06727061a56bc35008afb56\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae819505e321629187049288470e8fe2b\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#ae819505e321629187049288470e8fe2b\">IsAlwaysEvaluated</a> () const </td></tr>\n\
<tr class=\"separator:ae819505e321629187049288470e8fe2b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a66c6820ed6a052016ff08b7e19d2a9bb\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a66c6820ed6a052016ff08b7e19d2a9bb\">SetAlwaysEvaluated</a> (bool in_bAlwaysEvaluated)</td></tr>\n\
<tr class=\"separator:a66c6820ed6a052016ff08b7e19d2a9bb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pub_methods_classXSI_1_1SIObject\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_methods_classXSI_1_1SIObject\')\"><img src=\"closed.png\" alt=\"-\">&#160;Public Member Functions inherited from <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html\">SIObject</a></td></tr>\n\
<tr class=\"memitem:aa27dc882852af7ea1410aecde7a59fc2 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#aa27dc882852af7ea1410aecde7a59fc2\">SIObject</a> ()</td></tr>\n\
<tr class=\"separator:aa27dc882852af7ea1410aecde7a59fc2 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3019660a615dbe7cc0a9607a94b830a5 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#a3019660a615dbe7cc0a9607a94b830a5\">~SIObject</a> ()</td></tr>\n\
<tr class=\"separator:a3019660a615dbe7cc0a9607a94b830a5 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a810fae9fad7bafe4ffb16df7083dfacd inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#a810fae9fad7bafe4ffb16df7083dfacd\">SIObject</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CRef.html\">CRef</a> &amp;in_ref)</td></tr>\n\
<tr class=\"separator:a810fae9fad7bafe4ffb16df7083dfacd inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0e9d732eaeb68dfe6a43ccf68a06a132 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#a0e9d732eaeb68dfe6a43ccf68a06a132\">SIObject</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html\">SIObject</a> &amp;in_obj)</td></tr>\n\
<tr class=\"separator:a0e9d732eaeb68dfe6a43ccf68a06a132 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6dd5a8a11eee55f434f151d1cd5d29d8 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#a6dd5a8a11eee55f434f151d1cd5d29d8\">IsA</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ad483c77b3d997caca1f369db99c1e68b\">siClassID</a> in_ClassID) const </td></tr>\n\
<tr class=\"separator:a6dd5a8a11eee55f434f151d1cd5d29d8 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acc34f4a01f2089e40f7abc7e9d98bf15 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ad483c77b3d997caca1f369db99c1e68b\">siClassID</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#acc34f4a01f2089e40f7abc7e9d98bf15\">GetClassID</a> () const </td></tr>\n\
<tr class=\"separator:acc34f4a01f2089e40f7abc7e9d98bf15 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a06a8a39f247c9826853433f5d87d6f48 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html\">SIObject</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#a06a8a39f247c9826853433f5d87d6f48\">operator=</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html\">SIObject</a> &amp;in_obj)</td></tr>\n\
<tr class=\"separator:a06a8a39f247c9826853433f5d87d6f48 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac699660f361bf8792b0249bc2f453ab4 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html\">SIObject</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#ac699660f361bf8792b0249bc2f453ab4\">operator=</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CRef.html\">CRef</a> &amp;in_ref)</td></tr>\n\
<tr class=\"separator:ac699660f361bf8792b0249bc2f453ab4 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a36cf1424d90dfdd72097f0959790d475 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1Application.html\">Application</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#a36cf1424d90dfdd72097f0959790d475\">GetApplication</a> () const </td></tr>\n\
<tr class=\"separator:a36cf1424d90dfdd72097f0959790d475 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab5e38bc9c650b2d8ca0abe29b516cf87 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#ab5e38bc9c650b2d8ca0abe29b516cf87\">GetFullName</a> () const </td></tr>\n\
<tr class=\"separator:ab5e38bc9c650b2d8ca0abe29b516cf87 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab5b36ddcfe22b04b0ca67b7be4f14f85 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#ab5b36ddcfe22b04b0ca67b7be4f14f85\">GetName</a> () const </td></tr>\n\
<tr class=\"separator:ab5b36ddcfe22b04b0ca67b7be4f14f85 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afc968d8ce92392583fb64412ab3bed28 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#afc968d8ce92392583fb64412ab3bed28\">PutName</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a> &amp;in_name)</td></tr>\n\
<tr class=\"separator:afc968d8ce92392583fb64412ab3bed28 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:addeb66825ef8aa3d36157a1959527f19 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#addeb66825ef8aa3d36157a1959527f19\">GetUniqueName</a> () const </td></tr>\n\
<tr class=\"separator:addeb66825ef8aa3d36157a1959527f19 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a327d1b55ff1e258417451a8a292c3c4f inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#a327d1b55ff1e258417451a8a292c3c4f\">GetType</a> () const </td></tr>\n\
<tr class=\"separator:a327d1b55ff1e258417451a8a292c3c4f inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abc306e1a2d61cba72802d28f751aa640 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CRef.html\">CRef</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#abc306e1a2d61cba72802d28f751aa640\">GetParent</a> () const </td></tr>\n\
<tr class=\"separator:abc306e1a2d61cba72802d28f751aa640 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0d3dc111fd7156689b9b2c1fd2c5f581 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#a0d3dc111fd7156689b9b2c1fd2c5f581\">IsEqualTo</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CRef.html\">CRef</a> &amp;in_ref) const </td></tr>\n\
<tr class=\"separator:a0d3dc111fd7156689b9b2c1fd2c5f581 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8051b32ae9c745b35ded13029220080c inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#a8051b32ae9c745b35ded13029220080c\">GetHelp</a> () const </td></tr>\n\
<tr class=\"separator:a8051b32ae9c745b35ded13029220080c inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a172c48e4a4d1341ea9002832a734c3ba inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#a172c48e4a4d1341ea9002832a734c3ba\">GetOriginPath</a> () const </td></tr>\n\
<tr class=\"separator:a172c48e4a4d1341ea9002832a734c3ba inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab13f5aab4ca531714928a81bcea7b24c inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#a78f4f7bf0e1dcfc222ef5ccc055fc6af\">siInstallationPath</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#ab13f5aab4ca531714928a81bcea7b24c\">GetOrigin</a> () const </td></tr>\n\
<tr class=\"separator:ab13f5aab4ca531714928a81bcea7b24c inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a53593f8cadffbaddd9245bbaa078eef6 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStringArray.html\">CStringArray</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#a53593f8cadffbaddd9245bbaa078eef6\">GetCategories</a> () const </td></tr>\n\
<tr class=\"separator:a53593f8cadffbaddd9245bbaa078eef6 inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a86d8446a011274790e13534569a26b6f inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CRefArray.html\">CRefArray</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1SIObject.html#a86d8446a011274790e13534569a26b6f\">GetNestedObjects</a> () const </td></tr>\n\
<tr class=\"separator:a86d8446a011274790e13534569a26b6f inherit pub_methods_classXSI_1_1SIObject\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"inherit_header pub_methods_classXSI_1_1CBase\"><td colspan=\"2\" onclick=\"javascript:toggleInherit(\'pub_methods_classXSI_1_1CBase\')\"><img src=\"closed.png\" alt=\"-\">&#160;Public Member Functions inherited from <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html\">CBase</a></td></tr>\n\
<tr class=\"memitem:a3878f3ab13413eb6d4811dca38b4fa73 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html#a3878f3ab13413eb6d4811dca38b4fa73\">CBase</a> ()</td></tr>\n\
<tr class=\"separator:a3878f3ab13413eb6d4811dca38b4fa73 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a012a4573399b53f0720fcf4ff787c048 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">virtual&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html#a012a4573399b53f0720fcf4ff787c048\">~CBase</a> ()</td></tr>\n\
<tr class=\"separator:a012a4573399b53f0720fcf4ff787c048 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac347619969a79eb8afc0adf6ea9394ba inherit pub_methods_classXSI_1_1CBase\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html#ac347619969a79eb8afc0adf6ea9394ba\">GetClassIDName</a> () const </td></tr>\n\
<tr class=\"separator:ac347619969a79eb8afc0adf6ea9394ba inherit pub_methods_classXSI_1_1CBase\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac8759bb33eaf8bf83949277169a048e6 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html#ac8759bb33eaf8bf83949277169a048e6\">IsA</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CRef.html\">CRef</a> &amp;in_ref) const </td></tr>\n\
<tr class=\"separator:ac8759bb33eaf8bf83949277169a048e6 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a458e6e03ea0b71cb2205a5fd9e1999c8 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html#a458e6e03ea0b71cb2205a5fd9e1999c8\">SetObject</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CRef.html\">CRef</a> &amp;in_obj)</td></tr>\n\
<tr class=\"separator:a458e6e03ea0b71cb2205a5fd9e1999c8 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afa8720abaf6972d6dac22a8cd1a67225 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html#afa8720abaf6972d6dac22a8cd1a67225\">IsValid</a> () const </td></tr>\n\
<tr class=\"separator:afa8720abaf6972d6dac22a8cd1a67225 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac5a79b5ac1759bc4e66e8f662b8bad49 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html#ac5a79b5ac1759bc4e66e8f662b8bad49\">ResetObject</a> ()</td></tr>\n\
<tr class=\"separator:ac5a79b5ac1759bc4e66e8f662b8bad49 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a20250592358718fccc1dad9e949d3d28 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html#a20250592358718fccc1dad9e949d3d28\">operator CRef &amp;</a> ()</td></tr>\n\
<tr class=\"separator:a20250592358718fccc1dad9e949d3d28 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac91cdd4cb81fac44686c538126a4b98a inherit pub_methods_classXSI_1_1CBase\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html#ac91cdd4cb81fac44686c538126a4b98a\">operator==</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html\">CBase</a> &amp;in_obj) const </td></tr>\n\
<tr class=\"separator:ac91cdd4cb81fac44686c538126a4b98a inherit pub_methods_classXSI_1_1CBase\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a99049c404ae9b0ae189f80771dee0596 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html#a99049c404ae9b0ae189f80771dee0596\">operator!=</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html\">CBase</a> &amp;in_obj) const </td></tr>\n\
<tr class=\"separator:a99049c404ae9b0ae189f80771dee0596 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aac2a77c9ccdd6d0f9953ef784e2be5e9 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CRef.html\">CRef</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html#aac2a77c9ccdd6d0f9953ef784e2be5e9\">GetRef</a> () const </td></tr>\n\
<tr class=\"separator:aac2a77c9ccdd6d0f9953ef784e2be5e9 inherit pub_methods_classXSI_1_1CBase\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"a0f27c868340a39cbd84623e33e8e9335\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\">ICEAttribute</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Default constructor. </p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a62a62b2c26650e468a41340342e0d3f7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">~<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\">ICEAttribute</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Default destructor. </p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2107537f8d5c6c5ee97cbbed6f10d7f3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\">ICEAttribute</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CRef.html\">CRef</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_ref</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Constructor. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_ref</td><td>constant reference object. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab380b2015f05b6dbfdbdefbaa5ed02fb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\">ICEAttribute</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\">ICEAttribute</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_obj</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Copy constructor. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_obj</td><td>constant class object. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a6dd5a8a11eee55f434f151d1cd5d29d8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool IsA </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ad483c77b3d997caca1f369db99c1e68b\">siClassID</a>&#160;</td>\n\
          <td class=\"paramname\"><em>in_ClassID</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns true if a given class type is compatible with this API class. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_ClassID</td><td>class type. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the class is compatible, false otherwise. </dd></dl>\n\
\n\
<p>Reimplemented from <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html#a5a1833349ed14be553ae68b84ff60b8d\">CBase</a>.</p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"acc34f4a01f2089e40f7abc7e9d98bf15\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#ad483c77b3d997caca1f369db99c1e68b\">siClassID</a> GetClassID </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">virtual</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the type of the API class. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The class type. </dd></dl>\n\
\n\
<p>Implements <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBase.html#a4b1359dd080cedb25e5f53df23d264b5\">CBase</a>.</p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab45a2e55dc4aee1dfe1785927e444540\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\">ICEAttribute</a>&amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\">ICEAttribute</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_obj</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Creates an object from another object. The newly created object is set to empty if the input object is not compatible. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_obj</td><td>constant class object. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The new <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\" title=\"The ICEAttribute object represents an attribute data set (a collection of information used in the ICE...\">ICEAttribute</a> object. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aaa1b8c32f17b7f95fdaf13e35fd6a5bd\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\">ICEAttribute</a>&amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CRef.html\">CRef</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_ref</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Creates an object from a reference object. The newly created object is set to empty if the input reference object is not compatible. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_ref</td><td>constant class object. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The new <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\" title=\"The ICEAttribute object represents an attribute data set (a collection of information used in the ICE...\">ICEAttribute</a> object. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a17e6346b989f16baf7e52451f2512fe7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool IsDefined </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns a boolean value indicating whether the data for this attribute is ready to be used (true) or not (false). </p>\n\
<dl class=\"section user\"><dt>Note:</dt><dd></dd></dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the data has been defined. If the underlying attribute is not required by ICE, IsDefined returns false. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a03aafe48c441185a645a7b1055481a93\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool IsConstant </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns a bool value indicating whether the data for this attribute is constant (true) or not (false). </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Attribute constant flag. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4793a0e43d4e306adedf7dc31caf7d08\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool IsReadonly </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns a bool value indicating whether the data for this attribute is read-only (true) or not (false). </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Attribute read-only flag. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa45d9784f08ca0d0b525db6bd863d6a1\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1a\">XSI::siICENodeDataType</a> GetDataType </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the type for this attribute data as an <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1a\">siICENodeDataType</a> value. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Attribute data type. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a925874a7a044415741ff83bd06e95821\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#a25edb7cb80d670db4441230cee17938d\">XSI::siICENodeStructureType</a> GetStructureType </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the type for this attribute data as an <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#a25edb7cb80d670db4441230cee17938d\">siICENodeStructureType</a> value. The returned type identifies how the data is structured: data can be a single element or an array. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Attribute data structure type. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae8f153f760467b2132cf7cea3918ab7b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#a3868a5b6193c034d90a55089dc65c605\">XSI::siICENodeContextType</a> GetContextType </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the context type of this attribute data as an <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#a3868a5b6193c034d90a55089dc65c605\">siICENodeContextType</a> value. The returned type identifies the element set associated with the data (cardinality), such as vertices, polygons, or newly created particles. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Attribute data context type. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5beccda6f99192db9267dfec000c9bf5\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#aab6d41b366132d6823d546eba0ebf8b3\">XSI::siICEAttributeCategory</a> GetAttributeCategory </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the category as an <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#aab6d41b366132d6823d546eba0ebf8b3\">siICEAttributeCategory</a> value describing how the attribute is defined. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Attribute category type. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af893b0fefd5dfe555e3b013860f5f5ef\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">ULONG GetElementCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the number of elements defined for this attribute given its context type <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/namespaceXSI.html#a3868a5b6193c034d90a55089dc65c605\">siICENodeContextType</a>. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Number of elements. </dd></dl>\n\
<dl class=\"section see\"><dt>See Also</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#ae8f153f760467b2132cf7cea3918ab7b\">ICEAttribute::GetContextType</a> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad3dbef6ba77d93eb5f0711806de62736\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> GetDataArray </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBaseICEAttributeDataArray.html\">CBaseICEAttributeDataArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>io_dataArray</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBaseICEAttributeDataArray.html\" title=\"Base class CICEAttributeDataArray class for the CICEAttributeDataArray and CICEAttributeDataArray2D t...\">CBaseICEAttributeDataArray</a> object containing the data defined by this attribute. Returns an empty array if the structure type is not siICENodeStructureArray. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">io_dataArray</td><td>Newly created array of <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\" title=\"The ICEAttribute object represents an attribute data set (a collection of information used in the ICE...\">ICEAttribute</a> data.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> Success. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281daf9d46b7804d93a4fcde88489a1b68c24\">CStatus::False</a> Attribute has no data set yet. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281dad795f6709d0c6419c4fe31703e454e27\">CStatus::InvalidArgument</a> <code>io_dataArray</code> is invalid. This is typically caused by an invalid type match between <code>io_dataArray</code> and this <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\" title=\"The ICEAttribute object represents an attribute data set (a collection of information used in the ICE...\">ICEAttribute</a>. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2c88d6b09611bebcfd079df624ae3bfe\">CStatus::Fail</a> Operation failed.</dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>This example shows how to access all attribute data on a geometry. <div class=\"fragment\"><div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">template</span> &lt; <span class=\"keyword\">class</span> T &gt;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>CICEAttributeDataLogger</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> Log( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a>&amp; attr )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        CICEAttributeDataArray&lt; T &gt; data;</div>\n\
<div class=\"line\">        attr.GetDataArray( data );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Application xsi;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( ULONG i=0; i&lt;data.GetCount( ); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            xsi.LogMessage( CString( data[ i ] ) );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">template</span> &lt; &gt;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>CICEAttributeDataLogger&lt; XSI::CString &gt;</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> Log( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a>&amp; attr )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        CICEAttributeDataArrayString data;</div>\n\
<div class=\"line\">        attr.GetDataArray( data );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Application xsi;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( ULONG i=0; i&lt;data.GetCount( ); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            xsi.LogMessage( data[ i ] );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">Application xsi;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CreatePrim( L<span class=\"stringliteral\">&quot;Cone&quot;</span>, L<span class=\"stringliteral\">&quot;MeshSurface&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\">Selection selection = xsi.GetSelection();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">X3DObject cone = selection[0];</div>\n\
<div class=\"line\">CRefArray attrs = cone.GetActivePrimitive().GetGeometry().GetICEAttributes();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordflow\">for</span>( ULONG i = 0; i&lt;attrs.GetCount(); i++ )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a> attr = attrs[i];</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;*******************************************************************&quot;</span> );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Name: &quot;</span> + attr.GetName() );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;DataType: &quot;</span> + CString(attr.GetDataType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;StructType: &quot;</span> + CString(attr.GetStructureType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;ContextType: &quot;</span> + CString(attr.GetContextType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;IsConstant: &quot;</span> + CString(attr.IsConstant()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Readonly: &quot;</span> + CString(attr.IsReadonly()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;AttributeCategory: &quot;</span> + CString(attr.GetAttributeCategory()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Element count: &quot;</span> + CString(attr.GetElementCount()) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( attr.GetStructureType() != <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a25edb7cb80d670db4441230cee17938dad27363313efc37ac55e9ecaf64f7e863\">XSI::siICENodeStructureSingle</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Only process 1D array data</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span>( attr.GetDataType() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa6d129b03ac68e45f215ad7d4772bca77\">XSI::siICENodeDataFloat</a>: CICEAttributeDataLogger&lt;float&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa24b13c08f1203ad441d325e036f95726\">XSI::siICENodeDataLong</a>: CICEAttributeDataLogger&lt;LONG&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa7192f71158729ca2a860431deee659ed\">XSI::siICENodeDataBool</a>: CICEAttributeDataLogger&lt;bool&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa7accac80a2196fb9c7fefd284f1a7493\">XSI::siICENodeDataVector2</a>: CICEAttributeDataLogger&lt;XSI::MATH::CVector2f&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataVector3: CICEAttributeDataLogger&lt;XSI::MATH::CVector3f&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataVector4: CICEAttributeDataLogger&lt;XSI::MATH::CVector4f&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataQuaternion: CICEAttributeDataLogger&lt;XSI::MATH::CQuaternionf&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataRotation: CICEAttributeDataLogger&lt;XSI::MATH::CRotationf&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataMatrix33: CICEAttributeDataLogger&lt;XSI::MATH::CMatrix3f&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataMatrix44: CICEAttributeDataLogger&lt;XSI::MATH::CMatrix4f&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataColor4: CICEAttributeDataLogger&lt;XSI::MATH::CColor4f&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa5016a9b3caf0aa62869888c850c87bda\">XSI::siICENodeDataString</a>: CICEAttributeDataLogger&lt;XSI::CString&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Helper</span></div>\n\
<div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(4);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\">    args[0]= in_presetobj;</div>\n\
<div class=\"line\">    args[1]= in_geometrytype;</div>\n\
<div class=\"line\">    args[2]= in_name;</div>\n\
<div class=\"line\">    args[3]= in_parent;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;CreatePrim&quot;</span>, args, retval );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>This example demonstrates how to set the data on a geometry attribute <div class=\"fragment\"><div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">template</span> &lt; <span class=\"keyword\">class</span> T &gt;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>CICEAttributeDataLogger</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> Log( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a>&amp; attr )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        CICEAttributeDataArray&lt; T &gt; data;</div>\n\
<div class=\"line\">        attr.GetDataArray( data );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Application xsi;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( ULONG i=0; i&lt;data.GetCount( ); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            xsi.LogMessage( CString( data[ i ] ) );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">template</span> &lt; &gt;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>CICEAttributeDataLogger&lt; XSI::CString &gt;</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> Log( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a>&amp; attr )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        CICEAttributeDataArrayString data;</div>\n\
<div class=\"line\">        attr.GetDataArray( data );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Application xsi;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( ULONG i=0; i&lt;data.GetCount( ); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            xsi.LogMessage( data[ i ] );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">Application xsi;</div>\n\
<div class=\"line\">X3DObject cone( CreatePrim( L<span class=\"stringliteral\">&quot;Cone&quot;</span>, L<span class=\"stringliteral\">&quot;MeshSurface&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The number of elements on the attribute is governed by siICENodeContextComponent0D which is equivalent to the number of vertices on the cone.</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a> attr = cone.GetActivePrimitive().GetGeometry().AddICEAttribute( <span class=\"stringliteral\">&quot;DataArrayMat44&quot;</span>, XSI::siICENodeDataMatrix44, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a25edb7cb80d670db4441230cee17938dad27363313efc37ac55e9ecaf64f7e863\">XSI::siICENodeStructureSingle</a>, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a3868a5b6193c034d90a55089dc65c605aca70084d89c965af244e2cfda987d84e\">XSI::siICENodeContextComponent0D</a> );</div>\n\
<div class=\"line\">MATH::CMatrix4f Mat4A( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 );</div>\n\
<div class=\"line\">MATH::CMatrix4f Mat4B( 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CICEAttributeDataArray&lt; MATH::CMatrix4f &gt; data;</div>\n\
<div class=\"line\">attr.GetDataArray( data );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">data[0] = Mat4A;</div>\n\
<div class=\"line\">data[4] = Mat4B;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CICEAttributeDataLogger&lt;MATH::CMatrix4f&gt;::Log( attr );  </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Example with memcpy for 6 elements </span></div>\n\
<div class=\"line\">    MATH::CMatrix4f l_Values[6] = { Mat4A, Mat4A, Mat4A, Mat4B, Mat4B, Mat4B };</div>\n\
<div class=\"line\">    memcpy( &amp;data[0], &amp;l_Values[0], 6 * <span class=\"keyword\">sizeof</span>(MATH::CMatrix4f) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    CICEAttributeDataLogger&lt;MATH::CMatrix4f&gt;::Log( attr );  </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Helper</span></div>\n\
<div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(4);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\">    args[0]= in_presetobj;</div>\n\
<div class=\"line\">    args[1]= in_geometrytype;</div>\n\
<div class=\"line\">    args[2]= in_name;</div>\n\
<div class=\"line\">    args[3]= in_parent;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;CreatePrim&quot;</span>, args, retval );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --></dd></dl>\n\
<dl class=\"section see\"><dt>See Also</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a925874a7a044415741ff83bd06e95821\">ICEAttribute::GetStructureType</a> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae67e0903cb5adcf96b72466bd1168a3e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> GetDataArrayChunk </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">ULONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_nOffset</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">ULONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_nSize</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBaseICEAttributeDataArray.html\">CBaseICEAttributeDataArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>io_dataArray</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns a read-only <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBaseICEAttributeDataArray.html\" title=\"Base class CICEAttributeDataArray class for the CICEAttributeDataArray and CICEAttributeDataArray2D t...\">CBaseICEAttributeDataArray</a> object containing the data defined by this attribute. The data can be accessed in multiple chunks given an index offset that refers to the attribute\'s global data buffer and a chunk size. GetDataArrayChunk is particularly useful for minimizing the memory allocation required to store the data retrieved from a very large data set. An empty array is returned if the attribute\'s structure type is not a singleton.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_nOffset</td><td>Index offset into the attribute data buffer. </td></tr>\n\
    <tr><td class=\"paramname\">in_nSize</td><td>Size of chunk to gather. </td></tr>\n\
    <tr><td class=\"paramname\">io_dataArray</td><td>Newly created array of <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\" title=\"The ICEAttribute object represents an attribute data set (a collection of information used in the ICE...\">ICEAttribute</a> data.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> Success. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281daf9d46b7804d93a4fcde88489a1b68c24\">CStatus::False</a> Attribute has no data set yet. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2c88d6b09611bebcfd079df624ae3bfe\">CStatus::Fail</a> Operation failed.</dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>This example shows how to access all attribute data of a geometry in chunk. <div class=\"fragment\"><div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent )</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">template</span> &lt; <span class=\"keyword\">class</span> T &gt;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>CICEAttributeDataChunkLogger</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> Log( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a>&amp; attr, ULONG in_nOffset, ULONG in_nSize )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        CICEAttributeDataArray&lt; T &gt; data;</div>\n\
<div class=\"line\">        attr.GetDataArrayChunk( in_nOffset, in_nSize, data );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Application xsi;</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;Chunk size: &quot;</span> + CString(data.GetCount( )) );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( ULONG i=0; i&lt;data.GetCount( ); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            xsi.LogMessage( CString( data[ i ] ) );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">template</span> &lt; &gt;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>CICEAttributeDataChunkLogger&lt; XSI::CString &gt;</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> Log( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a>&amp; attr, ULONG in_nOffset, ULONG in_nSize )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        CICEAttributeDataArrayString data;</div>\n\
<div class=\"line\">        attr.GetDataArrayChunk( in_nOffset, in_nSize, data );</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        Application xsi;</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;Chunk size: &quot;</span> + CString(data.GetCount( )) );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( ULONG i=0; i&lt;data.GetCount( ); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            xsi.LogMessage( data[ i ] );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">Application xsi;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CreatePrim( L<span class=\"stringliteral\">&quot;Cone&quot;</span>, L<span class=\"stringliteral\">&quot;MeshSurface&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\">Selection selection = xsi.GetSelection();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">X3DObject cone = selection[0];</div>\n\
<div class=\"line\">CRefArray attrs = cone.GetActivePrimitive().GetGeometry().GetICEAttributes();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">ULONG nChunkCount = 4;</div>\n\
<div class=\"line\"><span class=\"keywordflow\">for</span>( ULONG i = 0; i&lt;attrs.GetCount(); i++ )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a> attr = attrs[i];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( attr.GetStructureType() != <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a25edb7cb80d670db4441230cee17938dad27363313efc37ac55e9ecaf64f7e863\">XSI::siICENodeStructureSingle</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Only process 1D array data</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;*******************************************************************&quot;</span> );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Name: &quot;</span> + attr.GetName() );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;DataType: &quot;</span> + CString(attr.GetDataType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;StructType: &quot;</span> + CString(attr.GetStructureType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;ContextType: &quot;</span> + CString(attr.GetContextType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;IsConstant: &quot;</span> + CString(attr.IsConstant()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Readonly: &quot;</span> + CString(attr.IsReadonly()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;AttributeCategory: &quot;</span> + CString(attr.GetAttributeCategory()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Element count: &quot;</span> + CString(attr.GetElementCount()) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Compute the chunk vector to access the data</span></div>\n\
<div class=\"line\">    ULONG nChunkSize = attr.GetElementCount() / nChunkCount;</div>\n\
<div class=\"line\">    ULONG nLastChunk = attr.GetElementCount()  % nChunkCount;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    CLongArray nChunks;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>( ULONG iChunk = 0; iChunk &lt; nChunkCount; iChunk++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        nChunks.Add( nChunkSize );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    nChunks.Add( nLastChunk );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ULONG nOffset = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( ULONG j=0; j&lt;nChunks.GetCount(); j++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        ULONG nChunkSize = nChunks[j];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( nChunkSize == 0 )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span>( attr.GetDataType() )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa6d129b03ac68e45f215ad7d4772bca77\">XSI::siICENodeDataFloat</a>: CICEAttributeDataChunkLogger&lt;float&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa24b13c08f1203ad441d325e036f95726\">XSI::siICENodeDataLong</a>: CICEAttributeDataChunkLogger&lt;LONG&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa7192f71158729ca2a860431deee659ed\">XSI::siICENodeDataBool</a>: CICEAttributeDataChunkLogger&lt;bool&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa7accac80a2196fb9c7fefd284f1a7493\">XSI::siICENodeDataVector2</a>: CICEAttributeDataChunkLogger&lt;XSI::MATH::CVector2f&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataVector3: CICEAttributeDataChunkLogger&lt;XSI::MATH::CVector3f&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataVector4: CICEAttributeDataChunkLogger&lt;XSI::MATH::CVector4f&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataQuaternion: CICEAttributeDataChunkLogger&lt;XSI::MATH::CQuaternionf&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataRotation: CICEAttributeDataChunkLogger&lt;XSI::MATH::CRotationf&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataMatrix33: CICEAttributeDataChunkLogger&lt;XSI::MATH::CMatrix3f&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataMatrix44: CICEAttributeDataChunkLogger&lt;XSI::MATH::CMatrix4f&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataColor4: CICEAttributeDataChunkLogger&lt;XSI::MATH::CColor4f&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa5016a9b3caf0aa62869888c850c87bda\">XSI::siICENodeDataString</a>: CICEAttributeDataChunkLogger&lt;XSI::CString&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        nOffset += nChunkSize;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Helper</span></div>\n\
<div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(4);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\">    args[0]= in_presetobj;</div>\n\
<div class=\"line\">    args[1]= in_geometrytype;</div>\n\
<div class=\"line\">    args[2]= in_name;</div>\n\
<div class=\"line\">    args[3]= in_parent;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;CreatePrim&quot;</span>, args, retval );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </dd></dl>\n\
<dl class=\"section see\"><dt>See Also</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a925874a7a044415741ff83bd06e95821\">ICEAttribute::GetStructureType</a> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac6e52dd6db12632e390ee738cca58187\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> GetDataArray2D </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBaseICEAttributeDataArray.html\">CBaseICEAttributeDataArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>io_dataArray</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns a read-only CBaseICEAttributeDataArray2D object containing the 2D data defined by this attribute. Returns an empty array if the attribute\'s structure type is not a 2D array.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">io_dataArray</td><td>Newly created array of <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\" title=\"The ICEAttribute object represents an attribute data set (a collection of information used in the ICE...\">ICEAttribute</a> data.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> Success. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281daf9d46b7804d93a4fcde88489a1b68c24\">CStatus::False</a> Attribute has no data set yet. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2c88d6b09611bebcfd079df624ae3bfe\">CStatus::Fail</a> Operation failed.</dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>This example shows how to access all attribute data of an envelope weight property. <div class=\"fragment\"><div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent );</div>\n\
<div class=\"line\">CValue Create2DSkeleton( <span class=\"keyword\">const</span> CValue&amp; in_rx, <span class=\"keyword\">const</span> CValue&amp; in_ry, <span class=\"keyword\">const</span> CValue&amp; in_rz, <span class=\"keyword\">const</span> CValue&amp; in_ex, <span class=\"keyword\">const</span> CValue&amp; in_ey, <span class=\"keyword\">const</span> CValue&amp; in_ez, <span class=\"keyword\">const</span> CValue&amp; in_nx, <span class=\"keyword\">const</span> CValue&amp; in_ny, <span class=\"keyword\">const</span> CValue&amp; in_nz, <span class=\"keyword\">const</span> CValue&amp; in_viewtype,  CValue&amp; out_bone,  CValue&amp; out_effector );</div>\n\
<div class=\"line\">CValue AppendBone( <span class=\"keyword\">const</span> CValue&amp;  in_inputobjs, <span class=\"keyword\">const</span> CValue&amp; in_ex, <span class=\"keyword\">const</span> CValue&amp; in_ey, <span class=\"keyword\">const</span> CValue&amp; in_ez, <span class=\"keywordtype\">bool</span> in_pin );</div>\n\
<div class=\"line\">CValue ApplyFlexEnv( <span class=\"keyword\">const</span> CValue&amp;  in_connectionset, <span class=\"keywordtype\">bool</span> in_assignnewdeformers,  <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2c\">XSI::siConstructionMode</a> &amp; io_constructionmode );</div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> SelectObj( <span class=\"keyword\">const</span> CValue&amp;  in_selectionlist, <span class=\"keyword\">const</span> CString&amp; in_hierarchylevel, <span class=\"keywordtype\">bool</span> in_checkobjectselectability ) ;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">template</span> &lt; <span class=\"keyword\">class</span> T &gt;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>CICEAttributeData2DLogger</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> Log( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a>&amp; attr )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        CICEAttributeDataArray2D&lt; T &gt; data2D;</div>\n\
<div class=\"line\">        attr.GetDataArray2D( data2D );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Application xsi;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( ULONG i=0; i&lt;data2D.GetCount( ); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            CICEAttributeDataArray&lt; T &gt; data;</div>\n\
<div class=\"line\">            data2D.GetSubArray( i, data );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>( ULONG j=0; j&lt;data.GetCount( ); j++ )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                xsi.LogMessage( CString( data[ j ] ) );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">template</span> &lt; &gt;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>CICEAttributeDataChunk2DLogger&lt;XSI::CString&gt;</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> Log( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a>&amp; attr, ULONG in_nOffset, ULONG in_nSize )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        CICEAttributeDataArray2DString data2D;</div>\n\
<div class=\"line\">        attr.GetDataArray2DChunk( in_nOffset, in_nSize, data2D );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Application xsi;</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;Chunk size: &quot;</span> + CString(data2D.GetCount( )) );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( ULONG i=0; i&lt;data2D.GetCount( ); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            CICEAttributeDataArrayString data;</div>\n\
<div class=\"line\">            data2D.GetSubArray( i, data );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>( ULONG j=0; j&lt;data.GetCount( ); j++ )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                xsi.LogMessage( data[ j ] );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">Application xsi;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">X3DObject cone = CreatePrim( L<span class=\"stringliteral\">&quot;Cone&quot;</span>, L<span class=\"stringliteral\">&quot;MeshSurface&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\">Create2DSkeleton( 2.95, 3.34, -0.33, 4.73, 0.0, 0.0, -5.71, 0, 0, 4, CValue(<span class=\"stringliteral\">&quot;&quot;</span>), CValue(<span class=\"stringliteral\">&quot;&quot;</span>));</div>\n\
<div class=\"line\">AppendBone( L<span class=\"stringliteral\">&quot;eff&quot;</span>, 3.70, -3.02, 0.30, L<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2c\">XSI::siConstructionMode</a> mode = <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2ca2598cf5c4d689ff7cc059ce14a7a0818\">siConstructionModeModeling</a>;</div>\n\
<div class=\"line\">ApplyFlexEnv( L<span class=\"stringliteral\">&quot;cone;bone,bone1,eff&quot;</span>, <span class=\"keyword\">true</span>, mode );</div>\n\
<div class=\"line\">SelectObj( L<span class=\"stringliteral\">&quot;cone.polymsh.cls.EnvelopWeightCls.Envelope_Weights&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">cone.GetActivePrimitive().GetGeometry(0);</div>\n\
<div class=\"line\">ProjectItem EnvProp = xsi.GetSelection()[0];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CRefArray attrs = EnvProp.GetICEAttributes();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordflow\">for</span>( ULONG i = 0; i&lt;attrs.GetCount(); i++ )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a> attr = attrs[i];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( attr.GetStructureType() != <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a25edb7cb80d670db4441230cee17938da06dc951d3628807244809d48f8ff40bb\">XSI::siICENodeStructureArray</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Only process 2D array data</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;*******************************************************************&quot;</span> );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Name: &quot;</span> + attr.GetName() );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;DataType: &quot;</span> + CString(attr.GetDataType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;StructType: &quot;</span> + CString(attr.GetStructureType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;ContextType: &quot;</span> + CString(attr.GetContextType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;IsConstant: &quot;</span> + CString(attr.IsConstant()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Readonly: &quot;</span> + CString(attr.IsReadonly()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;AttributeCategory: &quot;</span> + CString(attr.GetAttributeCategory()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Element count: &quot;</span> + CString(attr.GetElementCount()) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span>( attr.GetDataType() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa6d129b03ac68e45f215ad7d4772bca77\">XSI::siICENodeDataFloat</a>: CICEAttributeData2DLogger&lt;float&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa24b13c08f1203ad441d325e036f95726\">XSI::siICENodeDataLong</a>: CICEAttributeData2DLogger&lt;LONG&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa7192f71158729ca2a860431deee659ed\">XSI::siICENodeDataBool</a>: CICEAttributeData2DLogger&lt;bool&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa7accac80a2196fb9c7fefd284f1a7493\">XSI::siICENodeDataVector2</a>: CICEAttributeData2DLogger&lt;XSI::MATH::CVector2f&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataVector3: CICEAttributeData2DLogger&lt;XSI::MATH::CVector3f&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataVector4: CICEAttributeData2DLogger&lt;XSI::MATH::CVector4f&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataQuaternion: CICEAttributeData2DLogger&lt;XSI::MATH::CQuaternionf&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataRotation: CICEAttributeData2DLogger&lt;XSI::MATH::CRotationf&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataMatrix33: CICEAttributeData2DLogger&lt;XSI::MATH::CMatrix3f&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataMatrix44: CICEAttributeData2DLogger&lt;XSI::MATH::CMatrix4f&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> XSI::siICENodeDataColor4: CICEAttributeData2DLogger&lt;XSI::MATH::CColor4f&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa5016a9b3caf0aa62869888c850c87bda\">XSI::siICENodeDataString</a>: CICEAttributeData2DLogger&lt;XSI::CString&gt;::Log( attr ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Helpers</span></div>\n\
<div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(4);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\">    args[0]= in_presetobj;</div>\n\
<div class=\"line\">    args[1]= in_geometrytype;</div>\n\
<div class=\"line\">    args[2]= in_name;</div>\n\
<div class=\"line\">    args[3]= in_parent;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;CreatePrim&quot;</span>, args, retval );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CValue Create2DSkeleton( <span class=\"keyword\">const</span> CValue&amp; in_rx, <span class=\"keyword\">const</span> CValue&amp; in_ry, <span class=\"keyword\">const</span> CValue&amp; in_rz, <span class=\"keyword\">const</span> CValue&amp; in_ex, <span class=\"keyword\">const</span> CValue&amp; in_ey, <span class=\"keyword\">const</span> CValue&amp; in_ez, <span class=\"keyword\">const</span> CValue&amp; in_nx, <span class=\"keyword\">const</span> CValue&amp; in_ny, <span class=\"keyword\">const</span> CValue&amp; in_nz, <span class=\"keyword\">const</span> CValue&amp; in_viewtype,  CValue&amp; out_bone,  CValue&amp; out_effector )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(12);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    args[0]= in_rx;</div>\n\
<div class=\"line\">    args[1]= in_ry;</div>\n\
<div class=\"line\">    args[2]= in_rz;</div>\n\
<div class=\"line\">    args[3]= in_ex;</div>\n\
<div class=\"line\">    args[4]= in_ey;</div>\n\
<div class=\"line\">    args[5]= in_ez;</div>\n\
<div class=\"line\">    args[6]= in_nx;</div>\n\
<div class=\"line\">    args[7]= in_ny;</div>\n\
<div class=\"line\">    args[8]= in_nz;</div>\n\
<div class=\"line\">    args[9]= in_viewtype;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;Create2DSkeleton&quot;</span>, args, retval );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    out_bone = args[10];</div>\n\
<div class=\"line\">    out_effector = args[11];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CValue AppendBone( <span class=\"keyword\">const</span> CValue&amp;  in_inputobjs, <span class=\"keyword\">const</span> CValue&amp; in_ex, <span class=\"keyword\">const</span> CValue&amp; in_ey, <span class=\"keyword\">const</span> CValue&amp; in_ez, <span class=\"keywordtype\">bool</span> in_pin )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(5);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    args[0]= in_inputobjs;</div>\n\
<div class=\"line\">    args[1]= in_ex;</div>\n\
<div class=\"line\">    args[2]= in_ey;</div>\n\
<div class=\"line\">    args[3]= in_ez;</div>\n\
<div class=\"line\">    args[4]= in_pin;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;AppendBone&quot;</span>, args, retval );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CValue ApplyFlexEnv( <span class=\"keyword\">const</span> CValue&amp;  in_connectionset, <span class=\"keywordtype\">bool</span> in_assignnewdeformers,  <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2c\">XSI::siConstructionMode</a> &amp; io_constructionmode )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(3);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    args[0]= in_connectionset;</div>\n\
<div class=\"line\">    args[1]= in_assignnewdeformers;</div>\n\
<div class=\"line\">    args[2]= io_constructionmode;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;ApplyFlexEnv&quot;</span>, args, retval );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    io_constructionmode = (<a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2c\">XSI::siConstructionMode</a>)(LONG)args[2];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> SelectObj( <span class=\"keyword\">const</span> CValue&amp;  in_selectionlist, <span class=\"keyword\">const</span> CString&amp; in_hierarchylevel, <span class=\"keywordtype\">bool</span> in_checkobjectselectability )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(3);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\">    args[0]= in_selectionlist;</div>\n\
<div class=\"line\">    args[1]= in_hierarchylevel;</div>\n\
<div class=\"line\">    args[2]= in_checkobjectselectability;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    CStatus st = app.ExecuteCommand( L<span class=\"stringliteral\">&quot;SelectObj&quot;</span>, args, retval );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>This example demonstrate how to set the data on a 2D array attribute type. <div class=\"fragment\"><div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">template</span> &lt; <span class=\"keyword\">class</span> T &gt;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>CICEAttributeData2DLogger</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> Log( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a>&amp; attr )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        CICEAttributeDataArray2D&lt; T &gt; data2D;</div>\n\
<div class=\"line\">        attr.GetDataArray2D( data2D );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Application xsi;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( ULONG i=0; i&lt;data2D.GetCount( ); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            CICEAttributeDataArray&lt; T &gt; data;</div>\n\
<div class=\"line\">            data2D.GetSubArray( i, data );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>( ULONG j=0; j&lt;data.GetCount( ); j++ )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                xsi.LogMessage( CString( data[ j ] ) );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\">Application xsi;</div>\n\
<div class=\"line\">X3DObject cone( CreatePrim( L<span class=\"stringliteral\">&quot;Cone&quot;</span>, L<span class=\"stringliteral\">&quot;MeshSurface&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a> attr = cone.GetActivePrimitive().GetGeometry().AddICEAttribute( <span class=\"stringliteral\">&quot;DataArray2DMat44&quot;</span>, XSI::siICENodeDataMatrix44, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a25edb7cb80d670db4441230cee17938da06dc951d3628807244809d48f8ff40bb\">XSI::siICENodeStructureArray</a>, <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a3868a5b6193c034d90a55089dc65c605aca70084d89c965af244e2cfda987d84e\">XSI::siICENodeContextComponent0D</a> );</div>\n\
<div class=\"line\">MATH::CMatrix4f Mat4A( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 );</div>\n\
<div class=\"line\">MATH::CMatrix4f Mat4B( 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CICEAttributeDataArray2D&lt; MATH::CMatrix4f &gt; data2D;</div>\n\
<div class=\"line\">attr.GetDataArray2D( data2D );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CICEAttributeDataArray&lt; MATH::CMatrix4f &gt; data;</div>\n\
<div class=\"line\">ULONG subArraySize = 6; <span class=\"comment\">// This can be any number. </span></div>\n\
<div class=\"line\">data2D.ResizeSubArray( 0, subArraySize, data);</div>\n\
<div class=\"line\">data[0] = Mat4A;</div>\n\
<div class=\"line\">data[1] = Mat4B;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CICEAttributeData2DLogger&lt;MATH::CMatrix4f&gt;::Log( attr );    </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Example with memcpy for 6 elements </span></div>\n\
<div class=\"line\">    MATH::CMatrix4f l_Values[subArraySize] = { Mat4A, Mat4A, Mat4A, Mat4B, Mat4B, Mat4B };</div>\n\
<div class=\"line\">    memcpy( &amp;data[0], &amp;l_Values[0], subArraySize * <span class=\"keyword\">sizeof</span>(MATH::CMatrix4f) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    CICEAttributeData2DLogger&lt;MATH::CMatrix4f&gt;::Log( attr );    </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Helpers</span></div>\n\
<div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(4);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\">    args[0]= in_presetobj;</div>\n\
<div class=\"line\">    args[1]= in_geometrytype;</div>\n\
<div class=\"line\">    args[2]= in_name;</div>\n\
<div class=\"line\">    args[3]= in_parent;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;CreatePrim&quot;</span>, args, retval );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </dd></dl>\n\
<dl class=\"section see\"><dt>See Also</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a925874a7a044415741ff83bd06e95821\">ICEAttribute::GetStructureType</a> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"abd8b88c0aded6796c3aedca14b546f82\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> GetDataArray2DChunk </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">ULONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_nOffset</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">ULONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_nSize</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBaseICEAttributeDataArray.html\">CBaseICEAttributeDataArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>io_dataArray</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns CBaseICEAttributeDataArray2D object containing the 2D data defined by this attribute. The data can be accessed in multiple chunks given an index offset that refers to the attribute\'s global data buffer and a chunk size. GetDataArray2DChunk is particularly useful for minimizing the memory allocation required to store the data retrieved from a very large data set. An empty array is returned if the attribute\'s structure type is not a 2D array.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_nOffset</td><td>Index offset into the attribute data buffer. </td></tr>\n\
    <tr><td class=\"paramname\">in_nSize</td><td>Size of chunk to gather. </td></tr>\n\
    <tr><td class=\"paramname\">io_dataArray</td><td>Newly created array of <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html\" title=\"The ICEAttribute object represents an attribute data set (a collection of information used in the ICE...\">ICEAttribute</a> data.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> Success. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281daf9d46b7804d93a4fcde88489a1b68c24\">CStatus::False</a> Attribute has no data set yet. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2c88d6b09611bebcfd079df624ae3bfe\">CStatus::Fail</a> Operation failed.</dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>This example shows how to access all attribute data of an envelope weight property. <div class=\"fragment\"><div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent )</div>\n\
<div class=\"line\">CValue Create2DSkeleton( <span class=\"keyword\">const</span> CValue&amp; in_rx, <span class=\"keyword\">const</span> CValue&amp; in_ry, <span class=\"keyword\">const</span> CValue&amp; in_rz, <span class=\"keyword\">const</span> CValue&amp; in_ex, <span class=\"keyword\">const</span> CValue&amp; in_ey, <span class=\"keyword\">const</span> CValue&amp; in_ez, <span class=\"keyword\">const</span> CValue&amp; in_nx, <span class=\"keyword\">const</span> CValue&amp; in_ny, <span class=\"keyword\">const</span> CValue&amp; in_nz, <span class=\"keyword\">const</span> CValue&amp; in_viewtype,  CValue&amp; out_bone,  CValue&amp; out_effector );</div>\n\
<div class=\"line\">CValue AppendBone( <span class=\"keyword\">const</span> CValue&amp;  in_inputobjs, <span class=\"keyword\">const</span> CValue&amp; in_ex, <span class=\"keyword\">const</span> CValue&amp; in_ey, <span class=\"keyword\">const</span> CValue&amp; in_ez, <span class=\"keywordtype\">bool</span> in_pin );</div>\n\
<div class=\"line\">CValue ApplyFlexEnv( <span class=\"keyword\">const</span> CValue&amp;  in_connectionset, <span class=\"keywordtype\">bool</span> in_assignnewdeformers,  <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2c\">XSI::siConstructionMode</a> &amp; io_constructionmode );</div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> SelectObj( <span class=\"keyword\">const</span> CValue&amp;  in_selectionlist, <span class=\"keyword\">const</span> CString&amp; in_hierarchylevel, <span class=\"keywordtype\">bool</span> in_checkobjectselectability ) ;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">template</span> &lt; <span class=\"keyword\">class</span> T &gt;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>CICEAttributeDataChunk2DLogger</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> Log( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a>&amp; attr, ULONG in_nOffset, ULONG in_nSize )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        CICEAttributeDataArray2D&lt; T &gt; data2D;</div>\n\
<div class=\"line\">        attr.GetDataArray2DChunk( in_nOffset, in_nSize, data2D );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Application xsi;</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;Chunk size: &quot;</span> + CString(data2D.GetCount( )) );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( ULONG i=0; i&lt;data2D.GetCount( ); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            CICEAttributeDataArray&lt; T &gt; data;</div>\n\
<div class=\"line\">            data2D.GetSubArray( i, data );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>( ULONG j=0; j&lt;data.GetCount( ); j++ )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                xsi.LogMessage( CString( data[ j ] ) );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">template</span> &lt; &gt;</div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>CICEAttributeDataChunk2DLogger&lt;XSI::CString&gt;</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> Log( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a>&amp; attr, ULONG in_nOffset, ULONG in_nSize )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        CICEAttributeDataArray2DString data2D;</div>\n\
<div class=\"line\">        attr.GetDataArray2DChunk( in_nOffset, in_nSize, data2D );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Application xsi;</div>\n\
<div class=\"line\">        xsi.LogMessage( L<span class=\"stringliteral\">&quot;Chunk size: &quot;</span> + CString(data2D.GetCount( )) );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( ULONG i=0; i&lt;data2D.GetCount( ); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            CICEAttributeDataArrayString data;</div>\n\
<div class=\"line\">            data2D.GetSubArray( i, data );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>( ULONG j=0; j&lt;data.GetCount( ); j++ )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                xsi.LogMessage( data[ j ] );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">Application xsi;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">X3DObject cone = CreatePrim( L<span class=\"stringliteral\">&quot;Cone&quot;</span>, L<span class=\"stringliteral\">&quot;MeshSurface&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\">Create2DSkeleton( 2.95, 3.34, -0.33, 4.73, 0.0, 0.0, -5.71, 0, 0, 4, CValue(<span class=\"stringliteral\">&quot;&quot;</span>), CValue(<span class=\"stringliteral\">&quot;&quot;</span>));</div>\n\
<div class=\"line\">AppendBone( L<span class=\"stringliteral\">&quot;eff&quot;</span>, 3.70, -3.02, 0.30, L<span class=\"stringliteral\">&quot;&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2c\">XSI::siConstructionMode</a> mode = <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2ca2598cf5c4d689ff7cc059ce14a7a0818\">siConstructionModeModeling</a>;</div>\n\
<div class=\"line\">ApplyFlexEnv( L<span class=\"stringliteral\">&quot;cone;bone,bone1,eff&quot;</span>, <span class=\"keyword\">true</span>, mode );</div>\n\
<div class=\"line\">SelectObj( L<span class=\"stringliteral\">&quot;cone.polymsh.cls.EnvelopWeightCls.Envelope_Weights&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span>, L<span class=\"stringliteral\">&quot;&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">cone.GetActivePrimitive().GetGeometry(0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">ProjectItem EnvProp = xsi.GetSelection()[0];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CRefArray attrs = EnvProp.GetICEAttributes();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">ULONG nChunkCount = 4;</div>\n\
<div class=\"line\"><span class=\"keywordflow\">for</span>( ULONG i = 0; i&lt;attrs.GetCount(); i++ )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a> attr = attrs[i];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( attr.GetStructureType() != <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a25edb7cb80d670db4441230cee17938da06dc951d3628807244809d48f8ff40bb\">XSI::siICENodeStructureArray</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Only process 2D array data</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;*******************************************************************&quot;</span> );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Name: &quot;</span> + attr.GetName() );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;DataType: &quot;</span> + CString(attr.GetDataType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;StructType: &quot;</span> + CString(attr.GetStructureType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;ContextType: &quot;</span> + CString(attr.GetContextType()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;IsConstant: &quot;</span> + CString(attr.IsConstant()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Readonly: &quot;</span> + CString(attr.IsReadonly()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;AttributeCategory: &quot;</span> + CString(attr.GetAttributeCategory()) );</div>\n\
<div class=\"line\">    xsi.LogMessage( L<span class=\"stringliteral\">&quot;Element count: &quot;</span> + CString(attr.GetElementCount()) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Compute the chunk vector to access the data</span></div>\n\
<div class=\"line\">    ULONG nChunkSize = attr.GetElementCount() / nChunkCount;</div>\n\
<div class=\"line\">    ULONG nLastChunk = attr.GetElementCount()  % nChunkCount;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    CLongArray nChunks;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>( ULONG iChunk = 0; iChunk &lt; nChunkCount; iChunk++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        nChunks.Add( nChunkSize );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    nChunks.Add( nLastChunk );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ULONG nOffset = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( ULONG j=0; j&lt;nChunks.GetCount(); j++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        ULONG nChunkSize = nChunks[j];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( nChunkSize == 0 )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span>( attr.GetDataType() )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa6d129b03ac68e45f215ad7d4772bca77\">XSI::siICENodeDataFloat</a>: CICEAttributeDataChunk2DLogger&lt;float&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa24b13c08f1203ad441d325e036f95726\">XSI::siICENodeDataLong</a>: CICEAttributeDataChunk2DLogger&lt;LONG&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa7192f71158729ca2a860431deee659ed\">XSI::siICENodeDataBool</a>: CICEAttributeDataChunk2DLogger&lt;bool&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa7accac80a2196fb9c7fefd284f1a7493\">XSI::siICENodeDataVector2</a>: CICEAttributeDataChunk2DLogger&lt;XSI::MATH::CVector2f&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataVector3: CICEAttributeDataChunk2DLogger&lt;XSI::MATH::CVector3f&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataVector4: CICEAttributeDataChunk2DLogger&lt;XSI::MATH::CVector4f&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataQuaternion: CICEAttributeDataChunk2DLogger&lt;XSI::MATH::CQuaternionf&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataRotation: CICEAttributeDataChunk2DLogger&lt;XSI::MATH::CRotationf&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataMatrix33: CICEAttributeDataChunk2DLogger&lt;XSI::MATH::CMatrix3f&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataMatrix44: CICEAttributeDataChunk2DLogger&lt;XSI::MATH::CMatrix4f&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> XSI::siICENodeDataColor4: CICEAttributeDataChunk2DLogger&lt;XSI::MATH::CColor4f&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aa5016a9b3caf0aa62869888c850c87bda\">XSI::siICENodeDataString</a>: CICEAttributeDataChunk2DLogger&lt;XSI::CString&gt;::Log( attr, nOffset, nChunkSize ); <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        nOffset += nChunkSize;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Helpers</span></div>\n\
<div class=\"line\">CValue CreatePrim( <span class=\"keyword\">const</span> CString&amp; in_presetobj, <span class=\"keyword\">const</span> CString&amp; in_geometrytype, <span class=\"keyword\">const</span> CString&amp; in_name, <span class=\"keyword\">const</span> CString&amp; in_parent )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(4);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\">    args[0]= in_presetobj;</div>\n\
<div class=\"line\">    args[1]= in_geometrytype;</div>\n\
<div class=\"line\">    args[2]= in_name;</div>\n\
<div class=\"line\">    args[3]= in_parent;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;CreatePrim&quot;</span>, args, retval );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CValue Create2DSkeleton( <span class=\"keyword\">const</span> CValue&amp; in_rx, <span class=\"keyword\">const</span> CValue&amp; in_ry, <span class=\"keyword\">const</span> CValue&amp; in_rz, <span class=\"keyword\">const</span> CValue&amp; in_ex, <span class=\"keyword\">const</span> CValue&amp; in_ey, <span class=\"keyword\">const</span> CValue&amp; in_ez, <span class=\"keyword\">const</span> CValue&amp; in_nx, <span class=\"keyword\">const</span> CValue&amp; in_ny, <span class=\"keyword\">const</span> CValue&amp; in_nz, <span class=\"keyword\">const</span> CValue&amp; in_viewtype,  CValue&amp; out_bone,  CValue&amp; out_effector )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(12);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    args[0]= in_rx;</div>\n\
<div class=\"line\">    args[1]= in_ry;</div>\n\
<div class=\"line\">    args[2]= in_rz;</div>\n\
<div class=\"line\">    args[3]= in_ex;</div>\n\
<div class=\"line\">    args[4]= in_ey;</div>\n\
<div class=\"line\">    args[5]= in_ez;</div>\n\
<div class=\"line\">    args[6]= in_nx;</div>\n\
<div class=\"line\">    args[7]= in_ny;</div>\n\
<div class=\"line\">    args[8]= in_nz;</div>\n\
<div class=\"line\">    args[9]= in_viewtype;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;Create2DSkeleton&quot;</span>, args, retval );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    out_bone = args[10];</div>\n\
<div class=\"line\">    out_effector = args[11];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CValue AppendBone( <span class=\"keyword\">const</span> CValue&amp;  in_inputobjs, <span class=\"keyword\">const</span> CValue&amp; in_ex, <span class=\"keyword\">const</span> CValue&amp; in_ey, <span class=\"keyword\">const</span> CValue&amp; in_ez, <span class=\"keywordtype\">bool</span> in_pin )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(5);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    args[0]= in_inputobjs;</div>\n\
<div class=\"line\">    args[1]= in_ex;</div>\n\
<div class=\"line\">    args[2]= in_ey;</div>\n\
<div class=\"line\">    args[3]= in_ez;</div>\n\
<div class=\"line\">    args[4]= in_pin;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;AppendBone&quot;</span>, args, retval );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CValue ApplyFlexEnv( <span class=\"keyword\">const</span> CValue&amp;  in_connectionset, <span class=\"keywordtype\">bool</span> in_assignnewdeformers,  <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2c\">XSI::siConstructionMode</a> &amp; io_constructionmode )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(3);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    args[0]= in_connectionset;</div>\n\
<div class=\"line\">    args[1]= in_assignnewdeformers;</div>\n\
<div class=\"line\">    args[2]= io_constructionmode;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\">    app.ExecuteCommand( L<span class=\"stringliteral\">&quot;ApplyFlexEnv&quot;</span>, args, retval );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    io_constructionmode = (<a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#ac6805fcc10be81bcc4f14d6a33447f2c\">XSI::siConstructionMode</a>)(LONG)args[2];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> retval;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> SelectObj( <span class=\"keyword\">const</span> CValue&amp;  in_selectionlist, <span class=\"keyword\">const</span> CString&amp; in_hierarchylevel, <span class=\"keywordtype\">bool</span> in_checkobjectselectability )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    CValueArray args(3);</div>\n\
<div class=\"line\">    CValue retval;</div>\n\
<div class=\"line\">    args[0]= in_selectionlist;</div>\n\
<div class=\"line\">    args[1]= in_hierarchylevel;</div>\n\
<div class=\"line\">    args[2]= in_checkobjectselectability;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    Application app;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    CStatus st = app.ExecuteCommand( L<span class=\"stringliteral\">&quot;SelectObj&quot;</span>, args, retval );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </dd></dl>\n\
<dl class=\"section see\"><dt>See Also</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a925874a7a044415741ff83bd06e95821\">ICEAttribute::GetStructureType</a> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a87e7a9cfd06727061a56bc35008afb56\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStringArray.html\">CStringArray</a> GetCustomDataTypes </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns an array of custom data types defined for this ICEAttribute. Custom data types are defined by custom ICENodes and are used as data types for defining custom ICEPorts and ICEAttributes. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Array of custom data type names. Returns an empty array if no custom types are defined on this ICEAttribute. </dd></dl>\n\
<dl class=\"section see\"><dt>See Also</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICENodeDef.html#a5593d1e9834c055e93a96a4979985195\">ICENodeDef::DefineCustomType</a> </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICENodePort.html#a87e7a9cfd06727061a56bc35008afb56\">ICENodePort::GetCustomDataTypes</a> </dd></dl>\n\
<dl class=\"section since\"><dt>Since</dt><dd>8.0 (2010)</dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>This example demonstrates how to access custom data types from ICEAttribute objects. <div class=\"fragment\"><div class=\"line\">Application app;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Loads the GridWalker custom node plug-in from the examples workgroup</span></div>\n\
<div class=\"line\">CString strWrkgrp = <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CUtils.html#ad9305050d7a0f5c5ec195c6f9246c22a\">CUtils::BuildPath</a>( app.GetInstallationPath(<a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a78f4f7bf0e1dcfc222ef5ccc055fc6afa94d6a11a7c1cfe2c7e57c4c91f3bc5ca\">siFactoryPath</a> ), <span class=\"stringliteral\">&quot;XSISDK&quot;</span>, <span class=\"stringliteral\">&quot;examples&quot;</span>, <span class=\"stringliteral\">&quot;workgroup&quot;</span> );</div>\n\
<div class=\"line\">app.AddWorkgroup( strWrkgrp  );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Opens the GridWalker scene containing custom data types</span></div>\n\
<div class=\"line\">CValueArray args(2);</div>\n\
<div class=\"line\">CValue retval;</div>\n\
<div class=\"line\">args[0] = <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CUtils.html#ad9305050d7a0f5c5ec195c6f9246c22a\">CUtils::BuildPath</a>( strWrkgrp, <span class=\"stringliteral\">&quot;Addons&quot;</span>, <span class=\"stringliteral\">&quot;CustomICENodes&quot;</span>, <span class=\"stringliteral\">&quot;Data&quot;</span>, <span class=\"stringliteral\">&quot;Project&quot;</span>, <span class=\"stringliteral\">&quot;Scenes&quot;</span>, <span class=\"stringliteral\">&quot;GridWalker&quot;</span> ) + <span class=\"stringliteral\">&quot;.scn&quot;</span>;</div>\n\
<div class=\"line\">args[2] = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">app.ExecuteCommand( <span class=\"stringliteral\">&quot;OpenScene&quot;</span>, args, retval );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Logs custom data type</span></div>\n\
<div class=\"line\">CStringArray strNoFamily;</div>\n\
<div class=\"line\">CString strNoType;</div>\n\
<div class=\"line\">Geometry geom( app.GetActiveSceneRoot().FindChild(<span class=\"stringliteral\">&quot;grid&quot;</span>, strNoType, strNoFamily).GetActivePrimitive().GetGeometry() );</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1ICEAttribute.html#a0f27c868340a39cbd84623e33e8e9335\">ICEAttribute</a> attrib = geom.GetICEAttributeFromName( <span class=\"stringliteral\">&quot;GridWalkerState&quot;</span> );</div>\n\
<div class=\"line\">app.LogMessage( CString(<span class=\"stringliteral\">&quot;Custom data type for attribute &lt;&quot;</span>) + attrib.GetName() + <span class=\"stringliteral\">&quot;&gt;: &quot;</span> + attrib.GetCustomDataTypes()[0] );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Output:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// # INFO : Custom data type for attribute &lt;GridWalkerState&gt;: GridWalkState_v1</span></div>\n\
</div><!-- fragment --> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae819505e321629187049288470e8fe2b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool IsAlwaysEvaluated </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns a boolean value indicating whether the attribute is marked as always evaluated. If it is true than attribute will be always evaluated regardless of ICE optimization which excludes attributes from evaluation which are not required for data visualization </p>\n\
<dl class=\"section user\"><dt>Note:</dt><dd></dd></dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if attribute is marked as always evaluated. </dd></dl>\n\
<dl class=\"section since\"><dt>Since</dt><dd>v13.0 (2015 Beta 1) </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a66c6820ed6a052016ff08b7e19d2a9bb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> SetAlwaysEvaluated </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>in_bAlwaysEvaluated</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Set/Reset attribute as always evaluated. If it is true than attribute will be always evaluated regardless of ICE optimization which excludes attributes from evaluation which are not required for data visualization </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_bAlwaysEvaluated</td><td>true if attribute should be always evaluated </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> Success. </dd></dl>\n\
<dl class=\"section since\"><dt>Since</dt><dd>v13.0 (2015 Beta 1) </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following file:<ul>\n\
<li><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/xsi__iceattribute_8h_source.html\">xsi_iceattribute.h</a></li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";