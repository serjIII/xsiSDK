var topic = "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n\
<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/lib/jquery-1.9.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><script type=\"text/javascript\" src=\"../scripts/utils/adsk.redirect.js\"></script>\n\
      <title>CBitArray Class Reference</title>\n\
   \n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"si_cpp/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"si_cpp/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"si_cpp/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/yepnope.1.5.4-min.js\"); });</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var weAreIn21 = $(\"div#main.view-active\").length;\n\
var prefix = \"\";\n\
if (weAreIn21)\n\
{ prefix = \"si_cpp/\"; }\n\
yepnope([{\n\
load:[prefix + \"jquery.js\", prefix + \"navtree.js\", prefix + \"resize.js\", prefix + \"dynsections.js\"],\n\
complete: function() {\n\
  dQuery = jQuery.noConflict(\'true\');\n\
  dQuery(window).load(resizeHeight);\n\
  dQuery(document).ready( function () {\n\
    setTimeout( function () {\n\
      initResizable();\n\
      initNavTree(\'classXSI_1_1CBitArray.html\', prefix);\n\
      dQuery(window).trigger(\"load\");\n\
      }, 100);\n\
    }\n\
  );\n\
}\n\
}]\n\
)\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>CBitArray Class Reference</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.6 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./si_cpp/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./si_cpp/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/files.html\"><span>Files</span></a></li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./si_cpp/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"summary\">\n\
<a href=\"#pub-methods\">Public Member Functions</a>  </div>\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">CBitArray Class Reference</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p><code>#include &lt;<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/xsi__bitarray_8h_source.html\">xsi_bitarray.h</a>&gt;</code></p>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Class Description</h2>\n\
<div class=\"textblock\"><p>This class encapsulates an array of binary values represented as booleans, where true indicates a bit set to ON and false indicates a bit set to OFF. </p>\n\
<p><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> is suitable for dealing with large arrays of boolean values in a compact way. Because <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> uses much less memory than <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBoolArray.html\" title=\"The CBoolArray is an uni-dimensional array of bool values. \">CBoolArray</a> would use to represent the same number of bits, it is strongly recommended to use it when a large set of flags are needed.</p>\n\
<dl class=\"section since\"><dt>Since</dt><dd>5.0</dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd><div class=\"fragment\"><div class=\"line\"><span class=\"keyword\">using namespace </span>XSI;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1Application.html\">Application</a> app;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> myFlags(10);</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> myOtherFlags(20);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">myOtherFlags.SetAll(0, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">myFlags.Or( myOtherFlags );</div>\n\
<div class=\"line\"><span class=\"keywordflow\">for</span> (LONG i=0; i&lt;myFlags.GetCount(); i++)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    app.<a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1Application.html#a9b269de260f6a9fca710d9b9003bd1a3\">LogMessage</a>( L<span class=\"stringliteral\">&quot;myFlags[&quot;</span> + <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a>(i) + L<span class=\"stringliteral\">&quot;] = &quot;</span> + <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a>(myFlags[i]) );</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </dd></dl>\n\
</div><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:aff8f7905ee94715f168c7353d8e80050\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#aff8f7905ee94715f168c7353d8e80050\">~CBitArray</a> ()</td></tr>\n\
<tr class=\"separator:aff8f7905ee94715f168c7353d8e80050\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa845b2fccab27aee6fb5245c3c7899ed\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#aa845b2fccab27aee6fb5245c3c7899ed\">CBitArray</a> (LONG in_size=0)</td></tr>\n\
<tr class=\"separator:aa845b2fccab27aee6fb5245c3c7899ed\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1e244a70a3878942fe4924089728d1df\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a1e244a70a3878942fe4924089728d1df\">CBitArray</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;in_str)</td></tr>\n\
<tr class=\"separator:a1e244a70a3878942fe4924089728d1df\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7006dafe08f19cf02a1df3001fd41d17\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a7006dafe08f19cf02a1df3001fd41d17\">CBitArray</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBoolArray.html\">CBoolArray</a> &amp;in_boolArray)</td></tr>\n\
<tr class=\"separator:a7006dafe08f19cf02a1df3001fd41d17\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a73ec9d2c28d6d656b22c0728f3e15e56\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a73ec9d2c28d6d656b22c0728f3e15e56\">operator=</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;in_array)</td></tr>\n\
<tr class=\"separator:a73ec9d2c28d6d656b22c0728f3e15e56\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4dac74bbb0cf56e2066dfa8744626451\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a4dac74bbb0cf56e2066dfa8744626451\">operator==</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;in_array) const </td></tr>\n\
<tr class=\"separator:a4dac74bbb0cf56e2066dfa8744626451\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a36e01549aaca8c89db1d244b67d56dfb\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a36e01549aaca8c89db1d244b67d56dfb\">operator!=</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;in_array) const </td></tr>\n\
<tr class=\"separator:a36e01549aaca8c89db1d244b67d56dfb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab761f6d7dba67dfd4da7d410536e83d2\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#ab761f6d7dba67dfd4da7d410536e83d2\">operator[]</a> (LONG in_pos) const </td></tr>\n\
<tr class=\"separator:ab761f6d7dba67dfd4da7d410536e83d2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a352760515668252092fcd2ab7fe320ca\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a352760515668252092fcd2ab7fe320ca\">operator[]</a> (LONG in_pos)</td></tr>\n\
<tr class=\"separator:a352760515668252092fcd2ab7fe320ca\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa289d18fad2cba4e1ffb3f2cf74f6ae1\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#aa289d18fad2cba4e1ffb3f2cf74f6ae1\">Add</a> (const bool &amp;in_bVal)</td></tr>\n\
<tr class=\"separator:aa289d18fad2cba4e1ffb3f2cf74f6ae1\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad7b85f998d2e6f1cb9b179127fcd1259\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#ad7b85f998d2e6f1cb9b179127fcd1259\">Set</a> (LONG in_pos, bool in_bVal)</td></tr>\n\
<tr class=\"separator:ad7b85f998d2e6f1cb9b179127fcd1259\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a5513a7bf69ef723fafbdfc801bf9816e\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a5513a7bf69ef723fafbdfc801bf9816e\">SetAll</a> (bool in_bVal)</td></tr>\n\
<tr class=\"separator:a5513a7bf69ef723fafbdfc801bf9816e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af19897f1755e4822e753fb72eb475c63\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#af19897f1755e4822e753fb72eb475c63\">Resize</a> (LONG in_size, bool in_bVal=false)</td></tr>\n\
<tr class=\"separator:af19897f1755e4822e753fb72eb475c63\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af91f0dee1a2a4d9fb7c8c3bc827199b7\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#af91f0dee1a2a4d9fb7c8c3bc827199b7\">Clear</a> ()</td></tr>\n\
<tr class=\"separator:af91f0dee1a2a4d9fb7c8c3bc827199b7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a845aa1e5063b24aedec1a99da2d8a4f3\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">LONG&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a845aa1e5063b24aedec1a99da2d8a4f3\">GetCount</a> () const </td></tr>\n\
<tr class=\"separator:a845aa1e5063b24aedec1a99da2d8a4f3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa668c73823e129e04f86b3c8b72fb0e8\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">LONG&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#aa668c73823e129e04f86b3c8b72fb0e8\">GetTrueCount</a> () const </td></tr>\n\
<tr class=\"separator:aa668c73823e129e04f86b3c8b72fb0e8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:adc6e8e544ca923bcd213665e286e8f98\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#adc6e8e544ca923bcd213665e286e8f98\">IsAny</a> () const </td></tr>\n\
<tr class=\"separator:adc6e8e544ca923bcd213665e286e8f98\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a80f2b0c5d6d002e89e6c8a8fc478e9b3\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a80f2b0c5d6d002e89e6c8a8fc478e9b3\">And</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;in_array)</td></tr>\n\
<tr class=\"separator:a80f2b0c5d6d002e89e6c8a8fc478e9b3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6106947258f218bfe6149f1c69b3f8bb\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a6106947258f218bfe6149f1c69b3f8bb\">Or</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;in_array)</td></tr>\n\
<tr class=\"separator:a6106947258f218bfe6149f1c69b3f8bb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a19aa739cf0d914637d9172d945bfcf1b\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a19aa739cf0d914637d9172d945bfcf1b\">XOr</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;in_array)</td></tr>\n\
<tr class=\"separator:a19aa739cf0d914637d9172d945bfcf1b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3870793d9e4d9ffaff933d16d5be4a56\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a3870793d9e4d9ffaff933d16d5be4a56\">FlipAll</a> ()</td></tr>\n\
<tr class=\"separator:a3870793d9e4d9ffaff933d16d5be4a56\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6ba91298883ea859edc7727234c0a831\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a6ba91298883ea859edc7727234c0a831\">Flip</a> (LONG in_pos)</td></tr>\n\
<tr class=\"separator:a6ba91298883ea859edc7727234c0a831\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a771607a08d7091a372d8f3fc4d1e9b5c\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">LONG&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a771607a08d7091a372d8f3fc4d1e9b5c\">GetIterator</a> (LONG in_pos=0) const </td></tr>\n\
<tr class=\"separator:a771607a08d7091a372d8f3fc4d1e9b5c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a77a62e8bdaaeeccb6a547bf4a371f502\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a77a62e8bdaaeeccb6a547bf4a371f502\">GetNextTrueBit</a> (LONG &amp;in_Iterator) const </td></tr>\n\
<tr class=\"separator:a77a62e8bdaaeeccb6a547bf4a371f502\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a03ab4616144109bf7f9819b9ebac3f28\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a03ab4616144109bf7f9819b9ebac3f28\">GetNextFalseBit</a> (LONG &amp;in_Iterator) const </td></tr>\n\
<tr class=\"separator:a03ab4616144109bf7f9819b9ebac3f28\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"aff8f7905ee94715f168c7353d8e80050\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">~<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Default destructor. </p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa845b2fccab27aee6fb5245c3c7899ed\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">LONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_size</em> = <code>0</code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Constructs a <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> object of a specified size. The values are initially set to false. If a size is not supplied, the object is created with no bit values, we must then use <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#af19897f1755e4822e753fb72eb475c63\">CBitArray::Resize</a> to initialize the object. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_size</td><td>Number of bit values in the new <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a>. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1e244a70a3878942fe4924089728d1df\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_str</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Constructs a <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> object that contains bit values copied from another <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> object. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_str</td><td>Constant <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> reference object. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7006dafe08f19cf02a1df3001fd41d17\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBoolArray.html\">CBoolArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_boolArray</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Constructs a <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> object and initializes it with the values coming from a <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBoolArray.html\" title=\"The CBoolArray is an uni-dimensional array of bool values. \">CBoolArray</a> object. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_boolArray</td><td>Constant <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBoolArray.html\" title=\"The CBoolArray is an uni-dimensional array of bool values. \">CBoolArray</a> reference object. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a73ec9d2c28d6d656b22c0728f3e15e56\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a>&amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_array</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Assignment operator. Copies the bit values of a specified <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> to this <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> object. This <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> is resized to fit the size of the specified <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> object. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_array</td><td><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> object that we want to assign. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A reference to this <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> after it has been modified. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4dac74bbb0cf56e2066dfa8744626451\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool operator== </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_array</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Equality operator. Tests if one <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> has the same contents as another. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_array</td><td><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> with which we want to compare. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if all elements are the same; false if some or all elements are different. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a36e01549aaca8c89db1d244b67d56dfb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool operator!= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_array</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>InEquality operator. Tests if two CBitArrays have different contents. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_array</td><td><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> with which we want to compare. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if all elements are different; false if some or all elements are the same. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab761f6d7dba67dfd4da7d410536e83d2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">const bool operator[] </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">LONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_pos</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Accessor to bit values at a given position. This function can only be called by constant objects, the returned value is read-only. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_pos</td><td>Position in this zero-based array. The position must be smaller than the number of elements in the array, otherwise the results are unpredicted. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A read-only bit value. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a352760515668252092fcd2ab7fe320ca\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool operator[] </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">LONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_pos</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Array element operator. Gets the bit value at a specified position. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_pos</td><td>0-based position in the array. The result is unpredicted if the position is invalid. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A bit value. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa289d18fad2cba4e1ffb3f2cf74f6ae1\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> Add </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const bool &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_bVal</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Adds a bit value at the end of this array. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_bVal</td><td>New bit value to be added at the end of the array. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> success </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad7b85f998d2e6f1cb9b179127fcd1259\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> Set </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">LONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_pos</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>in_bVal</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Sets a bit value to true or false at the specified position. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_pos</td><td>0-based position in the array. The result is unpredicted if the position is invalid. </td></tr>\n\
    <tr><td class=\"paramname\">in_bVal</td><td>The boolean value to assign to the bit value. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> success </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281dad795f6709d0c6419c4fe31703e454e27\">CStatus::InvalidArgument</a> Position is out of bound </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a5513a7bf69ef723fafbdfc801bf9816e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> SetAll </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>in_bVal</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Sets all bit values to true or false. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_bVal</td><td>The boolean value to assign to the bit values. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> success </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af19897f1755e4822e753fb72eb475c63\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> Resize </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">LONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_size</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>in_bVal</em> = <code>false</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Reallocates memory for the array, preserves its contents if new size is larger than existing size. The new elements are set to false by default. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_size</td><td>New size of the array. </td></tr>\n\
    <tr><td class=\"paramname\">in_bVal</td><td>If true the new bit values are set to true (ON) or are set to false (OFF) if the value is false. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> success </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2c88d6b09611bebcfd079df624ae3bfe\">CStatus::Fail</a> failure </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af91f0dee1a2a4d9fb7c8c3bc827199b7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> Clear </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Clears the memory and set the number of bit values to 0. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> success </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a845aa1e5063b24aedec1a99da2d8a4f3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">LONG GetCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the number of bit values in the array. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The number of bit values. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa668c73823e129e04f86b3c8b72fb0e8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">LONG GetTrueCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the number of bit values in the array set to true. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The number of bit values set to true. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"adc6e8e544ca923bcd213665e286e8f98\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool IsAny </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns true if at least one bit value is set to true. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if at least one bit value is set to true. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a80f2b0c5d6d002e89e6c8a8fc478e9b3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a>&amp; And </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_array</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Performs the bitwise AND operation on the bit values in the <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> against the corresponding elements in the specified <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a>. Two bits combined by the AND operator return true if each bit is true; otherwise, their combination returns false. If the input array is smaller, then it is temporarily padded with zeros; otherwise, if the input array is of equal or greater length, the operation is performed up to the length of the object\'s array. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_array</td><td><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> that is to be used to perform the bitwise AND operation. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to this <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> object. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6106947258f218bfe6149f1c69b3f8bb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a>&amp; Or </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_array</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Performs the bitwise OR operation on the bit values in the <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> against the corresponding elements in the specified <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a>. Two bits combined by the OR operator return true if at least one of the bits is true; if both bits are false, their combination returns false. If the input array is smaller, then it is temporarily padded with zeros; otherwise, if the input array is of equal or greater length, the operation is performed up to the length of the object\'s array. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_array</td><td><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> that is to be used to perform the bitwise OR operation. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to this <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> object. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a19aa739cf0d914637d9172d945bfcf1b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a>&amp; XOr </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_array</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Performs the bitwise XOR operation on the bit values in the <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> against the corresponding elements in the specified <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a>. Two bits combined by the XOR operator return true if at least one, but not both, of the bits is true; otherwise, their combination returns false. If the input array is smaller, then it is temporarily padded with zeros; otherwise, if the input array is of equal or greater length, the operation is performed up to the length of the object\'s array. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_array</td><td><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> that is to be used to perform the bitwise OR operation. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to this <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> object. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a3870793d9e4d9ffaff933d16d5be4a56\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a>&amp; FlipAll </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Inverts all bit values of this <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> object. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Reference to this <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\" title=\"This class encapsulates an array of binary values represented as booleans, where true indicates a bit...\">CBitArray</a> object. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6ba91298883ea859edc7727234c0a831\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool Flip </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">LONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_pos</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Inverts the value of a bit value at a specified position. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_pos</td><td>0-based position in the array. The result is unpredicted if the position is invalid. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The new bit value. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a771607a08d7091a372d8f3fc4d1e9b5c\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">LONG GetIterator </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">LONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_pos</em> = <code>0</code></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns an iterator used by the fast bit-lookup functions. This function must be used for getting the right iterator, don\'t use the bit value position directly as the resulting lookup operations can be unpredictable. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_pos</td><td>The position in the array where to start the fast lookup. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A start iterator. </dd></dl>\n\
<dl class=\"section see\"><dt>See Also</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a77a62e8bdaaeeccb6a547bf4a371f502\">CBitArray::GetNextTrueBit</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a03ab4616144109bf7f9819b9ebac3f28\">CBitArray::GetNextFalseBit</a> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a77a62e8bdaaeeccb6a547bf4a371f502\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool GetNextTrueBit </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">LONG &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_Iterator</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Allows fast bit-lookup operations. It starts at the current iterator position, and looks for the next bit set to true. If the lookup is successful, the bit value position in the array is returned. This position can then be used to access the bit value.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_Iterator</td><td>The iterator where the lookup starts. The function sets the iterator with the position of the next bit set to true. If the end of the array is reached, the iterator is set with the total number of bit values in the array. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the end of array is reached, false otherwise. </dd></dl>\n\
<dl class=\"section see\"><dt>See Also</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a03ab4616144109bf7f9819b9ebac3f28\">CBitArray::GetNextFalseBit</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a771607a08d7091a372d8f3fc4d1e9b5c\">CBitArray::GetIterator</a></dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd><div class=\"fragment\"><div class=\"line\"><span class=\"keyword\">using namespace </span>XSI;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1Application.html\">Application</a> app;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> bits(512);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">bits.Set( 0, <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">bits.Set( 32, <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">bits.Set( 44, <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">bits.Set( 65, <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">bits.Set( 312, <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">LONG it = bits.GetIterator();</div>\n\
<div class=\"line\"><span class=\"keywordflow\">while</span> (bits.GetNextTrueBit(it))</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    app.<a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1Application.html#a9b269de260f6a9fca710d9b9003bd1a3\">LogMessage</a>( L<span class=\"stringliteral\">&quot;bits[&quot;</span> + <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a>(it) + L<span class=\"stringliteral\">&quot;] = &quot;</span> + <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a>(bits[it]) );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Expected results</span></div>\n\
<div class=\"line\"><span class=\"comment\">// INFO: bits[0] = true</span></div>\n\
<div class=\"line\"><span class=\"comment\">// INFO: bits[32] = true</span></div>\n\
<div class=\"line\"><span class=\"comment\">// INFO: bits[44] = true</span></div>\n\
<div class=\"line\"><span class=\"comment\">// INFO: bits[65] = true</span></div>\n\
<div class=\"line\"><span class=\"comment\">// INFO: bits[312] = true</span></div>\n\
</div><!-- fragment --> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a03ab4616144109bf7f9819b9ebac3f28\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool GetNextFalseBit </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">LONG &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_Iterator</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>This function is similar to <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a77a62e8bdaaeeccb6a547bf4a371f502\">CBitArray::GetNextTrueBit</a>, but looks up the bit values set to false instead.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_Iterator</td><td>The iterator where the lookup starts. The function sets the iterator with the position of the next bit set to false. If the end of the array is reached, the iterator is set with the total number of bit values in the array. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the end of array is reached, false otherwise.</dd></dl>\n\
<dl class=\"section see\"><dt>See Also</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a77a62e8bdaaeeccb6a547bf4a371f502\">CBitArray::GetNextTrueBit</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html#a771607a08d7091a372d8f3fc4d1e9b5c\">CBitArray::GetIterator</a></dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd><div class=\"fragment\"><div class=\"line\"><span class=\"keyword\">using namespace </span>XSI;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1Application.html\">Application</a> app;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CBitArray.html\">CBitArray</a> bits(512);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">bits.SetAll(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">bits.Set( 15, <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">bits.Set( 31, <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">bits.Set( 63, <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">bits.Set( 127, <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">bits.Set( 255, <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">bits.Set( 511, <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">LONG it = bits.GetIterator();</div>\n\
<div class=\"line\"><span class=\"keywordflow\">while</span> (bits.GetNextFalseBit(it))</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    app.<a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1Application.html#a9b269de260f6a9fca710d9b9003bd1a3\">LogMessage</a>( L<span class=\"stringliteral\">&quot;bits[&quot;</span> + <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a>(it) + L<span class=\"stringliteral\">&quot;] = &quot;</span> + <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CString.html\">CString</a>(bits[it]) );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Expected results</span></div>\n\
<div class=\"line\"><span class=\"comment\">// INFO: bits[15] = false</span></div>\n\
<div class=\"line\"><span class=\"comment\">// INFO: bits[31] = false</span></div>\n\
<div class=\"line\"><span class=\"comment\">// INFO: bits[63] = false</span></div>\n\
<div class=\"line\"><span class=\"comment\">// INFO: bits[127] = false</span></div>\n\
<div class=\"line\"><span class=\"comment\">// INFO: bits[255] = false</span></div>\n\
<div class=\"line\"><span class=\"comment\">// INFO: bits[511] = false</span></div>\n\
</div><!-- fragment --> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following file:<ul>\n\
<li><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/xsi__bitarray_8h_source.html\">xsi_bitarray.h</a></li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";