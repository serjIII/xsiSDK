var topic = "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n\
<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/lib/jquery-1.9.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><script type=\"text/javascript\" src=\"../scripts/utils/adsk.redirect.js\"></script>\n\
      <title>CICEGeometry Class Reference</title>\n\
   \n\
</head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"si_cpp/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"si_cpp/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"si_cpp/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/yepnope.1.5.4-min.js\"); });</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var weAreIn21 = $(\"div#main.view-active\").length;\n\
var prefix = \"\";\n\
if (weAreIn21)\n\
{ prefix = \"si_cpp/\"; }\n\
yepnope([{\n\
load:[prefix + \"jquery.js\", prefix + \"navtree.js\", prefix + \"resize.js\", prefix + \"dynsections.js\"],\n\
complete: function() {\n\
  dQuery = jQuery.noConflict(\'true\');\n\
  dQuery(window).load(resizeHeight);\n\
  dQuery(document).ready( function () {\n\
    setTimeout( function () {\n\
      initResizable();\n\
      initNavTree(\'classXSI_1_1CICEGeometry.html\', prefix);\n\
      dQuery(window).trigger(\"load\");\n\
      }, 100);\n\
    }\n\
  );\n\
}\n\
}]\n\
)\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>CICEGeometry Class Reference</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.6 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./si_cpp/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./si_cpp/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/files.html\"><span>Files</span></a></li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./si_cpp/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./si_cpp/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"summary\">\n\
<a href=\"#pub-types\">Public Types</a> &#124;\n\
<a href=\"#pub-methods\">Public Member Functions</a>  </div>\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">CICEGeometry Class Reference</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p><code>#include &lt;<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/xsi__icegeometry_8h_source.html\">xsi_icegeometry.h</a>&gt;</code></p>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Class Description</h2>\n\
<div class=\"textblock\"><p>Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node. </p>\n\
<p><a class=\"anchor\" id=\"dirty states:checking for geometry changes\"></a> The following geometry types are supported: </p>\n\
<ul>\n\
<li><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7a17989a42a25a20706d1f46c7473a68eb\">CICEGeometry::siMeshSurfaceType</a>: mesh surface. </li>\n\
<li><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7a1a55b1710dffaec6e982fa6b9dd5d6e6\">CICEGeometry::siNurbsSurfaceType</a>: nurbs surface. </li>\n\
<li><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7a5d4d6d710d8c05c4ac2f89c690ad4207\">CICEGeometry::siNurbsCurveType</a>: nurbs curve. </li>\n\
<li><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7a732a272e8d93b3d9934f506ec7be4e42\">CICEGeometry::siPointCloudType</a>: point cloud. </li>\n\
<li><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7a24b0984b47f8d96bc3874357c001321d\">CICEGeometry::siGroupType</a>: grouped geometries.</li>\n\
</ul>\n\
<p>This API can handle single geometries or a composite of multiple, or <em>grouped</em>, geometries. For grouped geometries, <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a> virtually unifies the sub-geometries as one single geometry which allows data to be accessed as if it were actually a single geometry. For instance, calling <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a90e70723c8e2011efade4f8f292d0fcd\">CICEGeometry::GetPointPositionCount</a> on a grouped geometry returns the total number of points for all sub-geometries.</p>\n\
<dl class=\"section user\"><dt>Note:</dt><dd>Geometries can be grouped together with the <a href=\"#!/url=./files/GroupGeometryNode.htm\">GroupGeometryNode</a> or by adding them to a <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1Group.html\" title=\"The Group class represents a collection of related objects. \">Group</a> in the Softimage scene.</dd></dl>\n\
<p><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a> is typically used in the <a href=\"#!/url=./files/cb_ICENode_BeginEvaluate.htm\">BeginEvaluate</a> callback but can also be used in all custom <a href=\"#!/url=./files/cb_icenodes.htm\">ICENode evaluation callbacks</a>. However, it cannot be used from an <a href=\"#!/url=./files/cb_ICENode_Evaluate.htm\">Evaluate</a> callback in multi-thread mode with a non-singleton context. Calls to <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a> methods will just return default values in this context. Also, <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a> can only be used with specific geometry ports defined with the following types: </p>\n\
<pre class=\"fragment\">\\li type: ::siICENodeDataGeometry\n\
\\li structure: ::siICENodeStructureSingle\n\
\\li context: ::siICENodeContextSingleton\n\
</pre><p>The <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a> class can also be used to interrogate connected geometries about their states. The states supported are: </p>\n\
<ul>\n\
<li><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa9ee491e427205139588b4ea649b4a00b\">CICEGeometry::siTransformationDirtyState</a>: This state is true when the transformation of the geometry has been changed (translation, rotation or scaling). </li>\n\
<li><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fafda97d4337b4872babc8c6a9463c9e9c\">CICEGeometry::siPointPositionDirtyState</a>: This state is true when the point position of the geometry has been changed. </li>\n\
<li><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa9be0106c9503b862ed14f4a71fa8b956\">CICEGeometry::siTopologyDirtyState</a>: This state is true when the topology of the geometry has been changed. When <code>siTopologyDirtyState</code> is true, it implies that <code>siPointPositionDirtyState</code> is also true. </li>\n\
<li><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa434376409d26c467320b1d046435c72a\">CICEGeometry::siGeometryTypeDirtyState</a>: This state is true when the type of geometry has been changed. When this state is true all other states are also true.</li>\n\
</ul>\n\
<p><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a> only supports geometry-centric states. Use <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEPortState.html\" title=\"CICEPortState is used for accessing the state of a custom ICENode input port from the BeginEvaluate c...\">CICEPortState</a> to query for the low-level port states of connected geometries.</p>\n\
<dl class=\"section user\"><dt>Note:</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa4990f4431660053845f6189e5e019198\">CICEGeometry::siAnyDirtyState</a> can be used to test if at least one state is dirty.</dd></dl>\n\
<dl class=\"section since\"><dt>Since</dt><dd>8.0 (2010)</dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>Simple example to demonstrate the CICEGeometry API. For a more detailed example see the <a href=\"#!/url=./files/CustomICENodes/netview_CustomICENodes.htm\">PointGeneratorFromGeometry custom ICE node</a> example <div class=\"fragment\"><div class=\"line\">XSIPLUGINCALLBACK CStatus Sample_RegisterNode( ICENodeContext&amp; in_ctxt )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    ICENodeDef nodeDef = Application().GetFactory().CreateICENodeDef(L<span class=\"stringliteral\">&quot;Sample&quot;</span>,L<span class=\"stringliteral\">&quot;Sample&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    nodeDef.AddInputPort(   ID_IN_GeometryPortID, ID_G_100,</div>\n\
<div class=\"line\">                            <a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a307f67e56bb2121f6a8eb0a99929bb1aaab4d2e08f9658bd6510492e176ad49f0\">siICENodeDataGeometry</a>,<a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a25edb7cb80d670db4441230cee17938dad27363313efc37ac55e9ecaf64f7e863\">siICENodeStructureSingle</a>,<a class=\"code\" href=\"#!/url=./si_cpp/namespaceXSI.html#a3868a5b6193c034d90a55089dc65c605a806b40a56ae2729761e1fa79c6e9341a\">siICENodeContextSingleton</a>,</div>\n\
<div class=\"line\">                            L<span class=\"stringliteral\">&quot;geometry input&quot;</span>, L<span class=\"stringliteral\">&quot;geometry input&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Rest of the code omitted for brievity ...</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">XSIPLUGINCALLBACK CStatus Sample_BeginEvaluate( ICENodeContext&amp; in_ctxt )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a> geom( in_ctxt, ID_IN_GeometryPortID  );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Geometry data are provided as a flat list of values</span></div>\n\
<div class=\"line\">    CDoubleArray points;</div>\n\
<div class=\"line\">    geom.GetPointPositions( points ) ;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CMatrix4f.html\">XSI::MATH::CMatrix4f</a> transfo;</div>\n\
<div class=\"line\">    geom.GetTransformation( transfo );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    std::vector&lt; MATH::CVector3f &gt;* pUserData = <span class=\"keyword\">new</span> std::vector&lt; MATH::CVector3f &gt;;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ULONG nCount = geom.GetPolygonCount();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    CLongArray sizes;   <span class=\"comment\">// sizes holds the number of points per polygon</span></div>\n\
<div class=\"line\">    CLongArray indices; <span class=\"comment\">// indices holds the polygon indices and are used for indexing the point values</span></div>\n\
<div class=\"line\">    geom.GetPolygonIndices( sizes, indices );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Compute the center point of all polygons and save the result in a user data.</span></div>\n\
<div class=\"line\">    ULONG nOffset = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (ULONG i=0; i&lt;nCount; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        MATH::CVector3f vTotal;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (ULONG j=0; j&lt;(ULONG)sizes[i]; j++, nOffset++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            MATH::CVector3f v(  (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3 ],</div>\n\
<div class=\"line\">                                (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3+1 ],</div>\n\
<div class=\"line\">                                (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3+2 ] );</div>\n\
<div class=\"line\">            vTotal += v;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        vTotal *= 1.0f/sizes[i];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// The points are relative to the geometry and must be converted to global coordinates.</span></div>\n\
<div class=\"line\">        vTotal.MulByMatrix4InPlace( transfo );</div>\n\
<div class=\"line\">        pUserData-&gt;push_back( vTotal );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">XSIPLUGINCALLBACK CStatus Sample_Evaluate( ICENodeContext&amp; in_ctxt )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    ULONG out_portID = in_ctxt.GetEvaluatedOutputPortID( );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span>( out_portID )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> ID_OUT_Sample_Points:</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Retrieve the points computed in Sample_BeginEvaluate</span></div>\n\
<div class=\"line\">            std::vector&lt;MATH::CVector3f&gt;* pUserData = (std::vector&lt;MATH::CVector3f&gt;*)(CValue::siPtrType)in_ctxt.GetUserData( );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            CDataArrayVector3f outData( in_ctxt );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            CIndexSet indexSet( in_ctxt );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>(CIndexSet::Iterator it = indexSet.Begin(); it.HasNext(); it.Next())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Note: The output buffer is relative to the &#39;batch&#39; data therefore the batch can be</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// indexed with the iterator directly. As for the user data vector, pUSerData must be</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// indexed with the &#39;batch&#39; global index i.e. CIndexSet::Iterator::GetAbsoluteIndex()</span></div>\n\
<div class=\"line\">                outData[it] = (*pUserData)[ it.GetAbsoluteIndex() ];</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">XSIPLUGINCALLBACK CStatus Sample_EndEvaluate( ICENodeContext&amp; in_ctxt )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Release the memory allocated for the user data</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    CValue userData = in_ctxt.GetUserData( );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (userData.IsEmpty())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    std::vector&lt;MATH::CVector3f&gt;* pUserData = (std::vector&lt;MATH::CVector3f&gt;*)(CValue::siPtrType)userData;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (pUserData)</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> pUserData;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    in_ctxt.PutUserData( CValue() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a>;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --></dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>Example to demonstrate querying the geometry states on geometries connected to a custom node. For a more detailed example see the <a href=\"#!/url=./files/CustomICENodes/netview_CustomICENodes.htm\">PortStateObserver custom ICE node</a> example. <div class=\"fragment\"><div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> _LogGeometryStates( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a>&amp; in_geom, <span class=\"keyword\">const</span> CString&amp; in_portName, <span class=\"keywordtype\">double</span> in_dCurrentFrame, <span class=\"keywordtype\">bool</span> in_bClearState )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( in_geom.IsDirty( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa4990f4431660053845f6189e5e019198\">CICEGeometry::siAnyDirtyState</a> ) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> bTypeDirtyState = in_geom.IsDirty( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa434376409d26c467320b1d046435c72a\">CICEGeometry::siGeometryTypeDirtyState</a> );</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> bTransfoDirtyState = in_geom.IsDirty( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa9ee491e427205139588b4ea649b4a00b\">CICEGeometry::siTransformationDirtyState</a> );</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> bPointsDirtyState = in_geom.IsDirty( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fafda97d4337b4872babc8c6a9463c9e9c\">CICEGeometry::siPointPositionDirtyState</a> );</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> bTopologyDirtyState = in_geom.IsDirty( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa9be0106c9503b862ed14f4a71fa8b956\">CICEGeometry::siTopologyDirtyState</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( in_bClearState )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            in_geom.ClearState();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        Application app;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Don&#39;t log redundant information:</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// bTypeDirtyState always implies bTransfoDirtyState + bPointsDirtyState + bTopologyDirtyState</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// bTopologyDirtyState always implies bPointsDirtyState</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( bTypeDirtyState)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            app.LogMessage( <span class=\"stringliteral\">&quot;&gt;&gt;&gt; Port &quot;</span> + in_portName + <span class=\"stringliteral\">&quot; siGeometryTypeDirtyState at frame &quot;</span> + CString(in_dCurrentFrame) + <span class=\"stringliteral\">&quot; is dirty&quot;</span> );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( bTransfoDirtyState)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                app.LogMessage( <span class=\"stringliteral\">&quot;&gt;&gt;&gt; Port &quot;</span> + in_portName + <span class=\"stringliteral\">&quot; siTransformationDirtyState at frame &quot;</span> + CString(in_dCurrentFrame) + <span class=\"stringliteral\">&quot; is dirty&quot;</span> );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( bTopologyDirtyState)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                app.LogMessage( <span class=\"stringliteral\">&quot;&gt;&gt;&gt; Port &quot;</span> + in_portName + <span class=\"stringliteral\">&quot; siTopologyDirtyState at frame &quot;</span> + CString(in_dCurrentFrame) + <span class=\"stringliteral\">&quot; is dirty&quot;</span> );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( bPointsDirtyState)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                app.LogMessage( <span class=\"stringliteral\">&quot;&gt;&gt;&gt; Port &quot;</span> + in_portName + <span class=\"stringliteral\">&quot; siPointPositionDirtyState at frame &quot;</span> + CString(in_dCurrentFrame) + <span class=\"stringliteral\">&quot; is dirty&quot;</span> );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> LogGeometryStates( <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a>&amp; in_geom, <span class=\"keyword\">const</span> CString&amp; in_portName, <span class=\"keywordtype\">double</span> in_dCurrentFrame )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7\">CICEGeometry::Type</a> geomtype = in_geom.GetGeometryType();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span>( geomtype )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7a24b0984b47f8d96bc3874357c001321d\">CICEGeometry::siGroupType</a>:</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Note: ClearState on sub-geometries will clear the states for the entire group geometry. It&#39;s</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// recommended to call ClearState only on the group geometry to avoid inconsistencies.</span></div>\n\
<div class=\"line\">            _LogGeometryStates( in_geom, in_portName, in_dCurrentFrame, <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (ULONG i=0; i&lt;in_geom.GetSubGeometryCount(); i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a> subgeom = in_geom.GetSubGeometry(i);</div>\n\
<div class=\"line\">                _LogGeometryStates( subgeom, in_portName + CString(i), in_dCurrentFrame, <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            in_geom.ClearState();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            _LogGeometryStates( in_geom, in_portName, in_dCurrentFrame, <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">XSIPLUGINCALLBACK CStatus Port_State_Observer_BeginEvaluate( ICENodeContext&amp; in_ctxt )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a> geomGroup( in_ctxt, ID_IN_GeometryGroup );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a> geomCurve( in_ctxt, ID_IN_NurbsCurve );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a> geomMesh( in_ctxt, ID_IN_MeshSurf );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a> geomNurbsSurf( in_ctxt, ID_IN_NurbsSurf );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a> geomCloud( in_ctxt, ID_IN_PointCloud );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> dCurrentFrame = in_ctxt.GetTime();</div>\n\
<div class=\"line\">    LogGeometryStates( geomGroup, L<span class=\"stringliteral\">&quot;GeometryGroup&quot;</span>, dCurrentFrame );</div>\n\
<div class=\"line\">    LogGeometryStates( geomCurve, L<span class=\"stringliteral\">&quot;NurbsCurve&quot;</span>, dCurrentFrame );</div>\n\
<div class=\"line\">    LogGeometryStates( geomMesh, L<span class=\"stringliteral\">&quot;MeshSurf&quot;</span>, dCurrentFrame );</div>\n\
<div class=\"line\">    LogGeometryStates( geomNurbsSurf, L<span class=\"stringliteral\">&quot;NurbsSurf&quot;</span>, dCurrentFrame );</div>\n\
<div class=\"line\">    LogGeometryStates( geomCloud, L<span class=\"stringliteral\">&quot;PointCloud&quot;</span>, dCurrentFrame );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a>;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </dd></dl>\n\
</div><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-types\"></a>\n\
Public Types</h2></td></tr>\n\
<tr class=\"memitem:a1d1cfd8ffb84e947f82999c682b666a7\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">enum &#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7\">Type</a> { <br>\n\
&#160;&#160;<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7a503c885e8c07d491843923e6295252b5\">siNoneType</a> =0, \n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7a24b0984b47f8d96bc3874357c001321d\">siGroupType</a> =1, \n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7a17989a42a25a20706d1f46c7473a68eb\">siMeshSurfaceType</a> =2, \n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7a1a55b1710dffaec6e982fa6b9dd5d6e6\">siNurbsSurfaceType</a> =3, \n\
<br>\n\
&#160;&#160;<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7a5d4d6d710d8c05c4ac2f89c690ad4207\">siNurbsCurveType</a> =4, \n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7a732a272e8d93b3d9934f506ec7be4e42\">siPointCloudType</a> =5\n\
<br>\n\
 }</td></tr>\n\
<tr class=\"separator:a1d1cfd8ffb84e947f82999c682b666a7\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a79be0489b44a77620de069631265f22f\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">enum &#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22f\">DirtyState</a> { <br>\n\
&#160;&#160;<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa434376409d26c467320b1d046435c72a\">siGeometryTypeDirtyState</a> = 1&lt;&lt;0, \n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa9ee491e427205139588b4ea649b4a00b\">siTransformationDirtyState</a> = 1&lt;&lt;1, \n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fafda97d4337b4872babc8c6a9463c9e9c\">siPointPositionDirtyState</a> = 1&lt;&lt;2, \n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa9be0106c9503b862ed14f4a71fa8b956\">siTopologyDirtyState</a> = 1&lt;&lt;3, \n\
<br>\n\
&#160;&#160;<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa4990f4431660053845f6189e5e019198\">siAnyDirtyState</a>\n\
<br>\n\
 }</td></tr>\n\
<tr class=\"separator:a79be0489b44a77620de069631265f22f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a1c692d778193acab29ee534b98bf9a62\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1c692d778193acab29ee534b98bf9a62\">CICEGeometry</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICENodeContext.html\">ICENodeContext</a> &amp;in_ctxt, ULONG in_nInputPortID, ULONG in_nInstanceIndex=0)</td></tr>\n\
<tr class=\"separator:a1c692d778193acab29ee534b98bf9a62\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac6244b19a6076c0da097993a2f597700\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#ac6244b19a6076c0da097993a2f597700\">CICEGeometry</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> &amp;in_geom)</td></tr>\n\
<tr class=\"separator:ac6244b19a6076c0da097993a2f597700\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7acb999636a9a52d9c0be254d47da976\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a> ()</td></tr>\n\
<tr class=\"separator:a7acb999636a9a52d9c0be254d47da976\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae8521998851caa6ea695fdb7070120d4\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#ae8521998851caa6ea695fdb7070120d4\">~CICEGeometry</a> ()</td></tr>\n\
<tr class=\"separator:ae8521998851caa6ea695fdb7070120d4\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afa8720abaf6972d6dac22a8cd1a67225\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#afa8720abaf6972d6dac22a8cd1a67225\">IsValid</a> () const </td></tr>\n\
<tr class=\"separator:afa8720abaf6972d6dac22a8cd1a67225\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af97e84fbc38ab707fd0b372ecae09abc\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7\">Type</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#af97e84fbc38ab707fd0b372ecae09abc\">GetGeometryType</a> () const </td></tr>\n\
<tr class=\"separator:af97e84fbc38ab707fd0b372ecae09abc\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1dcdb8358ea31624af3d9d50146353e2\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1dcdb8358ea31624af3d9d50146353e2\">operator==</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> &amp;in_geom) const </td></tr>\n\
<tr class=\"separator:a1dcdb8358ea31624af3d9d50146353e2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a794883e61636653b8de04c16bdd26b44\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a794883e61636653b8de04c16bdd26b44\">operator!=</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> &amp;in_geom) const </td></tr>\n\
<tr class=\"separator:a794883e61636653b8de04c16bdd26b44\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:abe308a04919d9ff3ed57535b221cc854\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> &amp;&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#abe308a04919d9ff3ed57535b221cc854\">operator=</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> &amp;in_geom)</td></tr>\n\
<tr class=\"separator:abe308a04919d9ff3ed57535b221cc854\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a28f33a989da2fda9b0600b923c19cd3c\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">ULONG&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a28f33a989da2fda9b0600b923c19cd3c\">GetSubGeometryCount</a> () const </td></tr>\n\
<tr class=\"separator:a28f33a989da2fda9b0600b923c19cd3c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af16a9c7af1fcb54401a1227e9dec7bae\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#af16a9c7af1fcb54401a1227e9dec7bae\">GetSubGeometry</a> (ULONG in_index) const </td></tr>\n\
<tr class=\"separator:af16a9c7af1fcb54401a1227e9dec7bae\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a90e70723c8e2011efade4f8f292d0fcd\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">ULONG&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a90e70723c8e2011efade4f8f292d0fcd\">GetPointPositionCount</a> () const </td></tr>\n\
<tr class=\"separator:a90e70723c8e2011efade4f8f292d0fcd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a46886a5f4f4a6d727e12b61316fffbbf\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a46886a5f4f4a6d727e12b61316fffbbf\">GetPointPositions</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CDoubleArray.html\">CDoubleArray</a> &amp;out_points) const </td></tr>\n\
<tr class=\"separator:a46886a5f4f4a6d727e12b61316fffbbf\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6df014e0773c54335e619f0e5c65ad27\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">ULONG&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a6df014e0773c54335e619f0e5c65ad27\">GetTriangleCount</a> () const </td></tr>\n\
<tr class=\"separator:a6df014e0773c54335e619f0e5c65ad27\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a3af79e96715bb4ad9e600644d5374e46\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a3af79e96715bb4ad9e600644d5374e46\">GetTrianglePointIndices</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CLongArray.html\">CLongArray</a> &amp;out_indices) const </td></tr>\n\
<tr class=\"separator:a3af79e96715bb4ad9e600644d5374e46\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1518e5249e9cbc9b489758c8f42d80f8\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">ULONG&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1518e5249e9cbc9b489758c8f42d80f8\">GetPolygonCount</a> () const </td></tr>\n\
<tr class=\"separator:a1518e5249e9cbc9b489758c8f42d80f8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:afc7c4d0d6b954c667275cf5302cea1a2\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#afc7c4d0d6b954c667275cf5302cea1a2\">GetPolygonIndices</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CLongArray.html\">CLongArray</a> &amp;out_sizes, <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CLongArray.html\">CLongArray</a> &amp;out_indices) const </td></tr>\n\
<tr class=\"separator:afc7c4d0d6b954c667275cf5302cea1a2\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab2f262f1df0eb3bdad001d8b1490754d\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">ULONG&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#ab2f262f1df0eb3bdad001d8b1490754d\">GetSegmentCount</a> () const </td></tr>\n\
<tr class=\"separator:ab2f262f1df0eb3bdad001d8b1490754d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa1fcef4f32bf290bf9309affaf0bfb68\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#aa1fcef4f32bf290bf9309affaf0bfb68\">GetSegmentIndices</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CLongArray.html\">CLongArray</a> &amp;out_indices) const </td></tr>\n\
<tr class=\"separator:aa1fcef4f32bf290bf9309affaf0bfb68\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a16ac89213569622fb00fe5e981fa2918\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a16ac89213569622fb00fe5e981fa2918\">GetTransformation</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CMatrix4f.html\">XSI::MATH::CMatrix4f</a> &amp;out_mat44) const </td></tr>\n\
<tr class=\"separator:a16ac89213569622fb00fe5e981fa2918\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a8ba7104f19642abbf575c4a5475ae5fe\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a8ba7104f19642abbf575c4a5475ae5fe\">IsDirty</a> (unsigned short in_flag=<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa4990f4431660053845f6189e5e019198\">siAnyDirtyState</a>) const </td></tr>\n\
<tr class=\"separator:a8ba7104f19642abbf575c4a5475ae5fe\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aadd0c8bf4d40d83e231053dc5094bd63\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#aadd0c8bf4d40d83e231053dc5094bd63\">ClearState</a> ()</td></tr>\n\
<tr class=\"separator:aadd0c8bf4d40d83e231053dc5094bd63\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<h2 class=\"groupheader\">Member Enumeration Documentation</h2>\n\
<a class=\"anchor\" id=\"a1d1cfd8ffb84e947f82999c682b666a7\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">enum <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7\">Type</a></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Defines the geometry types supported by <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a>. </p>\n\
<table class=\"fieldtable\">\n\
<tr><th colspan=\"2\">Enumerator</th></tr><tr><td class=\"fieldname\"><em><a class=\"anchor\" id=\"a1d1cfd8ffb84e947f82999c682b666a7a503c885e8c07d491843923e6295252b5\"></a>siNoneType</em>&#160;</td><td class=\"fielddoc\">\n\
<p>No geometry </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><em><a class=\"anchor\" id=\"a1d1cfd8ffb84e947f82999c682b666a7a24b0984b47f8d96bc3874357c001321d\"></a>siGroupType</em>&#160;</td><td class=\"fielddoc\">\n\
<p>Group of geometries </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><em><a class=\"anchor\" id=\"a1d1cfd8ffb84e947f82999c682b666a7a17989a42a25a20706d1f46c7473a68eb\"></a>siMeshSurfaceType</em>&#160;</td><td class=\"fielddoc\">\n\
<p>Mesh surface geometry </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><em><a class=\"anchor\" id=\"a1d1cfd8ffb84e947f82999c682b666a7a1a55b1710dffaec6e982fa6b9dd5d6e6\"></a>siNurbsSurfaceType</em>&#160;</td><td class=\"fielddoc\">\n\
<p>Nurbs surface geometry </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><em><a class=\"anchor\" id=\"a1d1cfd8ffb84e947f82999c682b666a7a5d4d6d710d8c05c4ac2f89c690ad4207\"></a>siNurbsCurveType</em>&#160;</td><td class=\"fielddoc\">\n\
<p>Nurbs curve geometry </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><em><a class=\"anchor\" id=\"a1d1cfd8ffb84e947f82999c682b666a7a732a272e8d93b3d9934f506ec7be4e42\"></a>siPointCloudType</em>&#160;</td><td class=\"fielddoc\">\n\
<p>Point cloud geometry </p>\n\
</td></tr>\n\
</table>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a79be0489b44a77620de069631265f22f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">enum <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22f\">DirtyState</a></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Defines the supported dirty geometry state types. </p>\n\
<table class=\"fieldtable\">\n\
<tr><th colspan=\"2\">Enumerator</th></tr><tr><td class=\"fieldname\"><em><a class=\"anchor\" id=\"a79be0489b44a77620de069631265f22fa434376409d26c467320b1d046435c72a\"></a>siGeometryTypeDirtyState</em>&#160;</td><td class=\"fielddoc\">\n\
<p>This state is true when the type of geometry has been changed. When this state is true all other states are also true. </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><em><a class=\"anchor\" id=\"a79be0489b44a77620de069631265f22fa9ee491e427205139588b4ea649b4a00b\"></a>siTransformationDirtyState</em>&#160;</td><td class=\"fielddoc\">\n\
<p>This state is true when the transformation of the geometry has been changed (translation, rotation or scaling). </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><em><a class=\"anchor\" id=\"a79be0489b44a77620de069631265f22fafda97d4337b4872babc8c6a9463c9e9c\"></a>siPointPositionDirtyState</em>&#160;</td><td class=\"fielddoc\">\n\
<p>This state is true when the point position of the geometry has been changed. </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><em><a class=\"anchor\" id=\"a79be0489b44a77620de069631265f22fa9be0106c9503b862ed14f4a71fa8b956\"></a>siTopologyDirtyState</em>&#160;</td><td class=\"fielddoc\">\n\
<p>This state is true when the topology of the geometry has been changed. When <code>siTopologyDirtyState</code> is true, it implies that <code>siPointPositionDirtyState</code> is also true. </p>\n\
</td></tr>\n\
<tr><td class=\"fieldname\"><em><a class=\"anchor\" id=\"a79be0489b44a77620de069631265f22fa4990f4431660053845f6189e5e019198\"></a>siAnyDirtyState</em>&#160;</td><td class=\"fielddoc\">\n\
<p>This state is true if any one of the states have changed. </p>\n\
</td></tr>\n\
</table>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Constructor &amp; Destructor Documentation</h2>\n\
<a class=\"anchor\" id=\"a1c692d778193acab29ee534b98bf9a62\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICENodeContext.html\">ICENodeContext</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_ctxt</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">ULONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_nInputPortID</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">ULONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_nInstanceIndex</em> = <code>0</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Constructor for creating and initializing an instance of <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a>. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_ctxt</td><td><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1ICENode.html\" title=\"The ICENode object represents an effect node in the ICE graph. \">ICENode</a> evaluation context. </td></tr>\n\
    <tr><td class=\"paramname\">in_nInputPortID</td><td>Input port identifier. </td></tr>\n\
    <tr><td class=\"paramname\">in_nInstanceIndex</td><td>The group instance of the port. Defaults to <code>0</code>. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac6244b19a6076c0da097993a2f597700\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_geom</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Copy Constructor. </p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7acb999636a9a52d9c0be254d47da976\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Default Constructor. Creates an invalid <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a> object of type Type::siNoneType. </p>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae8521998851caa6ea695fdb7070120d4\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">~<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Destructor. </p>\n\
\n\
</div>\n\
</div>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"afa8720abaf6972d6dac22a8cd1a67225\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool IsValid </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns true if the object is valid. Unless the object is not set properly, IsValid always return true. IsValid cannot be used to detect if a geometry is connected or not. The rational behind is that it\'s not guaranteed that all connected geometries have data, therefore having geometries always set as valid allows users to write generic code. For instance, unconnected geometries, empty polygon geometries and empty point clouds will all return 0 for <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a90e70723c8e2011efade4f8f292d0fcd\">CICEGeometry::GetPointPositionCount</a>.</p>\n\
<p>In general it\'s not recommended for a custom node to check for valid port connections. For instance, a custom node could be connected to a passthrough node which could be potentially not connected to any node. If you want to optimize things based on the port state then it is recommended to use the <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEPortState.html\" title=\"CICEPortState is used for accessing the state of a custom ICENode input port from the BeginEvaluate c...\">CICEPortState</a> class and perform actions based on specific notifications.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if valid, false otherwise. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af97e84fbc38ab707fd0b372ecae09abc\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a1d1cfd8ffb84e947f82999c682b666a7\">Type</a> GetGeometryType </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the geometry type. The type is set to Type::siNoneType when the object is not properly defined. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The geometry type. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1dcdb8358ea31624af3d9d50146353e2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool operator== </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_geom</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Equality operator. Tests if two geometries are the same; the function is just comparing the internal pointer objects. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_geom</td><td><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a> instance to compare to this instance. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if both geometries are he same, false if different. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a794883e61636653b8de04c16bdd26b44\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool operator!= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_geom</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Inequality operator. Tests whether two geometries are different; the function is just comparing the internal pointer objects. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_geom</td><td><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a> instance to compare to this instance. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if both geometries are different, false otherwise. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"abe308a04919d9ff3ed57535b221cc854\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a>&amp; operator= </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>in_geom</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Assignment operator. Assign this geometry to another geometry. This operation is a simple object assignment. The content of the geometry is not duplicated. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_geom</td><td><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a> object to assign. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A reference to new <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a>. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a28f33a989da2fda9b0600b923c19cd3c\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">ULONG GetSubGeometryCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the number of sub-geometries contained by this geometry. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Number of sub-geometries. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af16a9c7af1fcb54401a1227e9dec7bae\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\">CICEGeometry</a> GetSubGeometry </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">ULONG&#160;</td>\n\
          <td class=\"paramname\"><em>in_index</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the sub-geometry at the position identified by <code>in_index</code>. The <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a> instance returned is invalid if <code>in_index</code> is out of bounds. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html\" title=\"Provides a read-only API for accessing the data of a geometry object connected to a custom ICE node...\">CICEGeometry</a> instance. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a90e70723c8e2011efade4f8f292d0fcd\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">ULONG GetPointPositionCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the number of point positions on the current geometry. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Number of point positions. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a46886a5f4f4a6d727e12b61316fffbbf\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> GetPointPositions </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CDoubleArray.html\">CDoubleArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>out_points</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns an array of double values containing the point positions (<code>xyz</code>) of the entire geometry. The positions are stored as a flat list and can be indexed using the indices returned by <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#afc7c4d0d6b954c667275cf5302cea1a2\">CICEGeometry::GetPolygonIndices</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a3af79e96715bb4ad9e600644d5374e46\">CICEGeometry::GetTrianglePointIndices</a> or <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#aa1fcef4f32bf290bf9309affaf0bfb68\">CICEGeometry::GetSegmentIndices</a>.</p>\n\
<p>The array is formatted as:</p>\n\
<div class=\"fragment\"><div class=\"line\">{x0,y0,z0, ... xN,yN,zN} </div>\n\
</div><!-- fragment --><dl class=\"retval\"><dt>Return values</dt><dd>\n\
  <table class=\"retval\">\n\
    <tr><td class=\"paramname\">out_points</td><td>Array of point positions. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> Success. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da60a075acd0b5e992180ec8ad7d794ea4\">CStatus::AccessDenied</a> Object is invalid or method called from invalid context.</dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>Example to demonstrate how to access the points of a geometry. <div class=\"fragment\"><div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a> geom( in_ctxt, ID_IN_geometry );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CDoubleArray points;</div>\n\
<div class=\"line\">geom.GetPointPositions( points ) ;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">ULONG nCount = geom.GetPolygonCount();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CLongArray sizes;</div>\n\
<div class=\"line\">CLongArray indices;</div>\n\
<div class=\"line\">geom.GetPolygonIndices( sizes, indices );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">ULONG nOffset = 0;</div>\n\
<div class=\"line\">std::vector&lt; MATH::CVector3f &gt; v3fArray;</div>\n\
<div class=\"line\"><span class=\"keywordflow\">for</span> (ULONG i=0; i&lt;nCount; i++)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (ULONG j=0; j&lt;(ULONG)sizes[i]; j++, nOffset++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        MATH::CVector3f v(  (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3 ],</div>\n\
<div class=\"line\">                            (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3+1 ],</div>\n\
<div class=\"line\">                            (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3+2 ] );</div>\n\
<div class=\"line\">        v3fArray.push_back( v );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6df014e0773c54335e619f0e5c65ad27\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">ULONG GetTriangleCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the number of triangles in the geometry. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Triangle count. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a3af79e96715bb4ad9e600644d5374e46\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> GetTrianglePointIndices </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CLongArray.html\">CLongArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>out_indices</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns an array containing the point indices for each triangulated polygon. The point indices are stored in the array as a flat list of values grouped in triplets, the first triplet being the points of triangle <code>0</code>, etc. The triangle indices are numbered based on the order of creation of the triangles.</p>\n\
<p>The array is formatted as:</p>\n\
<div class=\"fragment\"><div class=\"line\">{t0&lt;p0,p1,p2&gt;, t1&lt;p0,p1,p2&gt;... tN&lt;p0,p1,p2&gt;} </div>\n\
</div><!-- fragment --><dl class=\"section user\"><dt>Note:</dt><dd>This method performs a triangulation of the current geometry before returning the data.</dd></dl>\n\
<dl class=\"retval\"><dt>Return values</dt><dd>\n\
  <table class=\"retval\">\n\
    <tr><td class=\"paramname\">out_indices</td><td>Array of triangle point indices. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> Success. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da60a075acd0b5e992180ec8ad7d794ea4\">CStatus::AccessDenied</a> Object is invalid or method called from invalid context.</dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>Example to demonstrate how to access the triangle points of a geometry. <div class=\"fragment\"><div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a> geom( in_ctxt, ID_IN_geometry );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CDoubleArray points;</div>\n\
<div class=\"line\">geom.GetPointPositions( points ) ;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">ULONG nCount = geom.GetTriangleCount();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CLongArray indices;</div>\n\
<div class=\"line\">geom.GetTrianglePointIndices( indices );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">ULONG nOffset = 0;</div>\n\
<div class=\"line\">std::vector&lt; MATH::CVector3f &gt; v3fArray;</div>\n\
<div class=\"line\"><span class=\"keywordflow\">for</span> (ULONG i=0; i&lt;nCount; i++)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (ULONG j=0; j&lt;3; j++, nOffset++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        MATH::CVector3f v(  (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3 ],</div>\n\
<div class=\"line\">                            (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3+1 ],</div>\n\
<div class=\"line\">                            (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3+2 ] );</div>\n\
<div class=\"line\">        v3fArray.push_back( v );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1518e5249e9cbc9b489758c8f42d80f8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">ULONG GetPolygonCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the number of polygons of the geometry. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Polygon count. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"afc7c4d0d6b954c667275cf5302cea1a2\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> GetPolygonIndices </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CLongArray.html\">CLongArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>out_sizes</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CLongArray.html\">CLongArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>out_indices</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the size and point indices for all polygons on the geometry.</p>\n\
<dl class=\"retval\"><dt>Return values</dt><dd>\n\
  <table class=\"retval\">\n\
    <tr><td class=\"paramname\">out_sizes</td><td>Array containing the point count for each polygon. </td></tr>\n\
    <tr><td class=\"paramname\">out_indices</td><td>Array containing the point indices for each Polygon. The vertices are stored as a flat list and ordered by polygons, the first group being the points for polygon <code>0</code>, etc. <br>\n\
<br>\n\
The array is formatted as:<div class=\"fragment\"><div class=\"line\">{poly0&lt;v0,v1..vN&gt;, poly1&lt;v0,v1..vN&gt;... polyN&lt;v0,v1..vN&gt;} </div>\n\
</div><!-- fragment --></td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> Success. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da60a075acd0b5e992180ec8ad7d794ea4\">CStatus::AccessDenied</a> Object is invalid or method called from invalid context.</dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>Example to demonstrate how to access the polygon points of a geometry. <div class=\"fragment\"><div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a> geom( in_ctxt, ID_IN_geometry );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CDoubleArray points;</div>\n\
<div class=\"line\">geom.GetPointPositions( points ) ;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">ULONG nCount = geom.GetPolygonCount();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CLongArray sizes;</div>\n\
<div class=\"line\">CLongArray indices;</div>\n\
<div class=\"line\">geom.GetPolygonIndices( sizes, indices );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">ULONG nOffset = 0;</div>\n\
<div class=\"line\">std::vector&lt; MATH::CVector3f &gt; v3fArray;</div>\n\
<div class=\"line\"><span class=\"keywordflow\">for</span> (ULONG i=0; i&lt;nCount; i++)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (ULONG j=0; j&lt;(ULONG)sizes[i]; j++, nOffset++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        MATH::CVector3f v(  (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3 ],</div>\n\
<div class=\"line\">                            (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3+1 ],</div>\n\
<div class=\"line\">                            (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3+2 ] );</div>\n\
<div class=\"line\">        v3fArray.push_back( v );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab2f262f1df0eb3bdad001d8b1490754d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">ULONG GetSegmentCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the number of segments for the geometry. Segment is a generic term to describe 1D geometry components such as edges for mesh surfaces and control points for nurbs surfaces. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Segment count. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa1fcef4f32bf290bf9309affaf0bfb68\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> GetSegmentIndices </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CLongArray.html\">CLongArray</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>out_indices</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns an array of segment indices. Segment is a generic term to describe 1D geometry components such as edges for mesh surfaces and control points for nurbs surfaces. The array contains a sequence of pairs describing the segment indices:</p>\n\
<div class=\"fragment\"><div class=\"line\">{s0&lt;id0,id1&gt;, ...sN&lt;id0,id1&gt;} </div>\n\
</div><!-- fragment --><p>The indices can be used with <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a46886a5f4f4a6d727e12b61316fffbbf\">CICEGeometry::GetPointPositions</a> to get the segment points.</p>\n\
<dl class=\"retval\"><dt>Return values</dt><dd>\n\
  <table class=\"retval\">\n\
    <tr><td class=\"paramname\">out_indices</td><td>Array of edge indices.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> Succeeded. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da60a075acd0b5e992180ec8ad7d794ea4\">CStatus::AccessDenied</a> Object is invalid or method called from invalid context.</dd></dl>\n\
<dl class=\"section user\"><dt>Example:</dt><dd>Example to demonstrate how to access the segment points of a geometry. <div class=\"fragment\"><div class=\"line\"><a class=\"code\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a7acb999636a9a52d9c0be254d47da976\">CICEGeometry</a> geom( in_ctxt, ID_IN_geometry );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CDoubleArray points;</div>\n\
<div class=\"line\">geom.GetPointPositions( points ) ;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">ULONG nCount = geom.GetSegmentCount();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">CLongArray indices;</div>\n\
<div class=\"line\">geom.GetSegmentIndices( sizes, indices );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">ULONG nOffset = 0;</div>\n\
<div class=\"line\">std::vector&lt; MATH::CVector3f &gt; v3fArray;</div>\n\
<div class=\"line\"><span class=\"keywordflow\">for</span> (ULONG i=0; i&lt;nCount; i++)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (ULONG j=0; j&lt;2; j++, nOffset++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        MATH::CVector3f v(  (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3 ],</div>\n\
<div class=\"line\">                            (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3+1 ],</div>\n\
<div class=\"line\">                            (<span class=\"keywordtype\">float</span>)points[ indices[nOffset]*3+2 ] );</div>\n\
<div class=\"line\">        v3fArray.push_back( v );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a16ac89213569622fb00fe5e981fa2918\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html\">CStatus</a> GetTransformation </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1MATH_1_1CMatrix4f.html\">XSI::MATH::CMatrix4f</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>out_mat44</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the global transformation matrix of this geometry. </p>\n\
<dl class=\"section user\"><dt>Note:</dt><dd>Geometry points are returned in local coordinates; use the geometry transformation matrix to convert the points to global coordinates.</dd></dl>\n\
<dl class=\"retval\"><dt>Return values</dt><dd>\n\
  <table class=\"retval\">\n\
    <tr><td class=\"paramname\">out_mat44</td><td>Transformation matrix. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da2bc49ec37d6a5715dd23e85f1ff5bb59\">CStatus::OK</a> Succeeded. </dd>\n\
<dd>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CStatus.html#af31477bc48f67856bedb0fa8e5b5281da60a075acd0b5e992180ec8ad7d794ea4\">CStatus::AccessDenied</a> Object is invalid or method called from invalid context. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a8ba7104f19642abbf575c4a5475ae5fe\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool IsDirty </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned short&#160;</td>\n\
          <td class=\"paramname\"><em>in_flag</em> = <code><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa4990f4431660053845f6189e5e019198\">siAnyDirtyState</a></code></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Returns the dirty state of this geometry for a given state type as defined in the <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22f\">CICEGeometry::DirtyState</a> enumerator. By default, IsDirty returns true if at least one of the geometry states is dirty. </p>\n\
<dl class=\"section user\"><dt>Note:</dt><dd>Changing the transformation on a sub-geometry object will force a <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fafda97d4337b4872babc8c6a9463c9e9c\">CICEGeometry::siPointPositionDirtyState</a> change on the grouped geometry. However, no <a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/classXSI_1_1CICEGeometry.html#a79be0489b44a77620de069631265f22fa9ee491e427205139588b4ea649b4a00b\">CICEGeometry::siTransformationDirtyState</a> will be generated for the group geometry. </dd></dl>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramname\">in_flag</td><td>State type. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>true if the object is dirty, false otherwise. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aadd0c8bf4d40d83e231053dc5094bd63\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">void ClearState </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
<p>Clears the geometry states. </p>\n\
<dl class=\"section user\"><dt>Note:</dt><dd>ClearState on sub-geometries will clear the states for the entire group geometry. It is recommended to call ClearState only on the group geometry to avoid inconsistencies. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following file:<ul>\n\
<li><a class=\"el\" translate=\"no\" href=\"#!/url=./si_cpp/xsi__icegeometry_8h_source.html\">xsi_icegeometry.h</a></li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";