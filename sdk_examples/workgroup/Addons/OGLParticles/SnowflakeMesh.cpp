//
//	Copyright 2008 Autodesk, Inc.  All rights reserved.  
//	Use of this software is subject to the terms of the Autodesk license agreement 
//	provided at the time of installation or download, or which otherwise accompanies 
//	this software in either electronic or hard copy form.   

#include "SnowflakeMesh.h"

#include <assert.h>
#include <math.h>

extern PFNGLBINDBUFFERARBPROC glBindBufferARB ;
extern PFNGLBUFFERDATAARBPROC glBufferDataARB ;
extern PFNGLGENBUFFERSARBPROC glGenBuffersARB ;

SnowflakeMesh::SnowflakeMesh()
{
	Vertex vertices[] = {
	{{-0.325672f,-0.282316f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.368678f,-0.356940f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.259903f,-0.353144f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.285199f,-0.396149f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.200457f,-0.444336f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.176425f,-0.402472f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.127103f,-0.494805f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.084097f,-0.420947f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.133425f,-0.327854f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.094216f,-0.259553f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.044888f,-0.351881f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.000619f,-0.277257f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.049947f,-0.183660f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.000807f,-0.097655f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.050853f,-0.186782f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.000661f,-0.283507f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.043656f,-0.360711f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.095511f,-0.263343f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.133463f,-0.331668f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.082878f,-0.427033f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.125865f,-0.501024f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.177720f,-0.406268f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.201752f,-0.448314f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.286494f,-0.399945f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.261198f,-0.356940f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.366177f,-0.360705f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.323171f,-0.286076f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.218193f,-0.282286f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.178983f,-0.214015f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.283967f,-0.217665f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.239699f,-0.143035f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.135983f,-0.139258f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.085392f,-0.053635f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.189107f,-0.053635f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.246021f,-0.143035f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.333295f,-0.143035f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.276376f,-0.053635f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.354795f,-0.053635f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.411709f,-0.143035f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.498983f,-0.143035f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.440800f,-0.053635f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.490128f,-0.053635f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.490128f,0.043927f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.440800f,0.043927f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.496457f,0.133716f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.410445f,0.133716f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.354795f,0.043927f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.276376f,0.043927f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.332026f,0.133716f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.244758f,0.133716f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.189107f,0.043927f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.090451f,0.043927f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.141043f,0.133716f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.249817f,0.137512f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.294086f,0.213399f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.185311f,0.209694f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.224521f,0.277868f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.333289f,0.280394f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.376295f,0.354884f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.267521f,0.354884f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.291553f,0.395588f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.208074f,0.443689f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.182779f,0.400683f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.134720f,0.493017f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.091715f,0.418393f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.139779f,0.326060f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.100570f,0.257759f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.052505f,0.351355f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.008236f,0.275469f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.057564f,0.183135f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.006815f,0.097130f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.043934f,0.186208f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{0.007422f,0.281032f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.036033f,0.354884f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.087893f,0.261555f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.127170f,0.329983f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.075649f,0.425414f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.119511f,0.500645f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.170102f,0.404479f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.194135f,0.446216f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.278877f,0.398011f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.254844f,0.354884f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.358559f,0.358947f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.315554f,0.285538f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.211845f,0.280479f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.172635f,0.213399f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.276350f,0.217286f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.233345f,0.141393f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.128366f,0.137603f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.079038f,0.051592f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.182753f,0.051592f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.239667f,0.143925f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.326941f,0.143925f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.270022f,0.051592f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.347178f,0.051592f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.405361f,0.143925f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.491366f,0.143925f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.434452f,0.051592f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.482511f,0.051592f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.482511f,-0.045795f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.434452f,-0.045795f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.490103f,-0.134332f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.404249f,-0.134332f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.347220f,-0.045795f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.270016f,-0.045795f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.325678f,-0.134332f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.238446f,-0.134332f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.182784f,-0.045795f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.082834f,-0.045795f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.134689f,-0.135596f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.242200f,-0.139391f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.286468f,-0.214015f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.177694f,-0.211488f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}},
	{{-0.216904f,-0.278520f,0.000000f}, {0.0f, 0.0f, -1.0f}, {0.0f,0.0f}}};

	int indices[] = {
				0,
				1,
				2,
				2,
				3,
				4,
				2,
				4,
				5,
				5,
				6,
				7,
				5,
				7,
				8,
				5,
				8,
				9,
				9,
				10,
				11,
				9,
				11,
				12,

				9,
				12,
				13,

				14,
				15,
				16,

				14,
				16,
				17,

				18,
				19,
				20,

				18,
				20,
				21,

				21,
				22,
				23,

				21,
				23,
				24,

				24,
				25,
				26,

				24,
				26,
				27,

				28,
				29,
				30,

				28,
				30,
				31,

				28,
				31,
				32,

				33,
				34,
				35,

				33,
				35,
				36,

				37,
				38,
				39,

				37,
				39,
				40,

				40,
				41,
				42,

				40,
				42,
				43,

				43,
				44,
				45,

				43,
				45,
				46,

				47,
				48,
				49,

				47,
				49,
				50,

				52,
				53,
				54,

				52,
				54,
				55,

				52,
				55,
				56,

				56,
				57,
				58,

				56,
				58,
				59,

				59,
				60,
				61,

				59,
				61,
				62,

				62,
				63,
				64,

				62,
				64,
				65,

				62,
				65,
				66,

				66,
				67,
				68,

				66,
				68,
				69,

				71,
				72,
				73,

				71,
				73,
				74,

				75,
				76,
				77,

				75,
				77,
				78,

				78,
				79,
				80,

				78,
				80,
				81,

				81,
				82,
				83,

				81,
				83,
				84,

				81,
				84,
				85,

				85,
				86,
				87,

				85,
				87,
				88,

				90,
				91,
				92,

				90,
				92,
				93,

				94,
				95,
				96,

				94,
				96,
				97,

				97,
				98,
				99,

				97,
				99,
				100,

				100,
				101,
				102,

				100,
				102,
				103,

				104,
				105,
				106,

				104,
				106,
				107,

				109,
				110,
				111,

				109,
				111,
				112,

				113,
				0,
				2,

				113,
				2,
				5,
				113,
				5,
				9,
				113,
				9,
				13,
				13,
				14,
				17,
				17,
				18,
				21,
				17,
				21,
				24,
				17,
				24,
				27,
				17,
				27,
				28,
				17,
				28,
				32,
				37,
				40,
				43,
				37,
				43,
				46,
				37,
				46,
				47,
				37,
				47,
				50,
				37,
				50,
				51,
				52,
				56,
				59,
				52,
				59,
				62,
				52,
				62,
				66,
				52,
				66,
				69,
				52,
				69,
				70,
				70,
				71,
				74,
				74,
				75,
				78,
				74,
				78,
				81,
				74,
				81,
				85,
				74,
				85,
				88,
				74,
				88,
				89,
				94,
				97,
				100,
				94,
				100,
				103,
				94,
				103,
				104,
				94,
				104,
				107,
				94,
				107,
				108,
				108,
				109,
				112,
				112,
				113,
				13,
				13,
				17,
				32,
				36,
				37,
				51,
				51,
				52,
				70,
				70,
				74,
				89,
				93,
				94,
				108,
				108,
				112,
				13,
				108,
				13,
				32,
				108,
				32,
				33,
				108,
				33,
				36,
				108,
				36,
				51,
				108,
				51,
				70,
				108,
				70,
				89,
				108,
				89,
				90,
				108,
				90,
				93};

	int i;
	 for(i=0; i<114; i++)
        {
          mVertices.push_back(vertices[i]);
        }

      for(i=0; i<112*3; i++)
        {
          mIndices.push_back(indices[i]);
        }


	
	UploadVBO();

}
