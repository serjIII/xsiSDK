<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<!-- saved from url=(0024)http://docs.autodesk.com -->
<html>
   <head>
<link href="../style/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="../scripts/prettify.js"></script><script src="../scripts/lib/jquery-1.9.1.min.js" type="text/javascript"></script>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta name="product" content="SI" />
      <meta name="release" content="2015" />
      <meta name="book" content="Developer" />
      <meta name="created" content="2014-03-13" />
      <meta name="topicid" content="GUID-8B30DDC9-714A-4911-8DA7-71389182C0C0" />
      <meta name="indexterm" content="clusters: overview" />
      <meta name="indexterm" content="clusters: accessing: elements" />
      <meta name="indexterm" content="clusters: accessing: parent object through scripting" />
      <meta name="indexterm" content="clusters: type information (getting)" />
      <meta name="indexterm" content="clusters: creating" />
      <meta name="indexterm" content="clusters: adding: to a 3D object through scripting" />
      <meta name="indexterm" content="clusters: finding" />
      <meta name="indexterm" content="accessing: clusters" />
      <meta name="indexterm" content="clusters: adding: elements through scripting" />
      <meta name="indexterm" content="clusters: removing elements through scripting" />
      <meta name="topic-type" content="concept" />
      <title>Getting at Clusters</title><script type="text/javascript" src="../scripts/utils/adsk.redirect.js"></script></head>
   <body height="100%"><div class="body_content" id="body-content"><script>$(document).ready(function() { yepnope.injectJs("./scripts/ac_common.js"); });</script><script type="text/javascript">var reflinkid = "si_cpp"; var reflinkdata = new Array(); function closeRefLinkDiv() { }; $(document).on('click', function() { closeRefLinkDiv(); } );</script><script>$(document).ready(function() { yepnope.injectJs("./scripts/multireflink.js"); });</script><script>$(document).ready(function () { prettyPrint(); } );</script><script>$("div#WidgetFloaterPanels,link[href*='microsofttranslator.com'],script[src*='microsofttranslator.com'],script[src*='bing.com']").remove();</script><script type='text/javascript'>$("div#navigation,div#breadcrumbs,div#banner").attr("translate","no"); var mtLocation = ((location && location.href && location.href.indexOf('https') == 0)?'https://ssl.microsofttranslator.com':'http://www.microsofttranslator.com')+'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages='; yepnope.injectJs(mtLocation, function() {}, { charset:'utf-8', type:'text/javascript' } );</script><script type="text/javascript">
 </script><!-- begin MT -->
            
            <div id='MicrosoftTranslatorWidget' class='Dark' style='position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden'></div><div id="reflinkdiv" style="display:none; font-family: 'RobotoRegular', Arial, Tahoma, sans-serif; visibility:hidden; position:absolute; z-index:40001; padding:5px; border-style:solid; border-width:1px; border-color:#666666; background-color:#dfdfdf; overflow:visible"></div>
      <div><span class="anchor_wrapper"><a name="GUID-8B30DDC9-714A-4911-8DA7-71389182C0C0"></a></span><div class="head">
            <h1>Getting at Clusters</h1>
         </div>
         <p><span class="anchor_wrapper"><a name="GUID-C369BB78-50B9-4172-93BC-456495C8313D"></a></span>This section demonstrates how to create, access, and modify clusters and their elements
            on 3D objects. All of the code in this section belongs to one large script, but is
            presented in modules according to usage. The topics covered include:
         </p>
         <ul>
            <li> 
               <p><span class="anchor_wrapper"><a name="GUID-D4A881A3-7AB0-478F-AED7-FFD3B5B15E2D"></a></span> <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-0017">Example: Accessing the cluster's elements, parent, and type</a></span> 
               </p> 
            </li>
            <li> 
               <p><span class="anchor_wrapper"><a name="GUID-521F38C5-171D-4521-B472-5C3EA0F90DC5"></a></span> <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-0019">Example: Create a cluster</a></span> 
               </p> 
            </li>
            <li> 
               <p><span class="anchor_wrapper"><a name="GUID-C20FE1BB-D4C7-499A-B0A6-4A2452095387"></a></span> <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-001B">Example: Find the cluster in the scene</a></span> 
               </p> 
            </li>
            <li> 
               <p><span class="anchor_wrapper"><a name="GUID-105099FA-5410-42AC-A09A-0C104C1C2680"></a></span> <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-001C">Example: Add points to the cluster</a></span> 
               </p> 
            </li>
            <li> 
               <p><span class="anchor_wrapper"><a name="GUID-515B3738-0B23-451F-91A4-C515CFF17E0D"></a></span> <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-001D">Example: Remove points from the cluster</a></span> 
               </p> 
            </li>
            <li> 
               <p><span class="anchor_wrapper"><a name="GUID-08173227-C206-42C3-A662-3D0FCB63914C"></a></span> <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-001E">Example: Copying clusters</a></span> 
               </p> 
            </li>
            <li> 
               <p><span class="anchor_wrapper"><a name="GUID-AA386E7A-016D-4AF6-A2EE-C96AF1A156E8"></a></span> <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-001F">Example: Deleting clusters</a></span> 
               </p> 
            </li>
         </ul>
         <div class="section"><span class="anchor_wrapper"><a name="WS0712F8CE7932674FBBDF8F8482ED1B3D-0017"></a></span> 
            <h2><span class="anchor_wrapper"><a name="WS0712F8CE7932674FBBDF8F8482ED1B3D-0018"></a></span>Example:Accessing the cluster's elements, parent, and type
            </h2>    
            <p><span class="anchor_wrapper"><a name="GUID-3182DBA1-6A18-4475-ABDC-954132D6C617"></a></span>A lot of the tasks when working with cluster involve using the cluster's elements.
               You can access the elements through the SubComponent object (Cluster.CreateSubComponent).
               From there, you can access the 3D object that is parenting the cluster (SubComponent.Parent3DObject).
            </p> 
            <div><span class="anchor_wrapper"><a name="GUID-307337F9-B608-4347-96F9-3731E9678A92"></a></span><div class="note-tip"><span class="label">TIP:</span> 
                  <p><span class="anchor_wrapper"><a name="GUID-DBC0C8C3-A84C-4D5A-86F6-DB6CC1201269"></a></span>You can also access the elements through the Cluster.Elements property, which returns
                     the collection of geometry indices as a ClusterElementCollection.
                  </p> 
               </div>
            </div> 
            <p><span class="anchor_wrapper"><a name="GUID-8B602AF2-112C-4C68-9A38-E86CBB771777"></a></span>This function prints the name of the cluster's parent, which elements it contains,
               and the type of elements it contains. The other examples in this section also refer
               to this function.
            </p> 
            <div class="codeBlock"><pre class="prettyprint">
Function printClusterInfo( in_cluster )
	' Make sure the inbound object is a valid cluster
	If TypeName( in_cluster ) = "Cluster" Then
		' Get the cluster's elements
		Set oMembers = in_cluster.CreateSubComponent
		aIndices = oMembers.ElementArray
		
		' Format its values
		sElementData = ""
		For i = 0 To UBound( aIndices )
			sElementData = sElementData &amp; ", " &amp; in_cluster.Type 
									&amp; "[" &amp; aIndices(i) &amp; "]"
		Next 
		sElementData = vbTab &amp; vbTab &amp; Right( sElementData, Len(sElementData)-2 )
		
		' Print them out
		LogMessage "Current cluster contains these element(s) under the '" _
				&amp; oMembers.Parent3DObject.Name &amp; "' object:" &amp; vbLf _
				&amp; sElementData &amp; vbLf
		LogMessage "=========================================================="
		
		printClusterInfo = True
	Else
		LogMessage "Object is not a valid cluster."
		printClusterInfo = False
	End If
End Function</pre></div> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="WS0712F8CE7932674FBBDF8F8482ED1B3D-0019"></a></span> 
            <h2><span class="anchor_wrapper"><a name="WS0712F8CE7932674FBBDF8F8482ED1B3D-001A"></a></span>Example:Create a cluster
            </h2>   
            <p><span class="anchor_wrapper"><a name="GUID-13D218CC-C5D2-49FE-B6E3-A8CA000E4247"></a></span>This example demonstrates how to create a cluster (using the object model) from a
               3D object (in this case, a grid).
            </p> 
            <div><span class="anchor_wrapper"><a name="GUID-89876842-2461-4F35-AA07-8D58AF16E4B2"></a></span><div class="note-note"><span class="label">NOTE:</span> 
                  <p><span class="anchor_wrapper"><a name="GUID-D13247BA-7EA6-4CE6-BCDE-5275E05E619C"></a></span>This code snippet uses the printClusterInfo() function described in <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-0017">Example: Accessing the cluster's elements, parent, and type</a></span>.
                  </p> 
               </div>
            </div> 
            <p><span class="anchor_wrapper"><a name="GUID-9AC96517-BE86-4382-B531-12E3238EF669"></a></span>After you create the grid, you can add a point (vertex) cluster on it using the Geometry.AddCluster
               method. Notice that you have to create the cluster on the Geometry object, not directly
               on the grid.
            </p> 
            <div class="codeBlock"><pre class="prettyprint">
	' Create the grid
	Set oGrid = ActiveSceneRoot.AddGeometry( "Grid", "MeshSurface", "wall" )

	' You can use an array variable to save the point indices 
	aPointsForCluster = Array( 21,22,31,40,41 )

	' The indices used in this method correspond to the indexing order of the 
	' element for the 3D object
	Set oCluster = oGrid.ActivePrimitive.Geometry.AddCluster( _
									siVertexCluster, _
									"wallpaper", _
									aPointsForCluster _
								)</pre></div> 
            <p><span class="anchor_wrapper"><a name="GUID-7985D92A-0347-4B30-B486-8C5ED9EBA4DE"></a></span>The printClusterInfo(oCluster) function displays the following message in the History
               Log of the Script Editor at this point:
            </p> 
            <div class="codeBlock"><pre class="prettyprint">
'INFO : "Current cluster contains these element(s) under the 'wall' object:
		'pnt[21], pnt[23], pnt[29], pnt[31], pnt[33], pnt[39], pnt[41]
'"
'INFO : "=========================================================="
</pre></div> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="WS0712F8CE7932674FBBDF8F8482ED1B3D-001B"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-65AF7D42-E21F-45BB-91B4-CECA21757092"></a></span>Example: Find the cluster in the scene
            </h2>   
            <p><span class="anchor_wrapper"><a name="GUID-2ADD6906-668F-43F2-89D8-EE51CE89E4D4"></a></span>This step is not necessary if you have already created a cluster, but is provided
               simply as a demonstration of finding an existing cluster in the scene assuming you
               know only that you want the point cluster on a polymsh grid object.
            </p> 
            <div><span class="anchor_wrapper"><a name="GUID-AEAD55BC-532D-4D1B-A1BC-70F01B0CC019"></a></span><div class="note-note"><span class="label">NOTE:</span> 
                  <p><span class="anchor_wrapper"><a name="GUID-1964316F-E041-4768-99E4-581365CD099C"></a></span>This code snippet follows the one in <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-0019">Example: Create a cluster</a></span> and uses the printClusterInfo() function described in <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-0017">Example: Accessing the cluster's elements, parent, and type</a></span>.
                  </p> 
               </div>
            </div> 
            <p><span class="anchor_wrapper"><a name="GUID-CF6C788F-CF22-4DCB-B9CD-5055ACBE5733"></a></span>Just to make it interesting, let's add a couple more clusters.
            </p> 
            <div class="codeBlock"><pre class="prettyprint">
	' Add an edge cluster to the grid
	aEdgesForCluster = Array( 28,31,47,50,66 )
	Set oECls = oGrid.ActivePrimitive.Geometry.AddCluster( _
									siEdgeCluster, _
									"paint", _
									aEdgesForCluster _
									)
</pre></div> 
            <p><span class="anchor_wrapper"><a name="GUID-3F8478B2-9903-40BC-B515-EABF218C2FE0"></a></span>The printClusterInfo(oECls) function displays the following message in the History
               Log of the Script Editor at this point:
            </p> 
            <div class="codeBlock"><pre class="prettyprint">
'INFO : "Current cluster contains these element(s) under the 'wall' object:
		'edge[28], edge[31], edge[47], edge[50], edge[66]
'"
'INFO : "=========================================================="
</pre></div> 
            <p><span class="anchor_wrapper"><a name="GUID-0C5EE3F2-9C0C-415E-9D50-D92976284F90"></a></span>This piece of code adds a cube and makes another point cluster on it. Notice how you
               can use either an array variable or pass an array directly to the argument.
            </p> 
            <div class="codeBlock"><pre class="prettyprint">
	' Create a cube and add another point cluster to it
	Set oCube = ActiveSceneRoot.AddGeometry( "Cube", "MeshSurface", "chair" )
	Set oPCls = oCube.ActivePrimitive.Geometry.AddCluster( _
									siVertexCluster, _
									"seat", _
									Array( 1,3,5,7 ) _
							     )
</pre></div> 
            <p><span class="anchor_wrapper"><a name="GUID-804C9264-92C5-4546-94FA-6891E017FF0C"></a></span>The printClusterInfo(oPCls) function displays the following message in the History
               Log of the Script Editor at this point:
            </p> 
            <div class="codeBlock"><pre class="prettyprint">
'INFO : "Current cluster contains these element(s) under the 'chair' object:
		'pnt[1], pnt[3], pnt[5], pnt[7]
'"
'INFO : "=========================================================="
</pre></div> 
            <p><span class="anchor_wrapper"><a name="GUID-73B1DC9B-D0FA-4164-94F1-2CB699EDC6E8"></a></span>Now the fun begins! This piece gets each object with mesh geometry in the scene and
               then gets the cluster collection from each using the Geometry.Clusters property. Make
               sure to trap as many potential errors as you can, since you may be working with empty
               or invalid objects at some point.
            </p> 
            <div class="codeBlock"><pre class="prettyprint">
	' Using the X3DObject.FindChildren method and specifying the mesh family
	' (3rd argument) returns a collection of all polygon mesh objects that 
	' appear in the hierarchy under the scene root. From there we can find
	' which one matches our criteria.
	Set oAllObjects = ActiveSceneRoot.FindChildren( , , siMeshFamily )

	' Loop through the collection to find any Point clusters
	For Each obj In oAllObjects
		' Get all the clusters on the mesh  geometry as a collection
		Set oAllClusters = obj.ActivePrimitive.Geometry.Clusters

		' Loop through the collection to find any Point clusters
		For Each cls In oAllClusters
			' Only deal with point clusters
			If cls.Type = "pnt" Then
				' Get the one whose parent = grid 
				Set oPoint = cls.CreateSubComponent
				Set oParent = oPoint.Parent3DObject

				' If it matches, grab it &amp; run
				If oParent.IsKindOf( "Grid" ) Then
					Set oCluster = cls
					Exit For
				End If 
			End If
		Next
	Next
</pre></div> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="WS0712F8CE7932674FBBDF8F8482ED1B3D-001C"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-3D1DF864-C0D2-4475-B301-A417ADBE088B"></a></span>Example: Add points to the cluster
            </h2>  
            <p><span class="anchor_wrapper"><a name="GUID-2B6DA349-46E0-4A70-BB4C-43135B601BA5"></a></span>This example demonstrates how to add points to an existing point cluster. In this
               case, you have to use a mixture of the object model and scripting commands.
            </p> 
            <div><span class="anchor_wrapper"><a name="GUID-80096C43-57D4-4BF1-B478-7F52976C74B9"></a></span><div class="note-note"><span class="label">NOTE:</span> 
                  <p><span class="anchor_wrapper"><a name="GUID-39FECDE7-0681-4099-AEE6-14A9A33A65A0"></a></span>This code snippet follows the one in <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-001B">Example: Find the cluster in the scene</a></span> and uses the printClusterInfo() function described in <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-0017">Example: Accessing the cluster's elements, parent, and type</a></span>.
                  </p> 
               </div>
            </div> 
            <div class="codeBlock"><pre class="prettyprint">
	' Create a new SubComponent object so you can specify which elements to add. 
	Set oSubComp = oCluster.CreateSubComponent
	
	' Use the SubComponent.AddElement method to add each point separately 
	' to the subcomponent. 
	oSubComp.AddElement 23
	oSubComp.AddElement 29
	oSubComp.AddElement 33
	oSubComp.AddElement 39
	
	' Add the subcomponent to the cluster using the SIAddToCluster command. 
	SIAddToCluster oCluster, oSubComp
</pre></div> 
            <p><span class="anchor_wrapper"><a name="GUID-93FD9D9E-94DF-44E0-BA2C-F8C156D611FC"></a></span>The printClusterInfo(oCluster) function displays the following message in the History
               Log of the Script Editor at this point:
            </p> 
            <div class="codeBlock"><pre class="prettyprint">
'INFO : "Current cluster contains these element(s) under the 'wall' object:
		'pnt[21],pnt[22],pnt[23],pnt[29],pnt[31],pnt[33],pnt[39],pnt[40],pnt[41]
'"
'INFO : "=========================================================="
</pre></div> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="WS0712F8CE7932674FBBDF8F8482ED1B3D-001D"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-81E5D956-E4A0-491A-BE15-B200E1DFB177"></a></span>Example: Remove points from the cluster
            </h2>  
            <p><span class="anchor_wrapper"><a name="GUID-21737E96-38B8-4B2E-8BF0-104A9DEB46DD"></a></span>When you want to remove points (or any element) from a cluster, you have to use the
               SubComponent.RemoveElement method to clear the elements you <em class="mild">want to keep</em> from the SubComponent object and then use the SIRemoveFromCluster command to remove
               the leftover elements from the actual cluster.
            </p> 
            <div><span class="anchor_wrapper"><a name="GUID-37F925AA-CAC7-4873-B369-8336583F5BAA"></a></span><div class="note-note"><span class="label">NOTE:</span> 
                  <p><span class="anchor_wrapper"><a name="GUID-1C94874E-923F-4079-85EC-563E88DFFBAF"></a></span>This code snippet follows the one in <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-001C">Example: Add points to the cluster</a></span> and uses the printClusterInfo() function described in <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-0017">Example: Accessing the cluster's elements, parent, and type</a></span>.
                  </p> 
               </div>
            </div> 
            <p><span class="anchor_wrapper"><a name="GUID-B50F54DC-7FA0-45EB-BE97-848EA09BB9B0"></a></span>In this case, we want to remove points 22 and 40, so we have to remove "pnt[21,23,29,31,33,39,41]"
               from the subcomponent and then use it with SIRemoveFromCluster:
            </p> 
            <div class="codeBlock"><pre class="prettyprint">
	' Create a new SubComponent object to specify which elements to remove. 
	Set oSubComp = oCluster.CreateSubComponent
	
	' Remove the elements you want to keep from the subcomponent
	oSubComp.RemoveElement 21
	oSubComp.RemoveElement 23
	oSubComp.RemoveElement 29
	oSubComp.RemoveElement 31
	oSubComp.RemoveElement 33
	oSubComp.RemoveElement 39
	oSubComp.RemoveElement 41

	' Remove the specified subcomponent from the cluster
	SIRemoveFromCluster oCluster, oSubComp
</pre></div> 
            <p><span class="anchor_wrapper"><a name="GUID-7429369C-B091-4076-93D9-EF67C4AFCCB7"></a></span>The printClusterInfo(oCluster) function displays the following message in the History
               Log of the Script Editor at this point:
            </p> 
            <div class="codeBlock"><pre class="prettyprint">
'INFO : "Current cluster contains these element(s) under the 'wall' object:
		'pnt[21], pnt[23], pnt[29], pnt[31], pnt[33], pnt[39], pnt[41]
'"
'INFO : "=========================================================="
</pre></div> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="WS0712F8CE7932674FBBDF8F8482ED1B3D-001E"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-E5B9D60A-7026-4BA2-8358-E994CF393594"></a></span>Example: Copying clusters
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-8D7D9939-AC08-4D5F-8E0C-F177042EBCC9"></a></span>When you want to copy an entire cluster from one object to another, you have to use
               the CopyCluster command
            </p> 
            <div><span class="anchor_wrapper"><a name="GUID-89BA39D6-F2CF-4BF0-A69F-551D8AB98A62"></a></span><div class="note-note"><span class="label">NOTE:</span> 
                  <p><span class="anchor_wrapper"><a name="GUID-828A9689-74B7-4E6B-9E3D-A79089D0692F"></a></span>This code snippet follows the one in <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-001D">Example: Remove points from the cluster</a></span>.
                  </p> 
               </div>
            </div> 
            <div class="codeBlock"><pre class="prettyprint">
'
' Copying clusters can only be done via the CopyCluster command. This example 
' demonstrates how to copy clusters between objects.
Set oTarget = ActiveSceneRoot.AddGeometry( "Grid", "MeshSurface", "floor" )
CopyCluster oCluster, oTarget 

' Now you have to find it in the scene again (since the CopyCluster command 
' doesn't return the newly created cluster). It's probably the first one in 
' the bunch.
Set oNewCls = oTarget.ActivePrimitive.Geometry.Clusters(0)
</pre></div> 
            <p><span class="anchor_wrapper"><a name="GUID-AE79746C-F9E2-40F5-A263-BEF91ACB016B"></a></span>The printClusterInfo(oCluster) function displays the following message in the History
               Log of the Script Editor at this point:
            </p> 
            <div class="codeBlock"><pre class="prettyprint">
'INFO : "Current cluster contains these element(s) under the 'floor' object:
		'pnt[21], pnt[23], pnt[29], pnt[31], pnt[33], pnt[39], pnt[41]
'"
'INFO : "=========================================================="
</pre></div> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="WS0712F8CE7932674FBBDF8F8482ED1B3D-001F"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-565A2ED0-9D32-4583-87E9-9A9BF965A0BA"></a></span>Example: Deleting clusters
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-448CF725-56BC-42AC-BB71-0278E372636E"></a></span>Now that you've created a copy of the cluster on the new object, delete the old one.
               For this you need to use the RemoveCluster command:
            </p> 
            <div><span class="anchor_wrapper"><a name="GUID-0FF3F86B-AF43-4455-9677-A1EE73A6D044"></a></span><div class="note-note"><span class="label">NOTE:</span> 
                  <p><span class="anchor_wrapper"><a name="GUID-6ADAC0ED-47BE-4231-8F24-9E9982EE15BC"></a></span>This code snippet follows the one in <span class="char_link"><a href="#!/url=./files/dev_components_GettingatClusters.htm#WS0712F8CE7932674FBBDF8F8482ED1B3D-001E">Example: Copying clusters</a></span>.
                  </p> 
               </div>
            </div> 
            <div class="codeBlock"><pre class="prettyprint">
RemoveCluster oCluster
</pre></div> 
         </div>
         <div class="footer-block"><a href="../html/ac.cmtdialog.htm" class="comments-anchor" target="_blank"><span class="comments-link">Please send us your comment about this page</span></a></div><br /><p class="footer-license-block"><a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank"><img alt="Creative Commons License" style="border-width: 0;" src="../images/ccLink.png" /></a>&nbsp;<em>Except where otherwise noted, this work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</a>. Please see the <a href="http://autodesk.com/creativecommons" target="_blank">Autodesk Creative Commons FAQ</a> for more information.</em></p><br /></div>
   </div></body>
</html>