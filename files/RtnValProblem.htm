<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<!-- saved from url=(0024)http://docs.autodesk.com -->
<html>
   <head>
<link href="../style/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="../scripts/prettify.js"></script><script src="../scripts/lib/jquery-1.9.1.min.js" type="text/javascript"></script>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta name="product" content="SI" />
      <meta name="release" content="2015" />
      <meta name="book" content="Developer" />
      <meta name="created" content="2014-03-13" />
      <meta name="topicid" content="GUID-DDD0CF17-B3D0-45F0-99A0-E63BA1935714" />
      <meta name="indexterm" content="return value: with output arguments" />
      <meta name="indexterm" content="returning: output arguments and return values at the same time" />
      <meta name="indexterm" content="output arguments: with return values" />
      <meta name="topic-type" content="concept" />
      <title>What Happens when the Function Already Returns a Value?</title><script type="text/javascript" src="../scripts/utils/adsk.redirect.js"></script></head>
   <body height="100%"><div class="body_content" id="body-content"><script>$(document).ready(function() { yepnope.injectJs("./scripts/ac_common.js"); });</script><script type="text/javascript">var reflinkid = "si_cpp"; var reflinkdata = new Array(); function closeRefLinkDiv() { }; $(document).on('click', function() { closeRefLinkDiv(); } );</script><script>$(document).ready(function() { yepnope.injectJs("./scripts/multireflink.js"); });</script><script>$(document).ready(function () { prettyPrint(); } );</script><script>$("div#WidgetFloaterPanels,link[href*='microsofttranslator.com'],script[src*='microsofttranslator.com'],script[src*='bing.com']").remove();</script><script type='text/javascript'>$("div#navigation,div#breadcrumbs,div#banner").attr("translate","no"); var mtLocation = ((location && location.href && location.href.indexOf('https') == 0)?'https://ssl.microsofttranslator.com':'http://www.microsofttranslator.com')+'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages='; yepnope.injectJs(mtLocation, function() {}, { charset:'utf-8', type:'text/javascript' } );</script><script type="text/javascript">
 reflinkdata.push(["set", "si_cpp/group__RenderMapDefine.html#ga793ad1cfa149967fe4b97fc66251b831", "C++ API Reference", "../"]); 
</script><!-- begin MT -->
            
            <div id='MicrosoftTranslatorWidget' class='Dark' style='position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden'></div><div id="reflinkdiv" style="display:none; font-family: 'RobotoRegular', Arial, Tahoma, sans-serif; visibility:hidden; position:absolute; z-index:40001; padding:5px; border-style:solid; border-width:1px; border-color:#666666; background-color:#dfdfdf; overflow:visible"></div>
      <div><span class="anchor_wrapper"><a name="GUID-DDD0CF17-B3D0-45F0-99A0-E63BA1935714"></a></span><div class="head">
            <h1> What Happens when the Function Already Returns a Value?</h1>
         </div>
         <p><span class="anchor_wrapper"><a name="GUID-79B92D2D-45D0-4011-A411-3127A5716A10"></a></span>Some Softimage functions return both <span class="char_link"><a href="#!/url=./files/OutArgDefined.htm">output arguments</a></span> and <span class="char_link"><a href="#!/url=./files/scripting_RtnValDefined.htm#WSBAC00627FDA41F4DBFDDFE9988A39246-0026">return values</a></span>. If the function has a return value explicitly defined, you cannot extract any output
            arguments via the <span class="char_link"><a href="#!/url=./files/ISIVTCollection.htm">ISIVTCollection</a></span> because the function is returning an a specific value instead.
         </p>
         <div><span class="anchor_wrapper"><a name="GUID-F43F74C0-8862-40EE-9E4F-8767EFEA69D8"></a></span><div class="note-tip"><span class="label">TIP:</span> 
               <p><span class="anchor_wrapper"><a name="GUID-6EA6AA3E-98BE-4118-8C3A-2772791DE7EF"></a></span>You can check the <em class="strong">Return Value</em> section in the <a href="#!/url=./si_cmds/_scriptref.html">Commands and Scripting Reference</a> to see whether it uses an explicit return value and what that value is.
               </p> 
            </div>
         </div>
         <p><span class="anchor_wrapper"><a name="GUID-8FF048B7-137E-48BB-9A7C-0CAABE755523"></a></span>In these cases, VBScript must pass output parameters in order to retrieve the information
            via output arguments but for JScript, and Python, other strategies must be considered.
         </p>
         <div class="section"><span class="anchor_wrapper"><a name="WS9C9BD4629A5724409D1790B9C5DB9AC3-001B"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-265C3C2E-EE4A-488A-A690-BCEBC0972675"></a></span>Strategies and Workarounds
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-1B57BC47-9CE1-4AF3-BEF2-70EB24C098E8"></a></span>In most cases, there are special versions of those functions that use output arguments
               and return values. These functions generally have the same name as the output argument
               versions, but with '<span class="code" translate="no">2</span>' appended to the name. For example, the <a href="#!/url=./si_om/NurbsSurface.GetTrim.html">NurbsSurface.GetTrim</a> function allows output arguments (see <span class="char_link"><a href="#!/url=./files/vbs_ex.htm">VBScript Example: Getting Output Arguments from a Method</a></span>), but the <a href="#!/url=./si_om/NurbsSurface.GetTrim2.html">NurbsSurface.GetTrim2</a> function returns an array of output values (<span class="char_link"><a href="#!/url=./files/js_ex.htm">JScript Example: Using the Method Ã”2' Workaround</a></span>).
            </p> 
            <div class="section"><span class="anchor_wrapper"><a name="WS9C9BD4629A5724409D1790B9C5DB9AC3-001C"></a></span> 
               <h3><span class="anchor_wrapper"><a name="GUID-7DAF7FB6-DE7F-48C9-A4AB-1AE4071B61E8"></a></span>Custom Command Workaround
               </h3> 
               <p><span class="anchor_wrapper"><a name="GUID-247D0360-EC3F-45FF-9942-BF9DBBF70001"></a></span>If there is no alternate (compliant) version of the function, your only option for
                  a workaround is to create a VBScript <span class="char_link"><a href="#!/url=./files/cus_cmds.htm">custom command</a></span> to call the non-compliant command and return an array containing both the output
                  arguments and return value.
               </p> 
               <div class="section"><span class="anchor_wrapper"><a name="WS9C9BD4629A5724409D1790B9C5DB9AC3-001D"></a></span> 
                  <h4><span class="anchor_wrapper"><a name="GUID-6050EC90-E66B-48FC-8B10-5CD91014EA55"></a></span>VBScript Example: Define the Work around Command
                  </h4> 
                  <p><span class="anchor_wrapper"><a name="GUID-2FB2C73E-6234-430B-B413-0F50F476598C"></a></span>Note that this snippet contains the <a href="#!/url=./si_cmds/cb_Command_Execute.html">Execute</a> callback for the custom command. See <span class="char_link"><a href="#!/url=./files/vbs_cmd_workaround.htm">Example: Custom Command Workaround for Both Output Arguments and Return Values</a></span> for the full implementation of this plug-in.
                  </p> 
                  <div class="codeBlock"><pre class="prettyprint">
' Execute callback for the custom command
function MyGetSkeleton_Execute( InputObj )
	' Call the GetSkeleton command and pack the output 
	' argument and the return value in an array 
	<a href="javascript:void(0)" data="set" class="a_multireflink">set</a> oSkel = GetSkeleton( InputObj, lIndex )
	aReturn = Array( lIndex, oSkel )

	' Return the array
	MyGetSkeleton_Execute = aReturn 
end function
</pre></div> 
               </div> 
               <div class="section"><span class="anchor_wrapper"><a name="WS9C9BD4629A5724409D1790B9C5DB9AC3-001E"></a></span> 
                  <h4><span class="anchor_wrapper"><a name="GUID-D4FA9349-1ED6-4821-AB7E-874DC57660B2"></a></span>JScript Example: Call the Work around Command
                  </h4> 
                  <div class="codeBlock"><pre class="prettyprint">
' Execute callback for the custom command
function MyGetSkeleton_Execute( InputObj )
	' Call the GetSkeleton command and pack the output 
	' argument and the return value in an array 
	<a href="javascript:void(0)" data="set" class="a_multireflink">set</a> oSkel = GetSkeleton( InputObj, lIndex )
	aReturn = Array( lIndex, oSkel )

	' Return the array
	MyGetSkeleton_Execute = aReturn 
end function
</pre></div> 
                  <h4><span class="anchor_wrapper"><a name="GUID-7B714B3E-44E8-430C-A1AE-EF8EB1084085"></a></span>JScript Example: Call the Work around Command
                  </h4> 
                  <div class="codeBlock"><pre class="prettyprint">
NewScene( null, false );

Create2DSkeleton( -3.004, 2.152, 0.000, -1.531, -1.163, 0.000, 0.000, 0.000, 1.000, 1 );
AppendBone( "eff", 0.853, 1.396, 0.000 );
AppendBone( "eff", 2.578, -1.532, 0.000 );

// Returns a VBArray, which must be converted to a JS Array
var RtnArray = MyGetSkeleton( "bone1" ).toArray();

// The output argument is the first item (a Long)
var MyObjIndex = RtnArray[0];
LogMessage( "Index of objects in skeleton: " + MyObjIndex );

// The return value is the second item (XSICollection)
var MySkeleton = RtnArray[1];
for ( i=0; i&lt;MySkeleton.Count; i++ ) {
	LogMessage( "Item[" + i + "] = " + MySkeleton(i) );
}

// So both are available now in JScript
// INFO : Index of objects in skeleton: 2
// INFO : Item[0] = root
// INFO : Item[1] = bone
// INFO : Item[2] = bone1
// INFO : Item[3] = bone2
// INFO : Item[4] = eff
</pre></div> 
               </div> 
            </div> 
         </div>
         <div class="footer-block"><a href="../html/ac.cmtdialog.htm" class="comments-anchor" target="_blank"><span class="comments-link">Please send us your comment about this page</span></a></div><br /><p class="footer-license-block"><a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank"><img alt="Creative Commons License" style="border-width: 0;" src="../images/ccLink.png" /></a>&nbsp;<em>Except where otherwise noted, this work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</a>. Please see the <a href="http://autodesk.com/creativecommons" target="_blank">Autodesk Creative Commons FAQ</a> for more information.</em></p><br /></div>
   </div></body>
</html>