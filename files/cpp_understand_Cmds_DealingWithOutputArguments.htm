<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<!-- saved from url=(0024)http://docs.autodesk.com -->
<html>
   <head>
<link href="../style/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="../scripts/prettify.js"></script><script src="../scripts/lib/jquery-1.9.1.min.js" type="text/javascript"></script>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta name="product" content="SI" />
      <meta name="release" content="2015" />
      <meta name="book" content="Developer" />
      <meta name="created" content="2014-03-13" />
      <meta name="topicid" content="GUID-EBA07246-40E7-4118-AFB8-84E5D4633026" />
      <meta name="indexterm" content="output parameters: accessing in the C++ API" />
      <meta name="indexterm" content="parameters: returning output parameters: C++ API" />
      <meta name="indexterm" content="returning output parameters (C++ API)" />
      <meta name="indexterm" content="commands: returning output parameters (C++ API)" />
      <meta name="topic-type" content="concept" />
      <title>Dealing with Output Arguments</title><script type="text/javascript" src="../scripts/utils/adsk.redirect.js"></script></head>
   <body height="100%"><div class="body_content" id="body-content"><script>$(document).ready(function() { yepnope.injectJs("./scripts/ac_common.js"); });</script><script type="text/javascript">var reflinkid = "si_cpp"; var reflinkdata = new Array(); function closeRefLinkDiv() { }; $(document).on('click', function() { closeRefLinkDiv(); } );</script><script>$(document).ready(function() { yepnope.injectJs("./scripts/multireflink.js"); });</script><script>$(document).ready(function () { prettyPrint(); } );</script><script>$("div#WidgetFloaterPanels,link[href*='microsofttranslator.com'],script[src*='microsofttranslator.com'],script[src*='bing.com']").remove();</script><script type='text/javascript'>$("div#navigation,div#breadcrumbs,div#banner").attr("translate","no"); var mtLocation = ((location && location.href && location.href.indexOf('https') == 0)?'https://ssl.microsofttranslator.com':'http://www.microsofttranslator.com')+'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages='; yepnope.injectJs(mtLocation, function() {}, { charset:'utf-8', type:'text/javascript' } );</script><script type="text/javascript">
 </script><!-- begin MT -->
            
            <div id='MicrosoftTranslatorWidget' class='Dark' style='position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden'></div><div id="reflinkdiv" style="display:none; font-family: 'RobotoRegular', Arial, Tahoma, sans-serif; visibility:hidden; position:absolute; z-index:40001; padding:5px; border-style:solid; border-width:1px; border-color:#666666; background-color:#dfdfdf; overflow:visible"></div>
      <div><span class="anchor_wrapper"><a name="GUID-EBA07246-40E7-4118-AFB8-84E5D4633026"></a></span><div class="head">
            <h1>Dealing with Output Arguments</h1>
         </div>
         <div class="bodyProcess">
            <p><span class="anchor_wrapper"><a name="GUID-679830AD-71C8-4C2F-8F9D-6FFED468B9A6"></a></span>Softimage uses <span class="char_link"><a href="#!/url=./files/OutArgDefined.htm">output arguments</a></span> in some of its scripting commands, such as <a href="#!/url=./si_cmds/AddProp.html">AddProp</a>, <a href="#!/url=./si_cmds/GetFCurveInfo.html">GetFCurveInfo</a>, and <a href="#!/url=./si_cmds/SICreateImageClip.html">SICreateImageClip</a>. Although C++ supports output arguments, the updated value is contained inside the
               <a href="#!/url=./si_cpp/classXSI_1_1CValueArray.html">CValueArray</a> that got passed in, not inside any variable that might have been used to initialize
               the value:
            </p>
            <div class="codeBlock"><pre class="prettyprint">
Application app;

// Trying to get output arguments via the variable
Camera cam;
Null camInt;

CValue retVal;
CValueArray inArgs(8);
inArgs[0]	= L"Telephoto";
inArgs[1]	= L"MyCamera";
inArgs[4]	= cam;
inArgs[5]	= camInt;
app.ExecuteCommand( L"SIGetPrimCamera", inArgs, retVal );

// Testing the 'output' arguments to see if they're valid
if ( cam.GetRef().IsValid() ) {
	app.LogMessage( cam.GetName() + L" is valid" );
} else {
	app.LogMessage( L"'cam' is not valid" );
}

if ( camInt.GetRef().IsValid() ) {
	app.LogMessage( camInt.GetName() + L" is valid" );
} else {
	app.LogMessage( L"'camInt' is not valid" );
}

/* The following is logged to history:
'INFO : 'cam' is not valid
'INFO : 'camInt' is not valid
*/
</pre></div>
            <p><span class="anchor_wrapper"><a name="GUID-708B81F9-E625-459B-9D26-59B9B1415F5B"></a></span>To extract an output argument, you get it from the input argument array (<a href="#!/url=./si_cpp/classXSI_1_1CValueArray.html">CValueArray</a>) and from there you can convert each member of the array from the <a href="#!/url=./si_cpp/classXSI_1_1CValue.html">CValue</a> to its proper data type or class:
            </p>
            <div class="codeBlock"><pre class="prettyprint">
Application app;

CValue retVal;
CValueArray inArgs(8);
inArgs[0]	= L"Telephoto";
inArgs[1]	= L"MyCamera";
inArgs[4]	= CValue(); // newly created Camera and Interest are returned as output arguments
inArgs[5]	= CValue();
app.ExecuteCommand( L"SIGetPrimCamera", inArgs, retVal );

// The camera is in inArgs[4] and its interest in inArgs[5]
Camera cam( inArgs[4] );
Null camInt( inArgs[5] );

app.LogMessage( cam.GetName() + L" is at position " 
	+ CString(cam.GetParameterValue(L"posx")) + L"," 
	+ CString(cam.GetParameterValue(L"posy")) + L"," 
	+ CString(cam.GetParameterValue(L"posz")) 
);

app.LogMessage( camInt.GetName() + L" is at position " 
	+ CString(camInt.GetParameterValue(L"posx")) + L"," 
	+ CString(camInt.GetParameterValue(L"posy")) + L"," 
	+ CString(camInt.GetParameterValue(L"posz")) 
);

/* The following is logged to history:
'INFO : Number of output arguments in the returned array: 4
'INFO : MyCamera is at position 0,2,20
'INFO : CameraInterest is at position 0,0,0
*/
</pre></div>
            <div><span class="anchor_wrapper"><a name="GUID-7E3215FC-1CCA-404A-9254-49F7270A676F"></a></span><div class="note-tip"><span class="label">TIP:</span> 
                  <p><span class="anchor_wrapper"><a name="GUID-2D92C602-D8AE-46ED-B20E-27B5ECBF8F30"></a></span>An easy alternative to using the <a href="#!/url=./si_cpp/classXSI_1_1Application.html#ExecuteCommand">Application::ExecuteCommand</a> function is to generate command stubs using <em class="strong">the cmdstubs_generator.js</em> utility under the &lt;<span class="filePath" translate="no">factory location&gt;\XSISDK\utils\cmdstubs</span> directory. See the help page in that same folder for more information.
                  </p> 
               </div>
            </div>
         </div>
         <div class="footer-block"><a href="../html/ac.cmtdialog.htm" class="comments-anchor" target="_blank"><span class="comments-link">Please send us your comment about this page</span></a></div><br /><p class="footer-license-block"><a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank"><img alt="Creative Commons License" style="border-width: 0;" src="../images/ccLink.png" /></a>&nbsp;<em>Except where otherwise noted, this work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</a>. Please see the <a href="http://autodesk.com/creativecommons" target="_blank">Autodesk Creative Commons FAQ</a> for more information.</em></p><br /></div>
   </div></body>
</html>