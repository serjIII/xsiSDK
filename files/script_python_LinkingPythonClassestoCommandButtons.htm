<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<!-- saved from url=(0024)http://docs.autodesk.com -->
<html>
   <head>
<link href="../style/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="../scripts/prettify.js"></script><script src="../scripts/lib/jquery-1.9.1.min.js" type="text/javascript"></script>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta name="product" content="SI" />
      <meta name="release" content="2015" />
      <meta name="book" content="Developer" />
      <meta name="created" content="2014-03-13" />
      <meta name="topicid" content="GUID-CC734E64-56B9-4A3A-9828-9C9C7EDB3EA4" />
      <meta name="topic-type" content="concept" />
      <title>Linking Python Classes to Command Buttons</title><script type="text/javascript" src="../scripts/utils/adsk.redirect.js"></script></head>
   <body height="100%"><div class="body_content" id="body-content"><script>$(document).ready(function() { yepnope.injectJs("./scripts/ac_common.js"); });</script><script type="text/javascript">var reflinkid = "si_cpp"; var reflinkdata = new Array(); function closeRefLinkDiv() { }; $(document).on('click', function() { closeRefLinkDiv(); } );</script><script>$(document).ready(function() { yepnope.injectJs("./scripts/multireflink.js"); });</script><script>$(document).ready(function () { prettyPrint(); } );</script><script>$("div#WidgetFloaterPanels,link[href*='microsofttranslator.com'],script[src*='microsofttranslator.com'],script[src*='bing.com']").remove();</script><script type='text/javascript'>$("div#navigation,div#breadcrumbs,div#banner").attr("translate","no"); var mtLocation = ((location && location.href && location.href.indexOf('https') == 0)?'https://ssl.microsofttranslator.com':'http://www.microsofttranslator.com')+'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages='; yepnope.injectJs(mtLocation, function() {}, { charset:'utf-8', type:'text/javascript' } );</script><script type="text/javascript">
 </script><!-- begin MT -->
            
            <div id='MicrosoftTranslatorWidget' class='Dark' style='position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden'></div><div id="reflinkdiv" style="display:none; font-family: 'RobotoRegular', Arial, Tahoma, sans-serif; visibility:hidden; position:absolute; z-index:40001; padding:5px; border-style:solid; border-width:1px; border-color:#666666; background-color:#dfdfdf; overflow:visible"></div>
      <div><span class="anchor_wrapper"><a name="GUID-CC734E64-56B9-4A3A-9828-9C9C7EDB3EA4"></a></span><div class="head">
            <h1>Linking Python Classes to Command Buttons</h1>
         </div>
         <div class="bodyProcess">
            <p><span class="anchor_wrapper"><a name="GUID-6FF0A31F-1A70-4CEC-A5EC-A04F57C93667"></a></span>For the most part, associating Python scripts to buttons is done much the same way
               as with any other scripting language: you can assign any command to a button, and
               if you drag a code snippet from the Script Editor onto a toolbar, Softimage handles
               the conversion from snippet to command.
            </p>
            <p><span class="anchor_wrapper"><a name="GUID-EDB7D435-A807-4EF4-A80A-B28DE6CB1C93"></a></span>You can even use classes in your commands or code snippets; however, you cannot use
               a class constructor as the Handler for your command. To initialize the class, use
               a dummy procedure such as in the following example:
            </p>
            <div class="codeBlock"><pre class="prettyprint">
#-------------------------------------------------------------------------
class MyMsg:
	"""Testing of Classes within Softimage Environment"""
	def __init__(self, First="3D", Last="Artist"):
		self.f = First
		self.l = Last
		Application.LogMessage("Hello, %s %s, MyMsg!" %(self.f, self.l))

	def first(self):
		Application.LogMessage("%s, First Method is a go!" % (self.f))
	def second(self):
		Application.LogMessage("%s, Second Method is a go!" %(self.f))
	def third(self):
		pass

#-----------------------------------------------------------------------
#initialize the class and methods
def TestPython():
	parent = MyMsg("Daffy", "Duck")
	parent.first()
	parent.second()
#-----------------------------------------------------------------------
</pre></div>
         </div>
         <div class="footer-block"><a href="../html/ac.cmtdialog.htm" class="comments-anchor" target="_blank"><span class="comments-link">Please send us your comment about this page</span></a></div><br /><p class="footer-license-block"><a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank"><img alt="Creative Commons License" style="border-width: 0;" src="../images/ccLink.png" /></a>&nbsp;<em>Except where otherwise noted, this work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</a>. Please see the <a href="http://autodesk.com/creativecommons" target="_blank">Autodesk Creative Commons FAQ</a> for more information.</em></p><br /></div>
   </div></body>
</html>