<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<!-- saved from url=(0024)http://docs.autodesk.com -->
<html>
   <head>
<link href="../style/prettify.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="../scripts/prettify.js"></script><script src="../scripts/lib/jquery-1.9.1.min.js" type="text/javascript"></script>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <meta name="product" content="SI" />
      <meta name="release" content="2015" />
      <meta name="book" content="Developer" />
      <meta name="created" content="2014-03-13" />
      <meta name="topicid" content="GUID-3C30A05D-E78A-431C-A8F8-05BE02BA1ECC" />
      <meta name="topic-type" content="concept" />
      <title>Object Model Examples</title><script type="text/javascript" src="../scripts/utils/adsk.redirect.js"></script></head>
   <body height="100%"><div class="body_content" id="body-content"><script>$(document).ready(function() { yepnope.injectJs("./scripts/ac_common.js"); });</script><script type="text/javascript">var reflinkid = "si_cpp"; var reflinkdata = new Array(); function closeRefLinkDiv() { }; $(document).on('click', function() { closeRefLinkDiv(); } );</script><script>$(document).ready(function() { yepnope.injectJs("./scripts/multireflink.js"); });</script><script>$(document).ready(function () { prettyPrint(); } );</script><script>$("div#WidgetFloaterPanels,link[href*='microsofttranslator.com'],script[src*='microsofttranslator.com'],script[src*='bing.com']").remove();</script><script type='text/javascript'>$("div#navigation,div#breadcrumbs,div#banner").attr("translate","no"); var mtLocation = ((location && location.href && location.href.indexOf('https') == 0)?'https://ssl.microsofttranslator.com':'http://www.microsofttranslator.com')+'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages='; yepnope.injectJs(mtLocation, function() {}, { charset:'utf-8', type:'text/javascript' } );</script><script type="text/javascript">
 reflinkdata.push(["FCurveKey", "si_cpp/classXSI_1_1FCurveKey.html", "C++ API Reference", "../"]); 
reflinkdata.push(["index", "si_cpp/group__RenderMapDefine.html#gadca2b0ae15c62d8023e6645c3404056c", "C++ API Reference", "../"]); 
reflinkdata.push(["set", "si_cpp/group__RenderMapDefine.html#ga793ad1cfa149967fe4b97fc66251b831", "C++ API Reference", "../"]); 
</script><!-- begin MT -->
            
            <div id='MicrosoftTranslatorWidget' class='Dark' style='position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden'></div><div id="reflinkdiv" style="display:none; font-family: 'RobotoRegular', Arial, Tahoma, sans-serif; visibility:hidden; position:absolute; z-index:40001; padding:5px; border-style:solid; border-width:1px; border-color:#666666; background-color:#dfdfdf; overflow:visible"></div>
      <div><span class="anchor_wrapper"><a name="GUID-3C30A05D-E78A-431C-A8F8-05BE02BA1ECC"></a></span><div class="head">
            <h1>Object Model Examples</h1>
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="SECTION_EB8D416BC0A1430189A091E0A1CDB72C"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-FCB5129B-0AFA-4EE8-AD10-0877A0945A41"></a></span> Enumerating Properties
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-963647AB-DE60-4017-9018-74C3CDB5A907"></a></span>The following example shows how to enumerate the properties. 
               <div class="codeBlock"><pre class="prettyprint">oDefaultLight = Application.ActiveSceneRoot.Children( "light" )    
    
for oProp in oDefaultLight.Properties:   
    Application.LogMessage( oProp.Name )   
   
</pre></div> 
            </p> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="SECTION_1C3D47DEC5BD4D51AD1C767215FD0BBB"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-98850F07-657A-48D5-BB48-4CBA0C16862C"></a></span>Enumerating Edges
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-A15BEEFE-1A15-42AA-AD8E-7C01FAFDE933"></a></span>The following example shows how to enumerate the edges. 
               <div class="codeBlock"><pre class="prettyprint">oObj = Application.ActiveSceneRoot.AddGeometry("Cone","MeshSurface")
oEdges = oObj.ActivePrimitive.Geometry.Edges

for oEdge in oEdges:
	   <a href="javascript:void(0)" data="index" class="a_multireflink">index</a> = oEdge.Index
	   Application.LogMessage( "Found edge %d" % <a href="javascript:void(0)" data="index" class="a_multireflink">index</a> )</pre></div> 
            </p> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="SECTION_BE93DBEFAD3F48BE914E235CC550988B"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-946D4D57-B8BD-409F-B162-F2FB267E02F0"></a></span>Using the Math Library from Python 
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-51E04604-4244-4AE9-A8C1-4ED5DE63C7E7"></a></span>The following example shows how to use the math library. 
               <div class="codeBlock"><pre class="prettyprint">v3 = XSIMath.CreateVector3()	

#Vector can be <a href="javascript:void(0)" data="set" class="a_multireflink">set</a> using its properties
v3.X = 10.0

#Or using this method
v3.Set( 10.0, 20.0, 30.0)

#Vector3 has many convenient methods
v3.ScaleInPlace(2)

#Read the vector values
x=0
y=0
z=0
x, y, z = v3.Get(x,y,z)
valstr = '%(x).2f %(y).2f %(z).2f' % vars()

Application.LogMessage( valstr ) ;</pre></div> 
            </p> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="SECTION_92E54E486EFD4C1CBFFC241607E3A3AE"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-CC002D87-F76E-4571-AA29-1FF11EE24696"></a></span>Representing the Arrays as Tuples
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-A5F3FD59-5C5D-45E5-98AB-BFC54893B8CB"></a></span>The following example shows how the arrays are represented as tuples. 
               <div class="codeBlock"><pre class="prettyprint">oObject = Application.ActiveSceneRoot.AddGeometry( "Grid","MeshSurface","PolyMeshGetTest" )
	
Application.SetValue(str(oObject) + ".polymsh.geom.subdivu", 1, "")
Application.SetValue(str(oObject) + ".polymsh.geom.subdivv", 1, "")

oGeometry = oObject.ActivePrimitive.Geometry

aReturnArray = oGeometry.Get2() ;

Application.LogMessage( repr(aReturnArray) ) ;

aVertices = aReturnArray[0]		# 2D array of x,y,z
aPolydata = aReturnArray[1]

Application.LogMessage( repr(aVertices) ) ;
Application.LogMessage( repr(aPolydata) ) ;</pre></div> 
            </p> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="SECTION_0D57491C73504DBAA511D2D28ED6829E"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-B0366E2A-E07A-4429-8C90-07CE7B85C380"></a></span>Converting a Tuple to a List
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-C6407BA7-BB7B-487C-AB9B-6C3B9C78D3C8"></a></span>If you want to modify array data that has more than one dimension such as, XYZ, UVW,
               or RGBA, you need to know how to convert from the immutable tuple returned by Softimage
               to a flattened mutable list. The following example shows how to convert the tuple.
               
               <div class="codeBlock"><pre class="prettyprint">import win32com.client
from win32com.client import constants
import sys

xsi = Application
true=1
false=0

def main():
    Test1()

# test1: turn a tuple into  a list
def Test1():
    # immutable tuple i.e. read-only
    print "1 dimensional tuple example" 
    w_tuple = ('W1','W2','W3','W4','W5')
    print repr(w_tuple) 
  
    w_list = [w for w in w_tuple]
    print  repr(w_list)
  
    w_tuple = (0.25,0.26,0.27,0.28,0.29)
    print repr(w_tuple) 
  
    w_list = [1.0-w for w in w_tuple]
    print  repr(w_list)
  
    print "2 dimensional tuple example (such as XYZ)" 
    w_tuple = (('X1','X2','X3','X4'),('Y1','Y2','Y3','Y4'),('Z1','Z2','Z3','Z4'))
    print repr(w_tuple) 
  
    w_list = [w_tuple[j][i] for i in range(len(w_tuple[0])) for j in range(len(w_tuple)) ]
    print  repr(w_list)
  
 
# test2: turn a weightmap tuple into a list, invert and <a href="javascript:void(0)" data="set" class="a_multireflink">set</a> back
def Test2():
    obj = xsi.ActiveSceneRoot.AddGeometry( "Sphere", "MeshSurface", "TupleTest2" )
    wmap = xsi.CreateWeightMap("WeightMap", obj , "Weight Map", "Weight Map Property", false)(0)
    
    # get weightmap as tuple
    w_tuple = wmap.Elements.Array
    print "wmap as tuple: " + repr(w_tuple)
    
    # convert to list and invert
    w_list = [ 1-w for w in w_tuple[0] ]
    print "wmap as inverted list: " + repr(w_list)
   
    # <a href="javascript:void(0)" data="set" class="a_multireflink">set</a> weightmap as list
    wmap.Elements.Array = w_list
    
# test3: turn a uvw tuple into a list, invert and <a href="javascript:void(0)" data="set" class="a_multireflink">set</a> back
def Test3():
    obj = xsi.ActiveSceneRoot.AddGeometry( "Cube", "MeshSurface", "TupleTest3" )
    xsi.GenerateUniqueUVs(obj, "Texture_Projection", "", "", "", "", "", "", "")

    mesh = obj.ActivePrimitive.Geometry
    cluster= mesh.Clusters.Filter( "sample" )(0)
    uvw = cluster.Properties.Filter("uvspace")(0)
    
    uvw_tuple = uvw.Elements.Array
    print "uvw tuple: " + repr(uvw_tuple)
    
    uvw_list = [1-uvw_tuple[j][i] for i in range(len(uvw_tuple[0])) for j in range(len(uvw_tuple)) ]
    print "uvw list: " + repr(uvw_list)
    
    uvw.Elements.Array = uvw_list
    
def XSITuple_toList(_tuple):
    return [_tuple[j][i] for i in range(len(_tuple[0])) for j in range(len(_tuple)) ]
    
if __name__=='__ax_main__':
    class WritableObject:
        def __init__(self):
            self.content = ""
        def write(self, string):
            if (string=='\n'):
                Application.Logmessage(self.content,32)
                self.content=""
            else:
                self.content+=string

    # example with redirection of sys.stdout
    sys.stdout = WritableObject()
    
main() 
	</pre></div> 
            </p> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="SECTION_272AFD4BD12F42189BED1EF737A9B998"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-D75194C7-3449-4345-8995-CA8D2FA4AB1D"></a></span>Creating a Clip
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-D7996C99-7D44-444C-A258-BC500A865862"></a></span>The following example shows how to create a clip containing the static values of the
               local position of an object. 
               <div class="codeBlock"><pre class="prettyprint">oRoot = Application.ActiveSceneRoot
oCube = oRoot.AddGeometry( "Cube", "MeshSurface" )

# Creating the first animation source
sParams = "cube.kine.local.posx,cube.kine.local.posy,cube.kine.local.posz"
oSource = Application.StoreAction( oRoot, sParams, 1, "StoredStaticPose", 1, 1, 5, 0, 0) 

# Creating the first clip
oClip = Application.AddClip( oRoot, oSource )	
Application.LogMessage( "First created clip " + oClip.FullName )

# Creating the second animation source
oCube.Parameters("posx").Value = 3.0
oSource2 = Application.StoreAction( oRoot, sParams, 1, "StoredStaticPose", 1, 7, 9, 0, 0 )

# Creating the second clip
oClip2 = Application.AddClip(oRoot, oSource2)
Application.LogMessage("Second created clip " + oClip2.FullName)</pre></div> 
            </p> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="SECTION_C670A1D8A1CF49339B395BEF5DAA8795"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-3D552BCF-75F2-48AF-8E3A-F811B0FFDE4E"></a></span>Accessing Geometry
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-27A1B8AB-DF91-4245-A7DF-F2D24372DD49"></a></span>The following example shows how to get the position of a point at a specific time
               frame. 
               <div class="codeBlock"><pre class="prettyprint"># Import the constants 
from win32com.client import constants as c

import sys, types

Application.NewScene("", 0)
oGrid = Application.ActiveSceneRoot.AddGeometry( "Grid", "MeshSurface" )
Application.SetValue (oGrid.Name + ".polymsh.geom.subdivu", 1)
Application.SetValue (oGrid.Name + ".polymsh.geom.subdivv", 1)
Application.Scale( oGrid, 0.25, 0.25, 0.25, c.siAbsolute, c.siParent, c.siObj, c.siXYZ)

startTimeInSeconds = 5 / 29.97
duration = startTimeInSeconds * 2

# Start at frame 5 &amp; last 100 frames
oClip = oGrid.ActivePrimitive.Geometry.SaveShapeKey( 
				startTimeInSeconds, 
				duration, 
				c.siShapeAbsoluteReferenceMode, 
				c.siShapeInstanceOnlyMode, 
				"Clip", ( 0,1,2,3), 
				( -4,0,-4, 
				  -4,0, 4, 
				   4,0, 0, 
				   4,0, 4 ))

# Frame 3 must be the original grid
oPoints = oGrid.ActivePrimitive.GetGeometry2(3,c.siConstructionModeSecondaryShape).Points
oPos = oPoints[2].Position
Application.LogMessage( "%f,%f,%f" % ( oPos.X,oPos.Y,oPos.Z ) )

# Frame 10 must be the modified grid in the clip
oPoints = oGrid.ActivePrimitive.GetGeometry2(10).Points
oPos = oPoints[2].position
Application.LogMessage( "%f,%f,%f" % ( oPos.X,oPos.Y,oPos.Z ) )
</pre></div> 
            </p> 
         </div>
         <div class="section"><span class="anchor_wrapper"><a name="SECTION_92069C0F3693498D8A53F1BBCB8A1ADC"></a></span> 
            <h2><span class="anchor_wrapper"><a name="GUID-820CD8EC-18E9-408D-AA99-B4B6EE7E1CD9"></a></span>Setting and Getting FCurve Keys
            </h2> 
            <p><span class="anchor_wrapper"><a name="GUID-0D1EEA7C-AA6A-495D-BC7C-6444AC41667B"></a></span>This example demonstrates how to set an fcurve on the <span class="code" translate="no">posx</span> parameter and how to access the keys through the <span class="code" translate="no"><a href="javascript:void(0)" data="FCurveKey" class="a_multireflink">FCurveKey</a></span> object. 
               <div class="codeBlock"><pre class="prettyprint">Application.NewScene( "", 0 )

oRoot = Application.ActiveProject.ActiveScene.Root
oNull = oRoot.AddNull()
oPosX = oNull.posx

# Create and connect an fcurve to the position x
oFCurve = oPosX.AddFCurve2( [1, 10, 50, 0, 100, 10] )

# Set the zero slopes on the key tangents
oFCurve.SetKeyTangents( [ 
	-10.5, 0, 10.5, 0, 
	-10.5, 0, 10.5, 0, 
	-10.5, 0, 10.5, 0 
])

# Get the keys on the fcurve
for oFCKey in oFCurve.Keys :
    Application.LogMessage( "oFCKey[" + str(oFCKey.Index) + "] at frame " + str(oFCKey.Time) + " = " + str(oFCKey.Value) )
</pre></div> 
            </p> 
         </div>
         <div class="footer-block"><a href="../html/ac.cmtdialog.htm" class="comments-anchor" target="_blank"><span class="comments-link">Please send us your comment about this page</span></a></div><br /><p class="footer-license-block"><a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank"><img alt="Creative Commons License" style="border-width: 0;" src="../images/ccLink.png" /></a>&nbsp;<em>Except where otherwise noted, this work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</a>. Please see the <a href="http://autodesk.com/creativecommons" target="_blank">Autodesk Creative Commons FAQ</a> for more information.</em></p><br /></div>
   </div></body>
</html>